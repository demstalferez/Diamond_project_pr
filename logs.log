2022-07-27 18:17:38,523:INFO:PyCaret Supervised Module
2022-07-27 18:17:38,523:INFO:ML Usecase: classification
2022-07-27 18:17:38,523:INFO:version 2.3.10
2022-07-27 18:17:38,523:INFO:Initializing setup()
2022-07-27 18:17:38,524:INFO:setup(target=price, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=['carat', 'clarity', 'depth', 'table', 'x', 'y', 'z'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 18:17:38,524:INFO:Checking environment
2022-07-27 18:17:38,524:INFO:python_version: 3.8.10
2022-07-27 18:17:38,524:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 18:17:38,524:INFO:machine: x86_64
2022-07-27 18:17:38,538:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 18:17:38,538:INFO:Memory: svmem(total=16699224064, available=2199203840, percent=86.8, used=13970862080, free=613945344, active=12435283968, inactive=2567409664, buffers=315355136, cached=1799061504, shared=179777536, slab=650567680)
2022-07-27 18:17:38,555:INFO:Physical Core: 6
2022-07-27 18:17:38,555:INFO:Logical Core: 12
2022-07-27 18:17:38,555:INFO:Checking libraries
2022-07-27 18:17:38,556:INFO:pd==1.4.3
2022-07-27 18:17:38,556:INFO:numpy==1.23.1
2022-07-27 18:17:38,556:INFO:sklearn==0.23.2
2022-07-27 18:17:38,556:INFO:lightgbm==3.3.2
2022-07-27 18:17:38,874:INFO:catboost==1.0.6
2022-07-27 18:17:38,874:INFO:xgboost==1.6.1
2022-07-27 18:17:38,875:INFO:mlflow==1.27.0
2022-07-27 18:17:38,875:INFO:Checking Exceptions
2022-07-27 18:17:38,875:INFO:Declaring global variables
2022-07-27 18:17:38,875:INFO:USI: 37b3
2022-07-27 18:17:38,875:INFO:pycaret_globals: {'log_plots_param', 'fold_groups_param_full', 'X_train', 'experiment__', 'X_test', 'stratify_param', 'transform_target_method_param', '_all_models_internal', 'target_param', 'imputation_classifier', 'fold_generator', 'pycaret_globals', 'data_before_preprocess', '_all_metrics', 'fold_groups_param', '_all_models', 'exp_name_log', 'y_test', 'transform_target_param', 'fold_param', 'imputation_regressor', 'html_param', 'fix_imbalance_param', 'dashboard_logger', 'X', 'gpu_param', 'n_jobs_param', 'display_container', 'fold_shuffle_param', 'create_model_container', '_ml_usecase', '_gpu_n_jobs_param', 'prep_pipe', 'USI', 'master_model_container', 'fix_imbalance_method_param', 'seed', '_internal_pipeline', 'y', 'y_train', 'logging_param', '_available_plots', 'iterative_imputation_iters_param'}
2022-07-27 18:17:38,875:INFO:Preparing display monitor
2022-07-27 18:17:38,875:INFO:Preparing display monitor
2022-07-27 18:17:38,882:INFO:Importing libraries
2022-07-27 18:17:38,883:INFO:Copying data for preprocessing
2022-07-27 18:17:38,891:INFO:Declaring preprocessing parameters
2022-07-27 18:17:38,895:INFO:Creating preprocessing pipeline
2022-07-27 18:17:38,936:INFO:Preprocessing pipeline created successfully
2022-07-27 18:17:38,936:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 18:17:38,936:INFO:Creating global containers
2022-07-27 18:17:38,937:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 18:18:34,761:INFO:PyCaret Supervised Module
2022-07-27 18:18:34,762:INFO:ML Usecase: classification
2022-07-27 18:18:34,762:INFO:version 2.3.10
2022-07-27 18:18:34,762:INFO:Initializing setup()
2022-07-27 18:18:34,762:INFO:setup(target=price, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=['carat', 'clarity', 'depth', 'table', 'x', 'y', 'z'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 18:18:34,762:INFO:Checking environment
2022-07-27 18:18:34,762:INFO:python_version: 3.8.10
2022-07-27 18:18:34,762:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 18:18:34,762:INFO:machine: x86_64
2022-07-27 18:18:34,772:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 18:18:34,772:INFO:Memory: svmem(total=16699224064, available=6365310976, percent=61.9, used=9822740480, free=4915228672, active=8086478848, inactive=2668101632, buffers=314966016, cached=1646288896, shared=162091008, slab=646987776)
2022-07-27 18:18:34,773:INFO:Physical Core: 6
2022-07-27 18:18:34,773:INFO:Logical Core: 12
2022-07-27 18:18:34,773:INFO:Checking libraries
2022-07-27 18:18:34,773:INFO:pd==1.4.3
2022-07-27 18:18:34,773:INFO:numpy==1.22.4
2022-07-27 18:18:34,773:INFO:sklearn==0.23.2
2022-07-27 18:18:34,773:INFO:lightgbm==3.3.2
2022-07-27 18:18:35,039:INFO:catboost==1.0.6
2022-07-27 18:18:35,039:INFO:xgboost==1.6.1
2022-07-27 18:18:35,039:INFO:mlflow==1.27.0
2022-07-27 18:18:35,039:INFO:Checking Exceptions
2022-07-27 18:18:35,039:INFO:Declaring global variables
2022-07-27 18:18:35,039:INFO:USI: 8ebf
2022-07-27 18:18:35,039:INFO:pycaret_globals: {'_ml_usecase', '_internal_pipeline', 'experiment__', '_available_plots', 'html_param', 'y_train', 'fold_groups_param', '_all_models', 'imputation_classifier', 'prep_pipe', 'n_jobs_param', 'X', 'stratify_param', 'logging_param', 'iterative_imputation_iters_param', 'transform_target_param', 'transform_target_method_param', 'imputation_regressor', 'target_param', 'X_train', 'fold_generator', 'y', 'fold_shuffle_param', 'USI', 'seed', 'fold_groups_param_full', 'dashboard_logger', '_gpu_n_jobs_param', 'y_test', '_all_models_internal', 'data_before_preprocess', 'fix_imbalance_method_param', 'display_container', 'exp_name_log', 'master_model_container', 'gpu_param', '_all_metrics', 'fold_param', 'X_test', 'create_model_container', 'pycaret_globals', 'fix_imbalance_param', 'log_plots_param'}
2022-07-27 18:18:35,039:INFO:Preparing display monitor
2022-07-27 18:18:35,040:INFO:Preparing display monitor
2022-07-27 18:18:35,051:INFO:Importing libraries
2022-07-27 18:18:35,051:INFO:Copying data for preprocessing
2022-07-27 18:18:35,059:INFO:Declaring preprocessing parameters
2022-07-27 18:18:35,065:INFO:Creating preprocessing pipeline
2022-07-27 18:18:35,103:INFO:Preprocessing pipeline created successfully
2022-07-27 18:18:35,103:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 18:18:35,103:INFO:Creating global containers
2022-07-27 18:18:35,104:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 18:20:37,115:INFO:PyCaret Supervised Module
2022-07-27 18:20:37,116:INFO:ML Usecase: classification
2022-07-27 18:20:37,116:INFO:version 2.3.10
2022-07-27 18:20:37,116:INFO:Initializing setup()
2022-07-27 18:20:37,116:INFO:setup(target=price, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=['carat', 'depth', 'table', 'x', 'y', 'z'], remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 18:20:37,116:INFO:Checking environment
2022-07-27 18:20:37,116:INFO:python_version: 3.8.10
2022-07-27 18:20:37,116:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 18:20:37,116:INFO:machine: x86_64
2022-07-27 18:20:37,125:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 18:20:37,126:INFO:Memory: svmem(total=16699224064, available=8634204160, percent=48.3, used=7650091008, free=7581868032, active=6156861440, inactive=2124500992, buffers=173424640, cached=1293840384, shared=65724416, slab=543006720)
2022-07-27 18:20:37,143:INFO:Physical Core: 6
2022-07-27 18:20:37,144:INFO:Logical Core: 12
2022-07-27 18:20:37,144:INFO:Checking libraries
2022-07-27 18:20:37,144:INFO:pd==1.4.3
2022-07-27 18:20:37,144:INFO:numpy==1.22.4
2022-07-27 18:20:37,144:INFO:sklearn==0.23.2
2022-07-27 18:20:37,144:INFO:lightgbm==3.3.2
2022-07-27 18:20:37,428:INFO:catboost==1.0.6
2022-07-27 18:20:37,429:INFO:xgboost==1.6.1
2022-07-27 18:20:37,429:INFO:mlflow==1.27.0
2022-07-27 18:20:37,429:INFO:Checking Exceptions
2022-07-27 18:20:37,429:INFO:Declaring global variables
2022-07-27 18:20:37,429:INFO:USI: d9cb
2022-07-27 18:20:37,430:INFO:pycaret_globals: {'logging_param', '_gpu_n_jobs_param', 'transform_target_param', '_internal_pipeline', 'fix_imbalance_param', '_all_models', 'log_plots_param', 'create_model_container', 'fold_param', 'fold_shuffle_param', 'pycaret_globals', 'experiment__', 'dashboard_logger', 'iterative_imputation_iters_param', 'master_model_container', 'fold_groups_param', 'transform_target_method_param', '_ml_usecase', 'fold_generator', 'y_test', 'USI', 'imputation_regressor', 'y', 'stratify_param', 'imputation_classifier', 'fix_imbalance_method_param', 'y_train', '_available_plots', 'X_train', 'X_test', 'exp_name_log', 'prep_pipe', 'html_param', 'data_before_preprocess', '_all_models_internal', 'X', 'target_param', 'n_jobs_param', '_all_metrics', 'seed', 'gpu_param', 'display_container', 'fold_groups_param_full'}
2022-07-27 18:20:37,430:INFO:Preparing display monitor
2022-07-27 18:20:37,430:INFO:Preparing display monitor
2022-07-27 18:20:37,448:INFO:Importing libraries
2022-07-27 18:20:37,448:INFO:Copying data for preprocessing
2022-07-27 18:20:37,456:INFO:Declaring preprocessing parameters
2022-07-27 18:20:37,461:INFO:Creating preprocessing pipeline
2022-07-27 18:20:37,507:INFO:Preprocessing pipeline created successfully
2022-07-27 18:20:37,508:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 18:20:37,508:INFO:Creating global containers
2022-07-27 18:20:37,508:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 18:23:55,678:INFO:PyCaret Supervised Module
2022-07-27 18:23:55,679:INFO:ML Usecase: classification
2022-07-27 18:23:55,679:INFO:version 2.3.10
2022-07-27 18:23:55,679:INFO:Initializing setup()
2022-07-27 18:23:55,679:INFO:setup(target=price, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=True, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 18:23:55,679:INFO:Checking environment
2022-07-27 18:23:55,679:INFO:python_version: 3.8.10
2022-07-27 18:23:55,679:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 18:23:55,679:INFO:machine: x86_64
2022-07-27 18:23:55,688:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 18:23:55,688:INFO:Memory: svmem(total=16699224064, available=8105963520, percent=51.5, used=8175693824, free=6940884992, active=6557716480, inactive=2312593408, buffers=192479232, cached=1390166016, shared=68116480, slab=551043072)
2022-07-27 18:23:55,707:INFO:Physical Core: 6
2022-07-27 18:23:55,708:INFO:Logical Core: 12
2022-07-27 18:23:55,708:INFO:Checking libraries
2022-07-27 18:23:55,708:INFO:pd==1.4.3
2022-07-27 18:23:55,708:INFO:numpy==1.22.4
2022-07-27 18:23:55,708:INFO:sklearn==0.23.2
2022-07-27 18:23:55,708:INFO:lightgbm==3.3.2
2022-07-27 18:23:56,250:INFO:catboost==1.0.6
2022-07-27 18:23:56,250:INFO:xgboost==1.6.1
2022-07-27 18:23:56,250:INFO:mlflow==1.27.0
2022-07-27 18:23:56,250:INFO:Checking Exceptions
2022-07-27 18:23:56,251:INFO:Declaring global variables
2022-07-27 18:23:56,251:INFO:USI: 0be2
2022-07-27 18:23:56,251:INFO:pycaret_globals: {'transform_target_param', 'seed', 'fold_groups_param_full', 'fix_imbalance_method_param', 'imputation_regressor', 'display_container', 'iterative_imputation_iters_param', 'dashboard_logger', 'transform_target_method_param', 'fold_shuffle_param', 'create_model_container', 'log_plots_param', 'fold_generator', 'USI', 'gpu_param', 'target_param', 'fix_imbalance_param', 'fold_param', '_all_metrics', 'fold_groups_param', 'y', 'prep_pipe', '_all_models', 'master_model_container', 'y_test', 'exp_name_log', 'logging_param', 'X', 'pycaret_globals', '_all_models_internal', 'y_train', 'n_jobs_param', 'html_param', '_gpu_n_jobs_param', 'data_before_preprocess', 'imputation_classifier', '_ml_usecase', '_internal_pipeline', 'X_test', 'X_train', 'experiment__', 'stratify_param', '_available_plots'}
2022-07-27 18:23:56,251:INFO:Preparing display monitor
2022-07-27 18:23:56,251:INFO:Preparing display monitor
2022-07-27 18:23:56,264:INFO:Importing libraries
2022-07-27 18:23:56,264:INFO:Copying data for preprocessing
2022-07-27 18:23:56,272:INFO:Declaring preprocessing parameters
2022-07-27 18:23:56,277:INFO:Creating preprocessing pipeline
2022-07-27 18:23:56,318:INFO:Preprocessing pipeline created successfully
2022-07-27 18:23:56,318:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 18:23:56,318:INFO:Creating global containers
2022-07-27 18:23:56,319:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 18:23:56,789:INFO:Creating grid variables
2022-07-27 18:23:56,810:INFO:create_model_container: 0
2022-07-27 18:23:56,810:INFO:master_model_container: 0
2022-07-27 18:23:56,810:INFO:display_container: 1
2022-07-27 18:23:56,813:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=False, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strat...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-07-27 18:23:56,813:INFO:setup() succesfully completed......................................
2022-07-27 18:25:56,439:INFO:Initializing compare_models()
2022-07-27 18:25:56,439:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 18:25:56,439:INFO:Checking exceptions
2022-07-27 18:25:56,440:INFO:Preparing display monitor
2022-07-27 18:25:56,440:INFO:Preparing display monitor
2022-07-27 18:25:56,458:INFO:Initializing Logistic Regression
2022-07-27 18:25:56,458:INFO:Total runtime is 2.09808349609375e-06 minutes
2022-07-27 18:25:56,465:INFO:SubProcess create_model() called ==================================
2022-07-27 18:25:56,465:INFO:Initializing create_model()
2022-07-27 18:25:56,465:INFO:create_model(estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:25:56,465:INFO:Checking exceptions
2022-07-27 18:25:56,466:INFO:Importing libraries
2022-07-27 18:25:56,466:INFO:Copying training dataset
2022-07-27 18:25:56,468:INFO:Defining folds
2022-07-27 18:25:56,469:INFO:Declaring metric variables
2022-07-27 18:25:56,475:INFO:Importing untrained model
2022-07-27 18:25:56,480:INFO:Logistic Regression Imported succesfully
2022-07-27 18:25:56,492:INFO:Starting cross validation
2022-07-27 18:25:56,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:26:17,311:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 18:26:17,331:WARNING:Traceback (most recent call last):
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 242, in cross_validate
    scores = parallel(
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 1056, in __call__
    self.retrieve()
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2022-07-27 18:26:17,342:INFO:Initializing create_model()
2022-07-27 18:26:17,342:INFO:create_model(estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:26:17,342:INFO:Checking exceptions
2022-07-27 18:26:17,343:INFO:Importing libraries
2022-07-27 18:26:17,345:INFO:Copying training dataset
2022-07-27 18:26:17,353:INFO:Defining folds
2022-07-27 18:26:17,353:INFO:Declaring metric variables
2022-07-27 18:26:17,396:INFO:Importing untrained model
2022-07-27 18:26:17,424:INFO:Logistic Regression Imported succesfully
2022-07-27 18:26:17,483:INFO:Starting cross validation
2022-07-27 18:26:17,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:26:31,212:ERROR:create_model() for lr raised an exception or returned all 0.0:
2022-07-27 18:26:31,227:ERROR:Traceback (most recent call last):
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 242, in cross_validate
    scores = parallel(
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 1056, in __call__
    self.retrieve()
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 242, in cross_validate
    scores = parallel(
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 1056, in __call__
    self.retrieve()
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2022-07-27 18:26:31,228:INFO:Initializing K Neighbors Classifier
2022-07-27 18:26:31,228:INFO:Total runtime is 0.5794868151346843 minutes
2022-07-27 18:26:31,286:INFO:SubProcess create_model() called ==================================
2022-07-27 18:26:31,286:INFO:Initializing create_model()
2022-07-27 18:26:31,286:INFO:create_model(estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:26:31,286:INFO:Checking exceptions
2022-07-27 18:26:31,286:INFO:Importing libraries
2022-07-27 18:26:31,289:INFO:Copying training dataset
2022-07-27 18:26:31,293:INFO:Defining folds
2022-07-27 18:26:31,294:INFO:Declaring metric variables
2022-07-27 18:26:31,299:INFO:Importing untrained model
2022-07-27 18:26:31,305:INFO:K Neighbors Classifier Imported succesfully
2022-07-27 18:26:31,314:INFO:Starting cross validation
2022-07-27 18:26:31,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:26:42,524:INFO:Calculating mean and std
2022-07-27 18:26:42,530:INFO:Creating metrics dataframe
2022-07-27 18:26:42,556:INFO:Uploading results into container
2022-07-27 18:26:42,556:INFO:Uploading model into container now
2022-07-27 18:26:42,556:INFO:create_model_container: 1
2022-07-27 18:26:42,557:INFO:master_model_container: 1
2022-07-27 18:26:42,557:INFO:display_container: 2
2022-07-27 18:26:42,559:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-07-27 18:26:42,559:INFO:create_model() succesfully completed......................................
2022-07-27 18:26:42,969:INFO:SubProcess create_model() end ==================================
2022-07-27 18:26:42,969:INFO:Creating metrics dataframe
2022-07-27 18:26:42,977:INFO:Initializing Naive Bayes
2022-07-27 18:26:42,977:INFO:Total runtime is 0.7753157615661621 minutes
2022-07-27 18:26:42,981:INFO:SubProcess create_model() called ==================================
2022-07-27 18:26:42,982:INFO:Initializing create_model()
2022-07-27 18:26:42,982:INFO:create_model(estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:26:42,982:INFO:Checking exceptions
2022-07-27 18:26:42,982:INFO:Importing libraries
2022-07-27 18:26:42,982:INFO:Copying training dataset
2022-07-27 18:26:42,984:INFO:Defining folds
2022-07-27 18:26:42,984:INFO:Declaring metric variables
2022-07-27 18:26:42,988:INFO:Importing untrained model
2022-07-27 18:26:42,992:INFO:Naive Bayes Imported succesfully
2022-07-27 18:26:43,000:INFO:Starting cross validation
2022-07-27 18:26:43,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:28:13,690:INFO:Calculating mean and std
2022-07-27 18:28:13,691:INFO:Creating metrics dataframe
2022-07-27 18:28:13,695:INFO:Uploading results into container
2022-07-27 18:28:13,695:INFO:Uploading model into container now
2022-07-27 18:28:13,695:INFO:create_model_container: 2
2022-07-27 18:28:13,695:INFO:master_model_container: 2
2022-07-27 18:28:13,695:INFO:display_container: 2
2022-07-27 18:28:13,695:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-07-27 18:28:13,695:INFO:create_model() succesfully completed......................................
2022-07-27 18:28:13,782:INFO:SubProcess create_model() end ==================================
2022-07-27 18:28:13,783:INFO:Creating metrics dataframe
2022-07-27 18:28:13,790:INFO:Initializing Decision Tree Classifier
2022-07-27 18:28:13,790:INFO:Total runtime is 2.288857889175415 minutes
2022-07-27 18:28:13,794:INFO:SubProcess create_model() called ==================================
2022-07-27 18:28:13,794:INFO:Initializing create_model()
2022-07-27 18:28:13,794:INFO:create_model(estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:28:13,794:INFO:Checking exceptions
2022-07-27 18:28:13,794:INFO:Importing libraries
2022-07-27 18:28:13,794:INFO:Copying training dataset
2022-07-27 18:28:13,795:INFO:Defining folds
2022-07-27 18:28:13,796:INFO:Declaring metric variables
2022-07-27 18:28:13,799:INFO:Importing untrained model
2022-07-27 18:28:13,803:INFO:Decision Tree Classifier Imported succesfully
2022-07-27 18:28:13,811:INFO:Starting cross validation
2022-07-27 18:28:13,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:28:27,587:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 18:28:27,619:WARNING:Traceback (most recent call last):
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 242, in cross_validate
    scores = parallel(
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 1056, in __call__
    self.retrieve()
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2022-07-27 18:28:27,641:INFO:Initializing create_model()
2022-07-27 18:28:27,642:INFO:create_model(estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:28:27,642:INFO:Checking exceptions
2022-07-27 18:28:27,642:INFO:Importing libraries
2022-07-27 18:28:27,647:INFO:Copying training dataset
2022-07-27 18:28:27,789:INFO:Defining folds
2022-07-27 18:28:27,790:INFO:Declaring metric variables
2022-07-27 18:28:27,833:INFO:Importing untrained model
2022-07-27 18:28:27,847:INFO:Decision Tree Classifier Imported succesfully
2022-07-27 18:28:27,871:INFO:Starting cross validation
2022-07-27 18:28:27,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:28:41,228:ERROR:create_model() for dt raised an exception or returned all 0.0:
2022-07-27 18:28:41,242:ERROR:Traceback (most recent call last):
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 242, in cross_validate
    scores = parallel(
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 1056, in __call__
    self.retrieve()
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "/home/dm/.local/lib/python3.8/site-packages/pycaret/internal/tabular.py", line 3200, in create_model_supervised
    scores = cross_validate(
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/home/dm/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 242, in cross_validate
    scores = parallel(
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 1056, in __call__
    self.retrieve()
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/parallel.py", line 935, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dm/.local/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2022-07-27 18:28:41,243:INFO:Initializing SVM - Linear Kernel
2022-07-27 18:28:41,243:INFO:Total runtime is 2.74640432993571 minutes
2022-07-27 18:28:41,290:INFO:SubProcess create_model() called ==================================
2022-07-27 18:28:41,291:INFO:Initializing create_model()
2022-07-27 18:28:41,291:INFO:create_model(estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f774fdb92b0>, return_train_score=False, kwargs={})
2022-07-27 18:28:41,291:INFO:Checking exceptions
2022-07-27 18:28:41,291:INFO:Importing libraries
2022-07-27 18:28:41,294:INFO:Copying training dataset
2022-07-27 18:28:41,296:INFO:Defining folds
2022-07-27 18:28:41,296:INFO:Declaring metric variables
2022-07-27 18:28:41,301:INFO:Importing untrained model
2022-07-27 18:28:41,306:INFO:SVM - Linear Kernel Imported succesfully
2022-07-27 18:28:41,315:INFO:Starting cross validation
2022-07-27 18:28:41,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:37:18,089:INFO:PyCaret Supervised Module
2022-07-27 18:37:18,090:INFO:ML Usecase: regression
2022-07-27 18:37:18,090:INFO:version 2.3.10
2022-07-27 18:37:18,090:INFO:Initializing setup()
2022-07-27 18:37:18,090:INFO:setup(target=price, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 18:37:18,090:INFO:Checking environment
2022-07-27 18:37:18,090:INFO:python_version: 3.8.10
2022-07-27 18:37:18,090:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 18:37:18,090:INFO:machine: x86_64
2022-07-27 18:37:18,099:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 18:37:18,099:INFO:Memory: svmem(total=16699224064, available=11688669184, percent=30.0, used=4554469376, free=8417628160, active=5427462144, inactive=1899671552, buffers=493559808, cached=3233566720, shared=113303552, slab=689627136)
2022-07-27 18:37:18,118:INFO:Physical Core: 6
2022-07-27 18:37:18,118:INFO:Logical Core: 12
2022-07-27 18:37:18,118:INFO:Checking libraries
2022-07-27 18:37:18,118:INFO:pd==1.4.3
2022-07-27 18:37:18,118:INFO:numpy==1.22.4
2022-07-27 18:37:18,118:INFO:sklearn==0.23.2
2022-07-27 18:37:18,119:INFO:lightgbm==3.3.2
2022-07-27 18:37:18,418:INFO:catboost==1.0.6
2022-07-27 18:37:18,419:INFO:xgboost==1.6.1
2022-07-27 18:37:18,419:INFO:mlflow==1.27.0
2022-07-27 18:37:18,419:INFO:Checking Exceptions
2022-07-27 18:37:18,419:INFO:Declaring global variables
2022-07-27 18:37:18,419:INFO:USI: 32ec
2022-07-27 18:37:18,419:INFO:pycaret_globals: {'_ml_usecase', 'X_test', 'y_train', '_all_models_internal', 'USI', 'fold_groups_param_full', 'html_param', 'pycaret_globals', 'fix_imbalance_param', 'n_jobs_param', '_available_plots', 'display_container', 'imputation_regressor', 'imputation_classifier', 'fold_shuffle_param', '_all_metrics', 'fold_groups_param', 'fold_generator', 'target_param', 'y', 'fold_param', 'stratify_param', 'log_plots_param', '_all_models', '_gpu_n_jobs_param', 'transform_target_param', 'dashboard_logger', 'prep_pipe', 'experiment__', 'seed', 'gpu_param', 'data_before_preprocess', 'X_train', 'X', 'logging_param', 'transform_target_method_param', 'iterative_imputation_iters_param', 'exp_name_log', 'fix_imbalance_method_param', '_internal_pipeline', 'y_test', 'master_model_container', 'create_model_container'}
2022-07-27 18:37:18,420:INFO:Preparing display monitor
2022-07-27 18:37:18,420:INFO:Preparing display monitor
2022-07-27 18:37:18,435:INFO:Importing libraries
2022-07-27 18:37:18,436:INFO:Copying data for preprocessing
2022-07-27 18:37:18,447:INFO:Declaring preprocessing parameters
2022-07-27 18:37:18,453:INFO:Creating preprocessing pipeline
2022-07-27 18:37:18,495:INFO:Preprocessing pipeline created successfully
2022-07-27 18:37:18,495:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 18:37:18,496:INFO:Creating global containers
2022-07-27 18:37:18,496:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 18:37:24,098:INFO:Creating grid variables
2022-07-27 18:37:24,119:INFO:create_model_container: 0
2022-07-27 18:37:24,119:INFO:master_model_container: 0
2022-07-27 18:37:24,119:INFO:display_container: 1
2022-07-27 18:37:24,123:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2022-07-27 18:37:24,123:INFO:setup() succesfully completed......................................
2022-07-27 18:37:51,781:INFO:Initializing compare_models()
2022-07-27 18:37:51,781:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 18:37:51,781:INFO:Checking exceptions
2022-07-27 18:37:51,781:INFO:Preparing display monitor
2022-07-27 18:37:51,781:INFO:Preparing display monitor
2022-07-27 18:37:51,797:INFO:Initializing Linear Regression
2022-07-27 18:37:51,797:INFO:Total runtime is 1.5179316202799478e-06 minutes
2022-07-27 18:37:51,801:INFO:SubProcess create_model() called ==================================
2022-07-27 18:37:51,801:INFO:Initializing create_model()
2022-07-27 18:37:51,801:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:37:51,801:INFO:Checking exceptions
2022-07-27 18:37:51,801:INFO:Importing libraries
2022-07-27 18:37:51,801:INFO:Copying training dataset
2022-07-27 18:37:51,803:INFO:Defining folds
2022-07-27 18:37:51,803:INFO:Declaring metric variables
2022-07-27 18:37:51,807:INFO:Importing untrained model
2022-07-27 18:37:51,812:INFO:Linear Regression Imported succesfully
2022-07-27 18:37:51,820:INFO:Starting cross validation
2022-07-27 18:37:51,823:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:37:55,164:INFO:Calculating mean and std
2022-07-27 18:37:55,170:INFO:Creating metrics dataframe
2022-07-27 18:37:55,190:INFO:Uploading results into container
2022-07-27 18:37:55,190:INFO:Uploading model into container now
2022-07-27 18:37:55,191:INFO:create_model_container: 1
2022-07-27 18:37:55,191:INFO:master_model_container: 1
2022-07-27 18:37:55,191:INFO:display_container: 2
2022-07-27 18:37:55,192:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-07-27 18:37:55,193:INFO:create_model() succesfully completed......................................
2022-07-27 18:37:55,345:INFO:SubProcess create_model() end ==================================
2022-07-27 18:37:55,345:INFO:Creating metrics dataframe
2022-07-27 18:37:55,351:INFO:Initializing Lasso Regression
2022-07-27 18:37:55,351:INFO:Total runtime is 0.05924355189005534 minutes
2022-07-27 18:37:55,356:INFO:SubProcess create_model() called ==================================
2022-07-27 18:37:55,356:INFO:Initializing create_model()
2022-07-27 18:37:55,356:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:37:55,356:INFO:Checking exceptions
2022-07-27 18:37:55,356:INFO:Importing libraries
2022-07-27 18:37:55,356:INFO:Copying training dataset
2022-07-27 18:37:55,359:INFO:Defining folds
2022-07-27 18:37:55,359:INFO:Declaring metric variables
2022-07-27 18:37:55,364:INFO:Importing untrained model
2022-07-27 18:37:55,369:INFO:Lasso Regression Imported succesfully
2022-07-27 18:37:55,381:INFO:Starting cross validation
2022-07-27 18:37:55,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:01,110:INFO:Calculating mean and std
2022-07-27 18:38:01,113:INFO:Creating metrics dataframe
2022-07-27 18:38:01,129:INFO:Uploading results into container
2022-07-27 18:38:01,129:INFO:Uploading model into container now
2022-07-27 18:38:01,130:INFO:create_model_container: 2
2022-07-27 18:38:01,130:INFO:master_model_container: 2
2022-07-27 18:38:01,131:INFO:display_container: 2
2022-07-27 18:38:01,132:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=123,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-07-27 18:38:01,132:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:01,215:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:01,215:INFO:Creating metrics dataframe
2022-07-27 18:38:01,222:INFO:Initializing Ridge Regression
2022-07-27 18:38:01,223:INFO:Total runtime is 0.15709712107976276 minutes
2022-07-27 18:38:01,227:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:01,228:INFO:Initializing create_model()
2022-07-27 18:38:01,228:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:01,228:INFO:Checking exceptions
2022-07-27 18:38:01,228:INFO:Importing libraries
2022-07-27 18:38:01,228:INFO:Copying training dataset
2022-07-27 18:38:01,230:INFO:Defining folds
2022-07-27 18:38:01,230:INFO:Declaring metric variables
2022-07-27 18:38:01,235:INFO:Importing untrained model
2022-07-27 18:38:01,239:INFO:Ridge Regression Imported succesfully
2022-07-27 18:38:01,250:INFO:Starting cross validation
2022-07-27 18:38:01,250:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:01,485:INFO:Calculating mean and std
2022-07-27 18:38:01,489:INFO:Creating metrics dataframe
2022-07-27 18:38:01,504:INFO:Uploading results into container
2022-07-27 18:38:01,504:INFO:Uploading model into container now
2022-07-27 18:38:01,504:INFO:create_model_container: 3
2022-07-27 18:38:01,505:INFO:master_model_container: 3
2022-07-27 18:38:01,505:INFO:display_container: 2
2022-07-27 18:38:01,506:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=123, solver='auto', tol=0.001)
2022-07-27 18:38:01,506:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:01,613:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:01,613:INFO:Creating metrics dataframe
2022-07-27 18:38:01,621:INFO:Initializing Elastic Net
2022-07-27 18:38:01,621:INFO:Total runtime is 0.1637336691220601 minutes
2022-07-27 18:38:01,626:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:01,626:INFO:Initializing create_model()
2022-07-27 18:38:01,626:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:01,626:INFO:Checking exceptions
2022-07-27 18:38:01,626:INFO:Importing libraries
2022-07-27 18:38:01,626:INFO:Copying training dataset
2022-07-27 18:38:01,629:INFO:Defining folds
2022-07-27 18:38:01,629:INFO:Declaring metric variables
2022-07-27 18:38:01,634:INFO:Importing untrained model
2022-07-27 18:38:01,638:INFO:Elastic Net Imported succesfully
2022-07-27 18:38:01,648:INFO:Starting cross validation
2022-07-27 18:38:01,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:05,297:INFO:Calculating mean and std
2022-07-27 18:38:05,300:INFO:Creating metrics dataframe
2022-07-27 18:38:05,315:INFO:Uploading results into container
2022-07-27 18:38:05,315:INFO:Uploading model into container now
2022-07-27 18:38:05,315:INFO:create_model_container: 4
2022-07-27 18:38:05,316:INFO:master_model_container: 4
2022-07-27 18:38:05,316:INFO:display_container: 2
2022-07-27 18:38:05,317:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-07-27 18:38:05,318:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:05,463:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:05,463:INFO:Creating metrics dataframe
2022-07-27 18:38:05,471:INFO:Initializing Least Angle Regression
2022-07-27 18:38:05,471:INFO:Total runtime is 0.22789766788482663 minutes
2022-07-27 18:38:05,475:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:05,475:INFO:Initializing create_model()
2022-07-27 18:38:05,475:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:05,475:INFO:Checking exceptions
2022-07-27 18:38:05,475:INFO:Importing libraries
2022-07-27 18:38:05,475:INFO:Copying training dataset
2022-07-27 18:38:05,479:INFO:Defining folds
2022-07-27 18:38:05,479:INFO:Declaring metric variables
2022-07-27 18:38:05,483:INFO:Importing untrained model
2022-07-27 18:38:05,488:INFO:Least Angle Regression Imported succesfully
2022-07-27 18:38:05,499:INFO:Starting cross validation
2022-07-27 18:38:05,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:05,762:INFO:Calculating mean and std
2022-07-27 18:38:05,764:INFO:Creating metrics dataframe
2022-07-27 18:38:05,770:INFO:Uploading results into container
2022-07-27 18:38:05,770:INFO:Uploading model into container now
2022-07-27 18:38:05,771:INFO:create_model_container: 5
2022-07-27 18:38:05,771:INFO:master_model_container: 5
2022-07-27 18:38:05,771:INFO:display_container: 2
2022-07-27 18:38:05,771:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize=True, precompute='auto',
     random_state=123, verbose=False)
2022-07-27 18:38:05,771:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:05,863:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:05,863:INFO:Creating metrics dataframe
2022-07-27 18:38:05,871:INFO:Initializing Lasso Least Angle Regression
2022-07-27 18:38:05,871:INFO:Total runtime is 0.23456835349400834 minutes
2022-07-27 18:38:05,877:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:05,878:INFO:Initializing create_model()
2022-07-27 18:38:05,878:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:05,878:INFO:Checking exceptions
2022-07-27 18:38:05,878:INFO:Importing libraries
2022-07-27 18:38:05,878:INFO:Copying training dataset
2022-07-27 18:38:05,881:INFO:Defining folds
2022-07-27 18:38:05,881:INFO:Declaring metric variables
2022-07-27 18:38:05,887:INFO:Importing untrained model
2022-07-27 18:38:05,893:INFO:Lasso Least Angle Regression Imported succesfully
2022-07-27 18:38:05,905:INFO:Starting cross validation
2022-07-27 18:38:05,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:06,161:INFO:Calculating mean and std
2022-07-27 18:38:06,162:INFO:Creating metrics dataframe
2022-07-27 18:38:06,165:INFO:Uploading results into container
2022-07-27 18:38:06,166:INFO:Uploading model into container now
2022-07-27 18:38:06,166:INFO:create_model_container: 6
2022-07-27 18:38:06,166:INFO:master_model_container: 6
2022-07-27 18:38:06,166:INFO:display_container: 2
2022-07-27 18:38:06,166:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-07-27 18:38:06,166:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:06,237:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:06,237:INFO:Creating metrics dataframe
2022-07-27 18:38:06,244:INFO:Initializing Orthogonal Matching Pursuit
2022-07-27 18:38:06,244:INFO:Total runtime is 0.24079314867655432 minutes
2022-07-27 18:38:06,248:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:06,249:INFO:Initializing create_model()
2022-07-27 18:38:06,249:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:06,249:INFO:Checking exceptions
2022-07-27 18:38:06,249:INFO:Importing libraries
2022-07-27 18:38:06,249:INFO:Copying training dataset
2022-07-27 18:38:06,252:INFO:Defining folds
2022-07-27 18:38:06,252:INFO:Declaring metric variables
2022-07-27 18:38:06,257:INFO:Importing untrained model
2022-07-27 18:38:06,263:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-07-27 18:38:06,273:INFO:Starting cross validation
2022-07-27 18:38:06,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:06,422:INFO:Calculating mean and std
2022-07-27 18:38:06,423:INFO:Creating metrics dataframe
2022-07-27 18:38:06,426:INFO:Uploading results into container
2022-07-27 18:38:06,426:INFO:Uploading model into container now
2022-07-27 18:38:06,426:INFO:create_model_container: 7
2022-07-27 18:38:06,426:INFO:master_model_container: 7
2022-07-27 18:38:06,426:INFO:display_container: 2
2022-07-27 18:38:06,427:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-07-27 18:38:06,427:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:06,497:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:06,498:INFO:Creating metrics dataframe
2022-07-27 18:38:06,505:INFO:Initializing Bayesian Ridge
2022-07-27 18:38:06,505:INFO:Total runtime is 0.2451366821924845 minutes
2022-07-27 18:38:06,509:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:06,509:INFO:Initializing create_model()
2022-07-27 18:38:06,509:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:06,509:INFO:Checking exceptions
2022-07-27 18:38:06,510:INFO:Importing libraries
2022-07-27 18:38:06,510:INFO:Copying training dataset
2022-07-27 18:38:06,512:INFO:Defining folds
2022-07-27 18:38:06,512:INFO:Declaring metric variables
2022-07-27 18:38:06,516:INFO:Importing untrained model
2022-07-27 18:38:06,520:INFO:Bayesian Ridge Imported succesfully
2022-07-27 18:38:06,529:INFO:Starting cross validation
2022-07-27 18:38:06,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:09,451:INFO:Calculating mean and std
2022-07-27 18:38:09,454:INFO:Creating metrics dataframe
2022-07-27 18:38:09,470:INFO:Uploading results into container
2022-07-27 18:38:09,470:INFO:Uploading model into container now
2022-07-27 18:38:09,470:INFO:create_model_container: 8
2022-07-27 18:38:09,470:INFO:master_model_container: 8
2022-07-27 18:38:09,471:INFO:display_container: 2
2022-07-27 18:38:09,472:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-07-27 18:38:09,472:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:09,614:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:09,614:INFO:Creating metrics dataframe
2022-07-27 18:38:09,622:INFO:Initializing Passive Aggressive Regressor
2022-07-27 18:38:09,622:INFO:Total runtime is 0.2970852216084798 minutes
2022-07-27 18:38:09,627:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:09,627:INFO:Initializing create_model()
2022-07-27 18:38:09,627:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:09,628:INFO:Checking exceptions
2022-07-27 18:38:09,628:INFO:Importing libraries
2022-07-27 18:38:09,628:INFO:Copying training dataset
2022-07-27 18:38:09,630:INFO:Defining folds
2022-07-27 18:38:09,630:INFO:Declaring metric variables
2022-07-27 18:38:09,635:INFO:Importing untrained model
2022-07-27 18:38:09,640:INFO:Passive Aggressive Regressor Imported succesfully
2022-07-27 18:38:09,652:INFO:Starting cross validation
2022-07-27 18:38:09,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:10,342:INFO:Calculating mean and std
2022-07-27 18:38:10,343:INFO:Creating metrics dataframe
2022-07-27 18:38:10,351:INFO:Uploading results into container
2022-07-27 18:38:10,351:INFO:Uploading model into container now
2022-07-27 18:38:10,351:INFO:create_model_container: 9
2022-07-27 18:38:10,351:INFO:master_model_container: 9
2022-07-27 18:38:10,352:INFO:display_container: 2
2022-07-27 18:38:10,352:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-07-27 18:38:10,352:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:10,436:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:10,436:INFO:Creating metrics dataframe
2022-07-27 18:38:10,444:INFO:Initializing Huber Regressor
2022-07-27 18:38:10,444:INFO:Total runtime is 0.3107940077781677 minutes
2022-07-27 18:38:10,449:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:10,449:INFO:Initializing create_model()
2022-07-27 18:38:10,449:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:10,449:INFO:Checking exceptions
2022-07-27 18:38:10,449:INFO:Importing libraries
2022-07-27 18:38:10,450:INFO:Copying training dataset
2022-07-27 18:38:10,453:INFO:Defining folds
2022-07-27 18:38:10,453:INFO:Declaring metric variables
2022-07-27 18:38:10,459:INFO:Importing untrained model
2022-07-27 18:38:10,464:INFO:Huber Regressor Imported succesfully
2022-07-27 18:38:10,476:INFO:Starting cross validation
2022-07-27 18:38:10,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:25,133:INFO:Calculating mean and std
2022-07-27 18:38:25,136:INFO:Creating metrics dataframe
2022-07-27 18:38:25,152:INFO:Uploading results into container
2022-07-27 18:38:25,153:INFO:Uploading model into container now
2022-07-27 18:38:25,153:INFO:create_model_container: 10
2022-07-27 18:38:25,154:INFO:master_model_container: 10
2022-07-27 18:38:25,154:INFO:display_container: 2
2022-07-27 18:38:25,155:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-07-27 18:38:25,155:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:25,242:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:25,242:INFO:Creating metrics dataframe
2022-07-27 18:38:25,250:INFO:Initializing K Neighbors Regressor
2022-07-27 18:38:25,250:INFO:Total runtime is 0.5575538992881774 minutes
2022-07-27 18:38:25,255:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:25,255:INFO:Initializing create_model()
2022-07-27 18:38:25,255:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:25,255:INFO:Checking exceptions
2022-07-27 18:38:25,255:INFO:Importing libraries
2022-07-27 18:38:25,255:INFO:Copying training dataset
2022-07-27 18:38:25,258:INFO:Defining folds
2022-07-27 18:38:25,258:INFO:Declaring metric variables
2022-07-27 18:38:25,262:INFO:Importing untrained model
2022-07-27 18:38:25,268:INFO:K Neighbors Regressor Imported succesfully
2022-07-27 18:38:25,281:INFO:Starting cross validation
2022-07-27 18:38:25,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:29,821:INFO:Calculating mean and std
2022-07-27 18:38:29,822:INFO:Creating metrics dataframe
2022-07-27 18:38:29,827:INFO:Uploading results into container
2022-07-27 18:38:29,827:INFO:Uploading model into container now
2022-07-27 18:38:29,827:INFO:create_model_container: 11
2022-07-27 18:38:29,827:INFO:master_model_container: 11
2022-07-27 18:38:29,827:INFO:display_container: 2
2022-07-27 18:38:29,828:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-07-27 18:38:29,828:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:29,968:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:29,968:INFO:Creating metrics dataframe
2022-07-27 18:38:29,980:INFO:Initializing Decision Tree Regressor
2022-07-27 18:38:29,980:INFO:Total runtime is 0.6363894859949747 minutes
2022-07-27 18:38:29,987:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:29,988:INFO:Initializing create_model()
2022-07-27 18:38:29,988:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:29,988:INFO:Checking exceptions
2022-07-27 18:38:29,988:INFO:Importing libraries
2022-07-27 18:38:29,988:INFO:Copying training dataset
2022-07-27 18:38:29,992:INFO:Defining folds
2022-07-27 18:38:29,992:INFO:Declaring metric variables
2022-07-27 18:38:29,999:INFO:Importing untrained model
2022-07-27 18:38:30,005:INFO:Decision Tree Regressor Imported succesfully
2022-07-27 18:38:30,017:INFO:Starting cross validation
2022-07-27 18:38:30,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:38:31,653:INFO:Calculating mean and std
2022-07-27 18:38:31,654:INFO:Creating metrics dataframe
2022-07-27 18:38:31,659:INFO:Uploading results into container
2022-07-27 18:38:31,660:INFO:Uploading model into container now
2022-07-27 18:38:31,660:INFO:create_model_container: 12
2022-07-27 18:38:31,660:INFO:master_model_container: 12
2022-07-27 18:38:31,660:INFO:display_container: 2
2022-07-27 18:38:31,660:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=123, splitter='best')
2022-07-27 18:38:31,660:INFO:create_model() succesfully completed......................................
2022-07-27 18:38:31,748:INFO:SubProcess create_model() end ==================================
2022-07-27 18:38:31,748:INFO:Creating metrics dataframe
2022-07-27 18:38:31,756:INFO:Initializing Random Forest Regressor
2022-07-27 18:38:31,756:INFO:Total runtime is 0.6659915208816527 minutes
2022-07-27 18:38:31,761:INFO:SubProcess create_model() called ==================================
2022-07-27 18:38:31,761:INFO:Initializing create_model()
2022-07-27 18:38:31,761:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:38:31,761:INFO:Checking exceptions
2022-07-27 18:38:31,761:INFO:Importing libraries
2022-07-27 18:38:31,761:INFO:Copying training dataset
2022-07-27 18:38:31,765:INFO:Defining folds
2022-07-27 18:38:31,765:INFO:Declaring metric variables
2022-07-27 18:38:31,770:INFO:Importing untrained model
2022-07-27 18:38:31,776:INFO:Random Forest Regressor Imported succesfully
2022-07-27 18:38:31,787:INFO:Starting cross validation
2022-07-27 18:38:31,788:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:39:54,859:INFO:Calculating mean and std
2022-07-27 18:39:54,860:INFO:Creating metrics dataframe
2022-07-27 18:39:54,864:INFO:Uploading results into container
2022-07-27 18:39:54,864:INFO:Uploading model into container now
2022-07-27 18:39:54,864:INFO:create_model_container: 13
2022-07-27 18:39:54,864:INFO:master_model_container: 13
2022-07-27 18:39:54,864:INFO:display_container: 2
2022-07-27 18:39:54,864:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=123, verbose=0, warm_start=False)
2022-07-27 18:39:54,865:INFO:create_model() succesfully completed......................................
2022-07-27 18:39:54,961:INFO:SubProcess create_model() end ==================================
2022-07-27 18:39:54,961:INFO:Creating metrics dataframe
2022-07-27 18:39:54,970:INFO:Initializing Extra Trees Regressor
2022-07-27 18:39:54,970:INFO:Total runtime is 2.052893563111623 minutes
2022-07-27 18:39:54,976:INFO:SubProcess create_model() called ==================================
2022-07-27 18:39:54,976:INFO:Initializing create_model()
2022-07-27 18:39:54,976:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:39:54,976:INFO:Checking exceptions
2022-07-27 18:39:54,976:INFO:Importing libraries
2022-07-27 18:39:54,977:INFO:Copying training dataset
2022-07-27 18:39:54,980:INFO:Defining folds
2022-07-27 18:39:54,980:INFO:Declaring metric variables
2022-07-27 18:39:54,985:INFO:Importing untrained model
2022-07-27 18:39:54,992:INFO:Extra Trees Regressor Imported succesfully
2022-07-27 18:39:55,006:INFO:Starting cross validation
2022-07-27 18:39:55,007:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:41:06,735:INFO:Calculating mean and std
2022-07-27 18:41:06,737:INFO:Creating metrics dataframe
2022-07-27 18:41:06,741:INFO:Uploading results into container
2022-07-27 18:41:06,741:INFO:Uploading model into container now
2022-07-27 18:41:06,741:INFO:create_model_container: 14
2022-07-27 18:41:06,741:INFO:master_model_container: 14
2022-07-27 18:41:06,741:INFO:display_container: 2
2022-07-27 18:41:06,742:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=123, verbose=0, warm_start=False)
2022-07-27 18:41:06,742:INFO:create_model() succesfully completed......................................
2022-07-27 18:41:06,837:INFO:SubProcess create_model() end ==================================
2022-07-27 18:41:06,837:INFO:Creating metrics dataframe
2022-07-27 18:41:06,847:INFO:Initializing AdaBoost Regressor
2022-07-27 18:41:06,847:INFO:Total runtime is 3.2508309761683147 minutes
2022-07-27 18:41:06,852:INFO:SubProcess create_model() called ==================================
2022-07-27 18:41:06,853:INFO:Initializing create_model()
2022-07-27 18:41:06,853:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:41:06,853:INFO:Checking exceptions
2022-07-27 18:41:06,853:INFO:Importing libraries
2022-07-27 18:41:06,853:INFO:Copying training dataset
2022-07-27 18:41:06,856:INFO:Defining folds
2022-07-27 18:41:06,856:INFO:Declaring metric variables
2022-07-27 18:41:06,861:INFO:Importing untrained model
2022-07-27 18:41:06,867:INFO:AdaBoost Regressor Imported succesfully
2022-07-27 18:41:06,879:INFO:Starting cross validation
2022-07-27 18:41:06,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:41:33,238:INFO:Calculating mean and std
2022-07-27 18:41:33,242:INFO:Creating metrics dataframe
2022-07-27 18:41:33,257:INFO:Uploading results into container
2022-07-27 18:41:33,257:INFO:Uploading model into container now
2022-07-27 18:41:33,257:INFO:create_model_container: 15
2022-07-27 18:41:33,258:INFO:master_model_container: 15
2022-07-27 18:41:33,258:INFO:display_container: 2
2022-07-27 18:41:33,259:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-07-27 18:41:33,259:INFO:create_model() succesfully completed......................................
2022-07-27 18:41:33,340:INFO:SubProcess create_model() end ==================================
2022-07-27 18:41:33,340:INFO:Creating metrics dataframe
2022-07-27 18:41:33,349:INFO:Initializing Gradient Boosting Regressor
2022-07-27 18:41:33,350:INFO:Total runtime is 3.6925479928652445 minutes
2022-07-27 18:41:33,355:INFO:SubProcess create_model() called ==================================
2022-07-27 18:41:33,355:INFO:Initializing create_model()
2022-07-27 18:41:33,355:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:41:33,355:INFO:Checking exceptions
2022-07-27 18:41:33,355:INFO:Importing libraries
2022-07-27 18:41:33,355:INFO:Copying training dataset
2022-07-27 18:41:33,358:INFO:Defining folds
2022-07-27 18:41:33,358:INFO:Declaring metric variables
2022-07-27 18:41:33,362:INFO:Importing untrained model
2022-07-27 18:41:33,368:INFO:Gradient Boosting Regressor Imported succesfully
2022-07-27 18:41:33,379:INFO:Starting cross validation
2022-07-27 18:41:33,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:41:57,580:INFO:Calculating mean and std
2022-07-27 18:41:57,583:INFO:Creating metrics dataframe
2022-07-27 18:41:57,599:INFO:Uploading results into container
2022-07-27 18:41:57,599:INFO:Uploading model into container now
2022-07-27 18:41:57,600:INFO:create_model_container: 16
2022-07-27 18:41:57,600:INFO:master_model_container: 16
2022-07-27 18:41:57,600:INFO:display_container: 2
2022-07-27 18:41:57,602:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-07-27 18:41:57,602:INFO:create_model() succesfully completed......................................
2022-07-27 18:41:57,684:INFO:SubProcess create_model() end ==================================
2022-07-27 18:41:57,684:INFO:Creating metrics dataframe
2022-07-27 18:41:57,693:INFO:Initializing Extreme Gradient Boosting
2022-07-27 18:41:57,693:INFO:Total runtime is 4.098272927602132 minutes
2022-07-27 18:41:57,697:INFO:SubProcess create_model() called ==================================
2022-07-27 18:41:57,698:INFO:Initializing create_model()
2022-07-27 18:41:57,698:INFO:create_model(estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:41:57,698:INFO:Checking exceptions
2022-07-27 18:41:57,698:INFO:Importing libraries
2022-07-27 18:41:57,698:INFO:Copying training dataset
2022-07-27 18:41:57,700:INFO:Defining folds
2022-07-27 18:41:57,701:INFO:Declaring metric variables
2022-07-27 18:41:57,705:INFO:Importing untrained model
2022-07-27 18:41:57,711:INFO:Extreme Gradient Boosting Imported succesfully
2022-07-27 18:41:57,722:INFO:Starting cross validation
2022-07-27 18:41:57,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:42:11,698:INFO:Calculating mean and std
2022-07-27 18:42:11,702:INFO:Creating metrics dataframe
2022-07-27 18:42:11,717:INFO:Uploading results into container
2022-07-27 18:42:11,718:INFO:Uploading model into container now
2022-07-27 18:42:11,718:INFO:create_model_container: 17
2022-07-27 18:42:11,718:INFO:master_model_container: 17
2022-07-27 18:42:11,718:INFO:display_container: 2
2022-07-27 18:42:11,722:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-07-27 18:42:11,722:INFO:create_model() succesfully completed......................................
2022-07-27 18:42:11,804:INFO:SubProcess create_model() end ==================================
2022-07-27 18:42:11,804:INFO:Creating metrics dataframe
2022-07-27 18:42:11,813:INFO:Initializing Light Gradient Boosting Machine
2022-07-27 18:42:11,813:INFO:Total runtime is 4.333606286843617 minutes
2022-07-27 18:42:11,818:INFO:SubProcess create_model() called ==================================
2022-07-27 18:42:11,818:INFO:Initializing create_model()
2022-07-27 18:42:11,818:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:42:11,819:INFO:Checking exceptions
2022-07-27 18:42:11,819:INFO:Importing libraries
2022-07-27 18:42:11,819:INFO:Copying training dataset
2022-07-27 18:42:11,821:INFO:Defining folds
2022-07-27 18:42:11,821:INFO:Declaring metric variables
2022-07-27 18:42:11,827:INFO:Importing untrained model
2022-07-27 18:42:11,834:INFO:Light Gradient Boosting Machine Imported succesfully
2022-07-27 18:42:11,847:INFO:Starting cross validation
2022-07-27 18:42:11,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:42:14,581:INFO:Calculating mean and std
2022-07-27 18:42:14,581:INFO:Creating metrics dataframe
2022-07-27 18:42:14,584:INFO:Uploading results into container
2022-07-27 18:42:14,584:INFO:Uploading model into container now
2022-07-27 18:42:14,584:INFO:create_model_container: 18
2022-07-27 18:42:14,584:INFO:master_model_container: 18
2022-07-27 18:42:14,585:INFO:display_container: 2
2022-07-27 18:42:14,585:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-07-27 18:42:14,585:INFO:create_model() succesfully completed......................................
2022-07-27 18:42:14,657:INFO:SubProcess create_model() end ==================================
2022-07-27 18:42:14,658:INFO:Creating metrics dataframe
2022-07-27 18:42:14,668:INFO:Initializing CatBoost Regressor
2022-07-27 18:42:14,668:INFO:Total runtime is 4.3811941464742015 minutes
2022-07-27 18:42:14,673:INFO:SubProcess create_model() called ==================================
2022-07-27 18:42:14,673:INFO:Initializing create_model()
2022-07-27 18:42:14,673:INFO:create_model(estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:42:14,673:INFO:Checking exceptions
2022-07-27 18:42:14,673:INFO:Importing libraries
2022-07-27 18:42:14,674:INFO:Copying training dataset
2022-07-27 18:42:14,676:INFO:Defining folds
2022-07-27 18:42:14,676:INFO:Declaring metric variables
2022-07-27 18:42:14,681:INFO:Importing untrained model
2022-07-27 18:42:14,689:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:42:14,698:INFO:Starting cross validation
2022-07-27 18:42:14,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:44:44,227:INFO:Calculating mean and std
2022-07-27 18:44:44,227:INFO:Creating metrics dataframe
2022-07-27 18:44:44,231:INFO:Uploading results into container
2022-07-27 18:44:44,231:INFO:Uploading model into container now
2022-07-27 18:44:44,231:INFO:create_model_container: 19
2022-07-27 18:44:44,231:INFO:master_model_container: 19
2022-07-27 18:44:44,231:INFO:display_container: 2
2022-07-27 18:44:44,231:INFO:<catboost.core.CatBoostRegressor object at 0x7f186c7cfd00>
2022-07-27 18:44:44,231:INFO:create_model() succesfully completed......................................
2022-07-27 18:44:44,309:INFO:SubProcess create_model() end ==================================
2022-07-27 18:44:44,309:INFO:Creating metrics dataframe
2022-07-27 18:44:44,320:INFO:Initializing Dummy Regressor
2022-07-27 18:44:44,320:INFO:Total runtime is 6.87538514137268 minutes
2022-07-27 18:44:44,326:INFO:SubProcess create_model() called ==================================
2022-07-27 18:44:44,326:INFO:Initializing create_model()
2022-07-27 18:44:44,326:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18863a0610>, return_train_score=False, kwargs={})
2022-07-27 18:44:44,326:INFO:Checking exceptions
2022-07-27 18:44:44,326:INFO:Importing libraries
2022-07-27 18:44:44,327:INFO:Copying training dataset
2022-07-27 18:44:44,330:INFO:Defining folds
2022-07-27 18:44:44,330:INFO:Declaring metric variables
2022-07-27 18:44:44,335:INFO:Importing untrained model
2022-07-27 18:44:44,341:INFO:Dummy Regressor Imported succesfully
2022-07-27 18:44:44,352:INFO:Starting cross validation
2022-07-27 18:44:44,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:44:44,532:INFO:Calculating mean and std
2022-07-27 18:44:44,533:INFO:Creating metrics dataframe
2022-07-27 18:44:44,536:INFO:Uploading results into container
2022-07-27 18:44:44,536:INFO:Uploading model into container now
2022-07-27 18:44:44,536:INFO:create_model_container: 20
2022-07-27 18:44:44,536:INFO:master_model_container: 20
2022-07-27 18:44:44,536:INFO:display_container: 2
2022-07-27 18:44:44,536:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-07-27 18:44:44,536:INFO:create_model() succesfully completed......................................
2022-07-27 18:44:44,615:INFO:SubProcess create_model() end ==================================
2022-07-27 18:44:44,615:INFO:Creating metrics dataframe
2022-07-27 18:44:44,638:INFO:Initializing create_model()
2022-07-27 18:44:44,638:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f186c7cfd00>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 18:44:44,638:INFO:Checking exceptions
2022-07-27 18:44:44,638:INFO:Importing libraries
2022-07-27 18:44:44,638:INFO:Copying training dataset
2022-07-27 18:44:44,640:INFO:Defining folds
2022-07-27 18:44:44,640:INFO:Declaring metric variables
2022-07-27 18:44:44,640:INFO:Importing untrained model
2022-07-27 18:44:44,640:INFO:Declaring custom model
2022-07-27 18:44:44,640:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:44:44,641:INFO:Cross validation set to False
2022-07-27 18:44:44,641:INFO:Fitting Model
2022-07-27 18:44:49,479:INFO:<catboost.core.CatBoostRegressor object at 0x7f186c7930d0>
2022-07-27 18:44:49,479:INFO:create_models() succesfully completed......................................
2022-07-27 18:44:49,571:INFO:create_model_container: 20
2022-07-27 18:44:49,571:INFO:master_model_container: 20
2022-07-27 18:44:49,571:INFO:display_container: 2
2022-07-27 18:44:49,572:INFO:<catboost.core.CatBoostRegressor object at 0x7f186c7930d0>
2022-07-27 18:44:49,572:INFO:compare_models() succesfully completed......................................
2022-07-27 18:45:33,534:INFO:Initializing create_model()
2022-07-27 18:45:33,534:INFO:create_model(estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 18:45:33,534:INFO:Checking exceptions
2022-07-27 18:45:33,534:INFO:Preparing display monitor
2022-07-27 18:45:33,545:INFO:Importing libraries
2022-07-27 18:45:33,545:INFO:Copying training dataset
2022-07-27 18:45:33,547:INFO:Defining folds
2022-07-27 18:45:33,547:INFO:Declaring metric variables
2022-07-27 18:45:33,552:INFO:Importing untrained model
2022-07-27 18:45:33,557:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:45:33,566:INFO:Starting cross validation
2022-07-27 18:45:33,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:47:53,225:INFO:Calculating mean and std
2022-07-27 18:47:53,226:INFO:Creating metrics dataframe
2022-07-27 18:47:53,249:INFO:Finalizing model
2022-07-27 18:47:58,241:INFO:Uploading results into container
2022-07-27 18:47:58,241:INFO:Uploading model into container now
2022-07-27 18:47:58,248:INFO:create_model_container: 21
2022-07-27 18:47:58,248:INFO:master_model_container: 21
2022-07-27 18:47:58,248:INFO:display_container: 3
2022-07-27 18:47:58,249:INFO:<catboost.core.CatBoostRegressor object at 0x7f185c1cc040>
2022-07-27 18:47:58,249:INFO:create_model() succesfully completed......................................
2022-07-27 18:48:35,844:INFO:Initializing plot_model()
2022-07-27 18:48:35,844:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x7f185c1cc040>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, system=True)
2022-07-27 18:48:35,844:INFO:Checking exceptions
2022-07-27 18:48:35,844:INFO:Preparing display monitor
2022-07-27 18:48:35,849:INFO:Preloading libraries
2022-07-27 18:48:35,853:INFO:Copying training dataset
2022-07-27 18:48:35,855:INFO:Copying test dataset
2022-07-27 18:48:35,857:INFO:Plot type: residuals
2022-07-27 18:48:35,915:INFO:Fitting Model
2022-07-27 18:48:35,974:INFO:Scoring test/hold-out set
2022-07-27 18:48:36,753:INFO:Visual Rendered Successfully
2022-07-27 18:48:36,837:INFO:plot_model() succesfully completed......................................
2022-07-27 18:49:23,042:INFO:Initializing tune_model()
2022-07-27 18:49:23,042:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f185c1cc040>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-07-27 18:49:23,042:INFO:Checking exceptions
2022-07-27 18:49:23,043:INFO:Preparing display monitor
2022-07-27 18:49:23,053:INFO:Copying training dataset
2022-07-27 18:49:23,056:INFO:Checking base model
2022-07-27 18:49:23,056:INFO:Base model : CatBoost Regressor
2022-07-27 18:49:23,061:INFO:Declaring metric variables
2022-07-27 18:49:23,067:INFO:Defining Hyperparameters
2022-07-27 18:49:23,160:INFO:Tuning with n_jobs=-1
2022-07-27 18:49:23,160:INFO:Initializing RandomizedSearchCV
2022-07-27 18:51:52,108:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2022-07-27 18:51:52,108:INFO:Hyperparameter search completed
2022-07-27 18:51:52,109:INFO:SubProcess create_model() called ==================================
2022-07-27 18:51:52,109:INFO:Initializing create_model()
2022-07-27 18:51:52,109:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e881a220>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18e881a790>, return_train_score=False, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2022-07-27 18:51:52,109:INFO:Checking exceptions
2022-07-27 18:51:52,109:INFO:Importing libraries
2022-07-27 18:51:52,109:INFO:Copying training dataset
2022-07-27 18:51:52,111:INFO:Defining folds
2022-07-27 18:51:52,111:INFO:Declaring metric variables
2022-07-27 18:51:52,117:INFO:Importing untrained model
2022-07-27 18:51:52,117:INFO:Declaring custom model
2022-07-27 18:51:52,124:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:51:52,136:INFO:Starting cross validation
2022-07-27 18:51:52,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:52:38,777:INFO:Calculating mean and std
2022-07-27 18:52:38,780:INFO:Creating metrics dataframe
2022-07-27 18:52:38,810:INFO:Finalizing model
2022-07-27 18:52:42,394:INFO:Uploading results into container
2022-07-27 18:52:42,394:INFO:Uploading model into container now
2022-07-27 18:52:42,394:INFO:create_model_container: 22
2022-07-27 18:52:42,394:INFO:master_model_container: 22
2022-07-27 18:52:42,394:INFO:display_container: 4
2022-07-27 18:52:42,394:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>
2022-07-27 18:52:42,394:INFO:create_model() succesfully completed......................................
2022-07-27 18:52:42,469:INFO:SubProcess create_model() end ==================================
2022-07-27 18:52:42,474:INFO:create_model_container: 22
2022-07-27 18:52:42,474:INFO:master_model_container: 22
2022-07-27 18:52:42,474:INFO:display_container: 4
2022-07-27 18:52:42,474:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>
2022-07-27 18:52:42,474:INFO:tune_model() succesfully completed......................................
2022-07-27 18:53:09,537:INFO:Initializing plot_model()
2022-07-27 18:53:09,537:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, system=True)
2022-07-27 18:53:09,537:INFO:Checking exceptions
2022-07-27 18:53:09,538:INFO:Preparing display monitor
2022-07-27 18:53:09,543:INFO:Preloading libraries
2022-07-27 18:53:09,545:INFO:Copying training dataset
2022-07-27 18:53:09,547:INFO:Copying test dataset
2022-07-27 18:53:09,548:INFO:Plot type: residuals
2022-07-27 18:53:09,569:INFO:Fitting Model
2022-07-27 18:53:09,612:INFO:Scoring test/hold-out set
2022-07-27 18:53:10,230:INFO:Visual Rendered Successfully
2022-07-27 18:53:10,310:INFO:plot_model() succesfully completed......................................
2022-07-27 18:53:53,258:INFO:Initializing create_model()
2022-07-27 18:53:53,258:INFO:create_model(estimator=tuned_cat, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 18:53:53,258:INFO:Checking exceptions
2022-07-27 18:54:12,445:INFO:Initializing finalize_model()
2022-07-27 18:54:12,445:INFO:finalize_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-07-27 18:54:12,445:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>
2022-07-27 18:54:12,445:INFO:Initializing create_model()
2022-07-27 18:54:12,445:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 18:54:12,445:INFO:Checking exceptions
2022-07-27 18:54:12,445:INFO:Importing libraries
2022-07-27 18:54:12,445:INFO:Copying training dataset
2022-07-27 18:54:12,448:INFO:Defining folds
2022-07-27 18:54:12,448:INFO:Declaring metric variables
2022-07-27 18:54:12,448:INFO:Importing untrained model
2022-07-27 18:54:12,448:INFO:Declaring custom model
2022-07-27 18:54:12,448:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:54:12,448:INFO:Starting cross validation
2022-07-27 18:54:12,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:55:02,410:INFO:Calculating mean and std
2022-07-27 18:55:02,411:INFO:Creating metrics dataframe
2022-07-27 18:55:02,415:INFO:Finalizing model
2022-07-27 18:55:05,368:INFO:create_model_container: 22
2022-07-27 18:55:05,369:INFO:master_model_container: 22
2022-07-27 18:55:05,369:INFO:display_container: 5
2022-07-27 18:55:05,369:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e8671880>
2022-07-27 18:55:05,369:INFO:create_model() succesfully completed......................................
2022-07-27 18:55:05,440:INFO:create_model_container: 22
2022-07-27 18:55:05,441:INFO:master_model_container: 22
2022-07-27 18:55:05,441:INFO:display_container: 4
2022-07-27 18:55:05,441:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e8671880>
2022-07-27 18:55:05,441:INFO:finalize_model() succesfully completed......................................
2022-07-27 18:55:47,586:INFO:Initializing finalize_model()
2022-07-27 18:55:47,586:INFO:finalize_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-07-27 18:55:47,586:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>
2022-07-27 18:55:47,587:INFO:Initializing create_model()
2022-07-27 18:55:47,587:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 18:55:47,587:INFO:Checking exceptions
2022-07-27 18:55:47,587:INFO:Importing libraries
2022-07-27 18:55:47,587:INFO:Copying training dataset
2022-07-27 18:55:47,589:INFO:Defining folds
2022-07-27 18:55:47,589:INFO:Declaring metric variables
2022-07-27 18:55:47,589:INFO:Importing untrained model
2022-07-27 18:55:47,589:INFO:Declaring custom model
2022-07-27 18:55:47,589:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:55:47,590:INFO:Starting cross validation
2022-07-27 18:55:47,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:56:37,644:INFO:Calculating mean and std
2022-07-27 18:56:37,644:INFO:Creating metrics dataframe
2022-07-27 18:56:37,646:INFO:Finalizing model
2022-07-27 18:56:40,666:INFO:create_model_container: 22
2022-07-27 18:56:40,667:INFO:master_model_container: 22
2022-07-27 18:56:40,667:INFO:display_container: 5
2022-07-27 18:56:40,667:INFO:<catboost.core.CatBoostRegressor object at 0x7f18bcb21850>
2022-07-27 18:56:40,667:INFO:create_model() succesfully completed......................................
2022-07-27 18:56:40,747:INFO:create_model_container: 22
2022-07-27 18:56:40,747:INFO:master_model_container: 22
2022-07-27 18:56:40,747:INFO:display_container: 4
2022-07-27 18:56:40,747:INFO:<catboost.core.CatBoostRegressor object at 0x7f18bcb21850>
2022-07-27 18:56:40,747:INFO:finalize_model() succesfully completed......................................
2022-07-27 18:57:17,713:INFO:Initializing finalize_model()
2022-07-27 18:57:17,713:INFO:finalize_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, fit_kwargs=diamond_model, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-07-27 18:57:17,713:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>
2022-07-27 18:57:17,713:INFO:Initializing create_model()
2022-07-27 18:57:17,713:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=diamond_model, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 18:57:17,713:INFO:Checking exceptions
2022-07-27 18:57:17,713:INFO:Importing libraries
2022-07-27 18:57:17,713:INFO:Copying training dataset
2022-07-27 18:57:17,716:INFO:Defining folds
2022-07-27 18:57:17,716:INFO:Declaring metric variables
2022-07-27 18:57:17,716:INFO:Importing untrained model
2022-07-27 18:57:17,716:INFO:Declaring custom model
2022-07-27 18:57:17,717:INFO:CatBoost Regressor Imported succesfully
2022-07-27 18:57:17,717:INFO:Starting cross validation
2022-07-27 18:57:34,978:INFO:Initializing save_model()
2022-07-27 18:57:34,978:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>, model_name=diamond_model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='price')),
                ('fix_perfect', Remove_100(target='price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-07-27 18:57:34,978:INFO:Adding model into prep_pipe
2022-07-27 18:57:35,110:INFO:diamond_model.pkl saved in current working directory
2022-07-27 18:57:35,114:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f18e88bafd0>]],
         verbose=False)
2022-07-27 18:57:35,114:INFO:save_model() successfully completed......................................
2022-07-27 19:15:09,459:INFO:Initializing load_model()
2022-07-27 19:15:09,460:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:09,802:INFO:Initializing predict_model()
2022-07-27 19:15:09,803:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0ca8fa3e80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:09,803:INFO:Checking exceptions
2022-07-27 19:15:09,805:INFO:Preloading libraries
2022-07-27 19:15:18,010:INFO:Initializing load_model()
2022-07-27 19:15:18,011:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:18,104:INFO:Initializing predict_model()
2022-07-27 19:15:18,104:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c8686f880>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:18,105:INFO:Checking exceptions
2022-07-27 19:15:18,105:INFO:Preloading libraries
2022-07-27 19:15:19,482:INFO:Initializing load_model()
2022-07-27 19:15:19,484:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:19,566:INFO:Initializing predict_model()
2022-07-27 19:15:19,567:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c867f8070>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:19,568:INFO:Checking exceptions
2022-07-27 19:15:19,568:INFO:Preloading libraries
2022-07-27 19:15:21,005:INFO:Initializing load_model()
2022-07-27 19:15:21,006:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:21,081:INFO:Initializing predict_model()
2022-07-27 19:15:21,082:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c86808220>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:21,082:INFO:Checking exceptions
2022-07-27 19:15:21,082:INFO:Preloading libraries
2022-07-27 19:15:22,660:INFO:Initializing load_model()
2022-07-27 19:15:22,661:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:22,734:INFO:Initializing predict_model()
2022-07-27 19:15:22,734:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c8686e1c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:22,734:INFO:Checking exceptions
2022-07-27 19:15:22,735:INFO:Preloading libraries
2022-07-27 19:15:23,941:INFO:Initializing load_model()
2022-07-27 19:15:23,942:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:24,029:INFO:Initializing predict_model()
2022-07-27 19:15:24,030:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0d21189790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:24,030:INFO:Checking exceptions
2022-07-27 19:15:24,031:INFO:Preloading libraries
2022-07-27 19:15:25,925:INFO:Initializing load_model()
2022-07-27 19:15:25,926:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:26,013:INFO:Initializing predict_model()
2022-07-27 19:15:26,013:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c8684b250>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:26,013:INFO:Checking exceptions
2022-07-27 19:15:26,014:INFO:Preloading libraries
2022-07-27 19:15:27,959:INFO:Initializing load_model()
2022-07-27 19:15:27,960:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:28,031:INFO:Initializing predict_model()
2022-07-27 19:15:28,031:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c868082b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:28,031:INFO:Checking exceptions
2022-07-27 19:15:28,032:INFO:Preloading libraries
2022-07-27 19:15:29,708:INFO:Initializing load_model()
2022-07-27 19:15:29,709:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:29,791:INFO:Initializing predict_model()
2022-07-27 19:15:29,791:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c8684bd60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:29,792:INFO:Checking exceptions
2022-07-27 19:15:29,792:INFO:Preloading libraries
2022-07-27 19:15:31,114:INFO:Initializing load_model()
2022-07-27 19:15:31,116:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:31,205:INFO:Initializing predict_model()
2022-07-27 19:15:31,205:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c8681df10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:31,206:INFO:Checking exceptions
2022-07-27 19:15:31,206:INFO:Preloading libraries
2022-07-27 19:15:32,389:INFO:Initializing load_model()
2022-07-27 19:15:32,390:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:15:32,460:INFO:Initializing predict_model()
2022-07-27 19:15:32,461:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c86803100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:32,461:INFO:Checking exceptions
2022-07-27 19:15:32,462:INFO:Preloading libraries
2022-07-27 19:15:32,572:INFO:Initializing predict_model()
2022-07-27 19:15:32,573:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f0c86803100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:15:32,573:INFO:Checking exceptions
2022-07-27 19:15:32,573:INFO:Preloading libraries
2022-07-27 19:19:01,878:INFO:Initializing load_model()
2022-07-27 19:19:01,879:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:19:02,191:INFO:Initializing predict_model()
2022-07-27 19:19:02,192:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb74a1fe80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:19:02,192:INFO:Checking exceptions
2022-07-27 19:19:02,192:INFO:Preloading libraries
2022-07-27 19:19:03,592:INFO:Initializing load_model()
2022-07-27 19:19:03,593:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:19:03,673:INFO:Initializing predict_model()
2022-07-27 19:19:03,673:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522e88e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:19:03,673:INFO:Checking exceptions
2022-07-27 19:19:03,674:INFO:Preloading libraries
2022-07-27 19:19:03,788:INFO:Initializing predict_model()
2022-07-27 19:19:03,788:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522e88e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:19:03,788:INFO:Checking exceptions
2022-07-27 19:19:03,788:INFO:Preloading libraries
2022-07-27 19:19:59,901:INFO:Initializing load_model()
2022-07-27 19:19:59,901:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:20:12,600:INFO:Initializing load_model()
2022-07-27 19:20:12,600:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:20:12,675:INFO:Initializing predict_model()
2022-07-27 19:20:12,676:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2a60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:20:12,676:INFO:Checking exceptions
2022-07-27 19:20:12,676:INFO:Preloading libraries
2022-07-27 19:20:28,327:INFO:Initializing load_model()
2022-07-27 19:20:28,327:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:20:28,399:INFO:Initializing predict_model()
2022-07-27 19:20:28,400:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:20:28,401:INFO:Checking exceptions
2022-07-27 19:20:28,401:INFO:Preloading libraries
2022-07-27 19:20:28,522:INFO:Initializing predict_model()
2022-07-27 19:20:28,522:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:20:28,522:INFO:Checking exceptions
2022-07-27 19:20:28,523:INFO:Preloading libraries
2022-07-27 19:21:22,472:INFO:Initializing load_model()
2022-07-27 19:21:22,473:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:21:22,567:INFO:Initializing predict_model()
2022-07-27 19:21:22,567:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522ccbe0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:22,567:INFO:Checking exceptions
2022-07-27 19:21:22,567:INFO:Preloading libraries
2022-07-27 19:21:23,039:INFO:Initializing load_model()
2022-07-27 19:21:23,039:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:21:23,129:INFO:Initializing predict_model()
2022-07-27 19:21:23,129:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc3bbb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:23,130:INFO:Checking exceptions
2022-07-27 19:21:23,130:INFO:Preloading libraries
2022-07-27 19:21:23,243:INFO:Initializing predict_model()
2022-07-27 19:21:23,243:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc3bbb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:23,244:INFO:Checking exceptions
2022-07-27 19:21:23,244:INFO:Preloading libraries
2022-07-27 19:21:25,538:INFO:Initializing load_model()
2022-07-27 19:21:25,539:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:21:25,626:INFO:Initializing predict_model()
2022-07-27 19:21:25,627:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51677b20>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:25,627:INFO:Checking exceptions
2022-07-27 19:21:25,627:INFO:Preloading libraries
2022-07-27 19:21:26,233:INFO:Initializing load_model()
2022-07-27 19:21:26,235:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:21:26,328:INFO:Initializing predict_model()
2022-07-27 19:21:26,328:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc3be80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:26,329:INFO:Checking exceptions
2022-07-27 19:21:26,330:INFO:Preloading libraries
2022-07-27 19:21:26,455:INFO:Initializing predict_model()
2022-07-27 19:21:26,456:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc3be80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:26,456:INFO:Checking exceptions
2022-07-27 19:21:26,456:INFO:Preloading libraries
2022-07-27 19:21:30,400:INFO:Initializing load_model()
2022-07-27 19:21:30,400:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:21:30,472:INFO:Initializing predict_model()
2022-07-27 19:21:30,472:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2610>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:30,472:INFO:Checking exceptions
2022-07-27 19:21:30,472:INFO:Preloading libraries
2022-07-27 19:21:32,063:INFO:Initializing load_model()
2022-07-27 19:21:32,063:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:21:32,153:INFO:Initializing predict_model()
2022-07-27 19:21:32,154:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf8250>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:32,154:INFO:Checking exceptions
2022-07-27 19:21:32,154:INFO:Preloading libraries
2022-07-27 19:21:32,275:INFO:Initializing predict_model()
2022-07-27 19:21:32,276:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf8250>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:21:32,276:INFO:Checking exceptions
2022-07-27 19:21:32,276:INFO:Preloading libraries
2022-07-27 19:56:40,496:INFO:Initializing load_model()
2022-07-27 19:56:40,497:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:56:40,574:INFO:Initializing predict_model()
2022-07-27 19:56:40,575:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc16dc0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:56:40,575:INFO:Checking exceptions
2022-07-27 19:56:40,575:INFO:Preloading libraries
2022-07-27 19:57:08,106:INFO:Initializing load_model()
2022-07-27 19:57:08,106:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:57:08,183:INFO:Initializing predict_model()
2022-07-27 19:57:08,184:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb79e8cf40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:57:08,184:INFO:Checking exceptions
2022-07-27 19:57:08,185:INFO:Preloading libraries
2022-07-27 19:57:56,382:INFO:Initializing load_model()
2022-07-27 19:57:56,383:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:57:56,459:INFO:Initializing predict_model()
2022-07-27 19:57:56,459:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc165b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:57:56,460:INFO:Checking exceptions
2022-07-27 19:57:56,460:INFO:Preloading libraries
2022-07-27 19:59:05,447:INFO:Initializing load_model()
2022-07-27 19:59:05,448:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:59:05,519:INFO:Initializing predict_model()
2022-07-27 19:59:05,519:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf82b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:59:05,520:INFO:Checking exceptions
2022-07-27 19:59:05,520:INFO:Preloading libraries
2022-07-27 19:59:38,912:INFO:Initializing load_model()
2022-07-27 19:59:38,912:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:59:39,005:INFO:Initializing predict_model()
2022-07-27 19:59:39,006:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a0c10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:59:39,007:INFO:Checking exceptions
2022-07-27 19:59:39,007:INFO:Preloading libraries
2022-07-27 19:59:51,591:INFO:Initializing load_model()
2022-07-27 19:59:51,591:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 19:59:51,684:INFO:Initializing predict_model()
2022-07-27 19:59:51,684:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522e73d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 19:59:51,685:INFO:Checking exceptions
2022-07-27 19:59:51,686:INFO:Preloading libraries
2022-07-27 20:00:22,492:INFO:Initializing load_model()
2022-07-27 20:00:22,492:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:00:22,564:INFO:Initializing predict_model()
2022-07-27 20:00:22,565:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a5970>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:00:22,565:INFO:Checking exceptions
2022-07-27 20:00:22,565:INFO:Preloading libraries
2022-07-27 20:00:31,450:INFO:Initializing load_model()
2022-07-27 20:00:31,450:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:00:31,527:INFO:Initializing predict_model()
2022-07-27 20:00:31,527:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51677a30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:00:31,528:INFO:Checking exceptions
2022-07-27 20:00:31,528:INFO:Preloading libraries
2022-07-27 20:02:36,903:INFO:Initializing load_model()
2022-07-27 20:02:36,903:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:02:36,969:INFO:Initializing predict_model()
2022-07-27 20:02:36,969:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a5a30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:02:36,970:INFO:Checking exceptions
2022-07-27 20:02:36,971:INFO:Preloading libraries
2022-07-27 20:02:37,090:INFO:Initializing predict_model()
2022-07-27 20:02:37,090:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a5a30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:02:37,090:INFO:Checking exceptions
2022-07-27 20:02:37,090:INFO:Preloading libraries
2022-07-27 20:05:03,198:INFO:Initializing load_model()
2022-07-27 20:05:03,198:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:05:03,269:INFO:Initializing predict_model()
2022-07-27 20:05:03,270:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6cbe0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:05:03,270:INFO:Checking exceptions
2022-07-27 20:05:03,271:INFO:Preloading libraries
2022-07-27 20:05:04,508:INFO:Initializing load_model()
2022-07-27 20:05:04,509:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:05:04,583:INFO:Initializing predict_model()
2022-07-27 20:05:04,584:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51673f40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:05:04,584:INFO:Checking exceptions
2022-07-27 20:05:04,585:INFO:Preloading libraries
2022-07-27 20:05:04,706:INFO:Initializing predict_model()
2022-07-27 20:05:04,706:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51673f40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:05:04,706:INFO:Checking exceptions
2022-07-27 20:05:04,707:INFO:Preloading libraries
2022-07-27 20:05:30,789:INFO:Initializing load_model()
2022-07-27 20:05:30,789:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:05:30,858:INFO:Initializing predict_model()
2022-07-27 20:05:30,858:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a0b20>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:05:30,858:INFO:Checking exceptions
2022-07-27 20:05:30,858:INFO:Preloading libraries
2022-07-27 20:05:32,185:INFO:Initializing load_model()
2022-07-27 20:05:32,187:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:05:32,279:INFO:Initializing predict_model()
2022-07-27 20:05:32,280:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a0ac0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:05:32,280:INFO:Checking exceptions
2022-07-27 20:05:32,281:INFO:Preloading libraries
2022-07-27 20:05:32,395:INFO:Initializing predict_model()
2022-07-27 20:05:32,395:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a0ac0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:05:32,396:INFO:Checking exceptions
2022-07-27 20:05:32,396:INFO:Preloading libraries
2022-07-27 20:07:08,839:INFO:Initializing load_model()
2022-07-27 20:07:08,840:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:07:08,904:INFO:Initializing predict_model()
2022-07-27 20:07:08,904:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc64940>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:07:08,905:INFO:Checking exceptions
2022-07-27 20:07:08,905:INFO:Preloading libraries
2022-07-27 20:07:10,476:INFO:Initializing load_model()
2022-07-27 20:07:10,478:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:07:10,567:INFO:Initializing predict_model()
2022-07-27 20:07:10,567:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5166dc40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:07:10,568:INFO:Checking exceptions
2022-07-27 20:07:10,568:INFO:Preloading libraries
2022-07-27 20:07:10,688:INFO:Initializing predict_model()
2022-07-27 20:07:10,689:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5166dc40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:07:10,689:INFO:Checking exceptions
2022-07-27 20:07:10,690:INFO:Preloading libraries
2022-07-27 20:08:57,617:INFO:Initializing load_model()
2022-07-27 20:08:57,617:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:08:57,680:INFO:Initializing predict_model()
2022-07-27 20:08:57,681:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb79ea5040>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:08:57,681:INFO:Checking exceptions
2022-07-27 20:08:57,681:INFO:Preloading libraries
2022-07-27 20:08:59,394:INFO:Initializing load_model()
2022-07-27 20:08:59,395:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:08:59,481:INFO:Initializing predict_model()
2022-07-27 20:08:59,482:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522ccf10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:08:59,482:INFO:Checking exceptions
2022-07-27 20:08:59,483:INFO:Preloading libraries
2022-07-27 20:08:59,595:INFO:Initializing predict_model()
2022-07-27 20:08:59,595:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522ccf10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:08:59,595:INFO:Checking exceptions
2022-07-27 20:08:59,595:INFO:Preloading libraries
2022-07-27 20:09:24,714:INFO:Initializing load_model()
2022-07-27 20:09:24,714:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:09:24,782:INFO:Initializing predict_model()
2022-07-27 20:09:24,782:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2e50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:09:24,783:INFO:Checking exceptions
2022-07-27 20:09:24,784:INFO:Preloading libraries
2022-07-27 20:09:26,297:INFO:Initializing load_model()
2022-07-27 20:09:26,300:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:09:26,384:INFO:Initializing predict_model()
2022-07-27 20:09:26,384:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51a58670>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:09:26,385:INFO:Checking exceptions
2022-07-27 20:09:26,385:INFO:Preloading libraries
2022-07-27 20:09:26,501:INFO:Initializing predict_model()
2022-07-27 20:09:26,501:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51a58670>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:09:26,501:INFO:Checking exceptions
2022-07-27 20:09:26,502:INFO:Preloading libraries
2022-07-27 20:09:57,434:INFO:Initializing load_model()
2022-07-27 20:09:57,436:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:09:57,504:INFO:Initializing predict_model()
2022-07-27 20:09:57,505:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8c40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:09:57,505:INFO:Checking exceptions
2022-07-27 20:09:57,505:INFO:Preloading libraries
2022-07-27 20:09:58,767:INFO:Initializing load_model()
2022-07-27 20:09:58,768:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:09:58,856:INFO:Initializing predict_model()
2022-07-27 20:09:58,857:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169ff70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:09:58,857:INFO:Checking exceptions
2022-07-27 20:09:58,858:INFO:Preloading libraries
2022-07-27 20:09:58,980:INFO:Initializing predict_model()
2022-07-27 20:09:58,980:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169ff70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:09:58,980:INFO:Checking exceptions
2022-07-27 20:09:58,981:INFO:Preloading libraries
2022-07-27 20:13:47,012:INFO:Initializing load_model()
2022-07-27 20:13:47,013:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:13:47,120:INFO:Initializing predict_model()
2022-07-27 20:13:47,120:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51876b50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:13:47,121:INFO:Checking exceptions
2022-07-27 20:13:47,121:INFO:Preloading libraries
2022-07-27 20:13:48,371:INFO:Initializing load_model()
2022-07-27 20:13:48,371:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:13:48,453:INFO:Initializing predict_model()
2022-07-27 20:13:48,453:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522cc310>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:13:48,454:INFO:Checking exceptions
2022-07-27 20:13:48,454:INFO:Preloading libraries
2022-07-27 20:13:48,575:INFO:Initializing predict_model()
2022-07-27 20:13:48,575:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522cc310>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:13:48,576:INFO:Checking exceptions
2022-07-27 20:13:48,576:INFO:Preloading libraries
2022-07-27 20:16:25,543:INFO:Initializing load_model()
2022-07-27 20:16:25,544:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:16:25,647:INFO:Initializing predict_model()
2022-07-27 20:16:25,648:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5167f460>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:16:25,648:INFO:Checking exceptions
2022-07-27 20:16:25,648:INFO:Preloading libraries
2022-07-27 20:16:26,116:INFO:Initializing load_model()
2022-07-27 20:16:26,117:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:16:26,223:INFO:Initializing predict_model()
2022-07-27 20:16:26,223:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc16cd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:16:26,223:INFO:Checking exceptions
2022-07-27 20:16:26,223:INFO:Preloading libraries
2022-07-27 20:16:26,354:INFO:Initializing predict_model()
2022-07-27 20:16:26,355:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc16cd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:16:26,356:INFO:Checking exceptions
2022-07-27 20:16:26,356:INFO:Preloading libraries
2022-07-27 20:23:05,024:INFO:Initializing load_model()
2022-07-27 20:23:05,025:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:23:05,097:INFO:Initializing predict_model()
2022-07-27 20:23:05,097:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522cc5e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:23:05,098:INFO:Checking exceptions
2022-07-27 20:23:05,098:INFO:Preloading libraries
2022-07-27 20:23:06,587:INFO:Initializing load_model()
2022-07-27 20:23:06,588:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:23:06,675:INFO:Initializing predict_model()
2022-07-27 20:23:06,675:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61e63460>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:23:06,676:INFO:Checking exceptions
2022-07-27 20:23:06,677:INFO:Preloading libraries
2022-07-27 20:23:06,794:INFO:Initializing predict_model()
2022-07-27 20:23:06,794:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61e63460>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:23:06,794:INFO:Checking exceptions
2022-07-27 20:23:06,796:INFO:Preloading libraries
2022-07-27 20:23:27,825:INFO:Initializing load_model()
2022-07-27 20:23:27,825:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:23:27,893:INFO:Initializing predict_model()
2022-07-27 20:23:27,893:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc16af0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:23:27,894:INFO:Checking exceptions
2022-07-27 20:23:27,894:INFO:Preloading libraries
2022-07-27 20:23:28,928:INFO:Initializing load_model()
2022-07-27 20:23:28,928:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:23:28,999:INFO:Initializing predict_model()
2022-07-27 20:23:29,000:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:23:29,001:INFO:Checking exceptions
2022-07-27 20:23:29,001:INFO:Preloading libraries
2022-07-27 20:23:29,115:INFO:Initializing predict_model()
2022-07-27 20:23:29,115:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:23:29,115:INFO:Checking exceptions
2022-07-27 20:23:29,115:INFO:Preloading libraries
2022-07-27 20:25:47,941:INFO:Initializing load_model()
2022-07-27 20:25:47,942:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:25:48,012:INFO:Initializing predict_model()
2022-07-27 20:25:48,012:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516777f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:25:48,012:INFO:Checking exceptions
2022-07-27 20:25:48,013:INFO:Preloading libraries
2022-07-27 20:25:49,107:INFO:Initializing load_model()
2022-07-27 20:25:49,108:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:25:49,198:INFO:Initializing predict_model()
2022-07-27 20:25:49,199:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc16790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:25:49,200:INFO:Checking exceptions
2022-07-27 20:25:49,200:INFO:Preloading libraries
2022-07-27 20:25:49,322:INFO:Initializing predict_model()
2022-07-27 20:25:49,323:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc16790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:25:49,323:INFO:Checking exceptions
2022-07-27 20:25:49,323:INFO:Preloading libraries
2022-07-27 20:26:14,094:INFO:Initializing load_model()
2022-07-27 20:26:14,094:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:26:14,164:INFO:Initializing predict_model()
2022-07-27 20:26:14,165:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5167f1f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:26:14,165:INFO:Checking exceptions
2022-07-27 20:26:14,166:INFO:Preloading libraries
2022-07-27 20:26:16,314:INFO:Initializing load_model()
2022-07-27 20:26:16,315:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:26:16,405:INFO:Initializing predict_model()
2022-07-27 20:26:16,405:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2d90>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:26:16,406:INFO:Checking exceptions
2022-07-27 20:26:16,407:INFO:Preloading libraries
2022-07-27 20:26:17,299:INFO:Initializing load_model()
2022-07-27 20:26:17,300:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 20:26:17,385:INFO:Initializing predict_model()
2022-07-27 20:26:17,385:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8c40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:26:17,385:INFO:Checking exceptions
2022-07-27 20:26:17,385:INFO:Preloading libraries
2022-07-27 20:26:17,498:INFO:Initializing predict_model()
2022-07-27 20:26:17,498:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8c40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 20:26:17,499:INFO:Checking exceptions
2022-07-27 20:26:17,499:INFO:Preloading libraries
2022-07-27 21:23:14,765:INFO:Initializing load_model()
2022-07-27 21:23:14,766:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:23:14,840:INFO:Initializing predict_model()
2022-07-27 21:23:14,841:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51891eb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:23:14,841:INFO:Checking exceptions
2022-07-27 21:23:14,842:INFO:Preloading libraries
2022-07-27 21:24:35,434:INFO:Initializing load_model()
2022-07-27 21:24:35,434:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:24:35,509:INFO:Initializing predict_model()
2022-07-27 21:24:35,510:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5167f040>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:24:35,510:INFO:Checking exceptions
2022-07-27 21:24:35,511:INFO:Preloading libraries
2022-07-27 21:25:39,645:INFO:Initializing load_model()
2022-07-27 21:25:39,645:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:25:39,721:INFO:Initializing predict_model()
2022-07-27 21:25:39,721:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5227d790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:25:39,721:INFO:Checking exceptions
2022-07-27 21:25:39,722:INFO:Preloading libraries
2022-07-27 21:26:55,651:INFO:Initializing load_model()
2022-07-27 21:26:55,651:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:26:55,718:INFO:Initializing predict_model()
2022-07-27 21:26:55,718:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8a90>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:26:55,719:INFO:Checking exceptions
2022-07-27 21:26:55,719:INFO:Preloading libraries
2022-07-27 21:29:35,567:INFO:Initializing load_model()
2022-07-27 21:29:35,567:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:29:35,640:INFO:Initializing predict_model()
2022-07-27 21:29:35,640:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169ffd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:29:35,641:INFO:Checking exceptions
2022-07-27 21:29:35,641:INFO:Preloading libraries
2022-07-27 21:29:47,300:INFO:Initializing load_model()
2022-07-27 21:29:47,301:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:29:47,367:INFO:Initializing predict_model()
2022-07-27 21:29:47,367:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:29:47,367:INFO:Checking exceptions
2022-07-27 21:29:47,367:INFO:Preloading libraries
2022-07-27 21:29:47,482:INFO:Initializing predict_model()
2022-07-27 21:29:47,482:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:29:47,483:INFO:Checking exceptions
2022-07-27 21:29:47,483:INFO:Preloading libraries
2022-07-27 21:30:52,452:INFO:Initializing load_model()
2022-07-27 21:30:52,452:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:30:52,521:INFO:Initializing predict_model()
2022-07-27 21:30:52,522:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb518854c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:30:52,522:INFO:Checking exceptions
2022-07-27 21:30:52,522:INFO:Preloading libraries
2022-07-27 21:31:14,410:INFO:Initializing load_model()
2022-07-27 21:31:14,411:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:31:14,478:INFO:Initializing predict_model()
2022-07-27 21:31:14,478:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61f00e80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:31:14,479:INFO:Checking exceptions
2022-07-27 21:31:14,479:INFO:Preloading libraries
2022-07-27 21:31:31,193:INFO:Initializing load_model()
2022-07-27 21:31:31,194:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:31:31,260:INFO:Initializing predict_model()
2022-07-27 21:31:31,260:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc3b8b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:31:31,260:INFO:Checking exceptions
2022-07-27 21:31:31,260:INFO:Preloading libraries
2022-07-27 21:31:56,726:INFO:Initializing load_model()
2022-07-27 21:31:56,727:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:31:56,791:INFO:Initializing predict_model()
2022-07-27 21:31:56,792:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5fd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:31:56,792:INFO:Checking exceptions
2022-07-27 21:31:56,792:INFO:Preloading libraries
2022-07-27 21:32:54,165:INFO:Initializing load_model()
2022-07-27 21:32:54,165:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:32:54,234:INFO:Initializing predict_model()
2022-07-27 21:32:54,235:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50216640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:32:54,236:INFO:Checking exceptions
2022-07-27 21:32:54,237:INFO:Preloading libraries
2022-07-27 21:37:26,808:INFO:Initializing load_model()
2022-07-27 21:37:26,808:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:37:26,883:INFO:Initializing predict_model()
2022-07-27 21:37:26,883:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf84c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:37:26,883:INFO:Checking exceptions
2022-07-27 21:37:26,883:INFO:Preloading libraries
2022-07-27 21:37:27,028:INFO:Initializing predict_model()
2022-07-27 21:37:27,029:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf84c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:37:27,029:INFO:Checking exceptions
2022-07-27 21:37:27,030:INFO:Preloading libraries
2022-07-27 21:38:23,863:INFO:Initializing load_model()
2022-07-27 21:38:23,863:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:38:23,935:INFO:Initializing predict_model()
2022-07-27 21:38:23,935:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522c93a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:38:23,936:INFO:Checking exceptions
2022-07-27 21:38:23,936:INFO:Preloading libraries
2022-07-27 21:38:25,742:INFO:Initializing load_model()
2022-07-27 21:38:25,744:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:38:25,828:INFO:Initializing predict_model()
2022-07-27 21:38:25,829:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51677970>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:38:25,829:INFO:Checking exceptions
2022-07-27 21:38:25,830:INFO:Preloading libraries
2022-07-27 21:38:25,950:INFO:Initializing predict_model()
2022-07-27 21:38:25,950:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51677970>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:38:25,950:INFO:Checking exceptions
2022-07-27 21:38:25,950:INFO:Preloading libraries
2022-07-27 21:39:22,231:INFO:Initializing load_model()
2022-07-27 21:39:22,231:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:39:22,296:INFO:Initializing predict_model()
2022-07-27 21:39:22,296:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5166dd00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:39:22,296:INFO:Checking exceptions
2022-07-27 21:39:22,297:INFO:Preloading libraries
2022-07-27 21:39:24,342:INFO:Initializing load_model()
2022-07-27 21:39:24,344:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 21:39:24,421:INFO:Initializing predict_model()
2022-07-27 21:39:24,422:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169ffa0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:39:24,423:INFO:Checking exceptions
2022-07-27 21:39:24,423:INFO:Preloading libraries
2022-07-27 21:39:24,545:INFO:Initializing predict_model()
2022-07-27 21:39:24,545:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169ffa0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 21:39:24,545:INFO:Checking exceptions
2022-07-27 21:39:24,545:INFO:Preloading libraries
2022-07-27 21:41:09,113:INFO:PyCaret Supervised Module
2022-07-27 21:41:09,113:INFO:ML Usecase: regression
2022-07-27 21:41:09,114:INFO:version 2.3.10
2022-07-27 21:41:09,114:INFO:Initializing setup()
2022-07-27 21:41:09,114:INFO:setup(target=cut, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 21:41:09,114:INFO:Checking environment
2022-07-27 21:41:09,114:INFO:python_version: 3.8.10
2022-07-27 21:41:09,114:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 21:41:09,114:INFO:machine: x86_64
2022-07-27 21:41:09,114:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 21:41:09,114:INFO:Memory: svmem(total=16699224064, available=7164493824, percent=57.1, used=9006469120, free=2400718848, active=10817380352, inactive=2337959936, buffers=582443008, cached=4709593088, shared=198066176, slab=763494400)
2022-07-27 21:41:09,134:INFO:Physical Core: 6
2022-07-27 21:41:09,134:INFO:Logical Core: 12
2022-07-27 21:41:09,134:INFO:Checking libraries
2022-07-27 21:41:09,135:INFO:pd==1.4.3
2022-07-27 21:41:09,135:INFO:numpy==1.22.4
2022-07-27 21:41:09,135:INFO:sklearn==0.23.2
2022-07-27 21:41:09,135:INFO:lightgbm==3.3.2
2022-07-27 21:41:09,135:INFO:catboost==1.0.6
2022-07-27 21:41:09,135:INFO:xgboost==1.6.1
2022-07-27 21:41:09,135:INFO:mlflow==1.27.0
2022-07-27 21:41:09,135:INFO:Checking Exceptions
2022-07-27 21:41:09,135:INFO:Declaring global variables
2022-07-27 21:41:09,135:INFO:USI: 534f
2022-07-27 21:41:09,135:INFO:pycaret_globals: {'_ml_usecase', 'X_test', 'y_train', '_all_models_internal', 'USI', 'fold_groups_param_full', 'html_param', 'pycaret_globals', 'fix_imbalance_param', 'n_jobs_param', '_available_plots', 'display_container', 'imputation_regressor', 'imputation_classifier', 'fold_shuffle_param', '_all_metrics', 'fold_groups_param', 'fold_generator', 'target_param', 'y', 'fold_param', 'stratify_param', 'log_plots_param', '_all_models', '_gpu_n_jobs_param', 'transform_target_param', 'dashboard_logger', 'prep_pipe', 'experiment__', 'seed', 'gpu_param', 'data_before_preprocess', 'X_train', 'X', 'logging_param', 'transform_target_method_param', 'iterative_imputation_iters_param', 'exp_name_log', 'fix_imbalance_method_param', '_internal_pipeline', 'y_test', 'master_model_container', 'create_model_container'}
2022-07-27 21:41:09,135:INFO:Preparing display monitor
2022-07-27 21:41:09,135:INFO:Preparing display monitor
2022-07-27 21:41:09,143:INFO:Importing libraries
2022-07-27 21:41:09,143:INFO:Copying data for preprocessing
2022-07-27 21:41:09,149:INFO:Declaring preprocessing parameters
2022-07-27 21:41:09,153:INFO:Creating preprocessing pipeline
2022-07-27 21:41:09,198:INFO:Preprocessing pipeline created successfully
2022-07-27 21:41:09,198:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 21:41:09,198:INFO:Creating global containers
2022-07-27 21:41:09,199:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 21:43:46,519:INFO:PyCaret Supervised Module
2022-07-27 21:43:46,519:INFO:ML Usecase: regression
2022-07-27 21:43:46,519:INFO:version 2.3.10
2022-07-27 21:43:46,519:INFO:Initializing setup()
2022-07-27 21:43:46,519:INFO:setup(target=carat, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=True, polynomial_degree=2, trigonometry_features=True, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=True, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-07-27 21:43:46,520:INFO:Checking environment
2022-07-27 21:43:46,520:INFO:python_version: 3.8.10
2022-07-27 21:43:46,520:INFO:python_build: ('default', 'Jun 22 2022 20:18:18')
2022-07-27 21:43:46,520:INFO:machine: x86_64
2022-07-27 21:43:46,520:INFO:platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.29
2022-07-27 21:43:46,520:INFO:Memory: svmem(total=16699224064, available=6967431168, percent=58.3, used=9217843200, free=2209923072, active=11031670784, inactive=2315898880, buffers=583188480, cached=4688269312, shared=183746560, slab=765075456)
2022-07-27 21:43:46,538:INFO:Physical Core: 6
2022-07-27 21:43:46,539:INFO:Logical Core: 12
2022-07-27 21:43:46,539:INFO:Checking libraries
2022-07-27 21:43:46,539:INFO:pd==1.4.3
2022-07-27 21:43:46,539:INFO:numpy==1.22.4
2022-07-27 21:43:46,539:INFO:sklearn==0.23.2
2022-07-27 21:43:46,539:INFO:lightgbm==3.3.2
2022-07-27 21:43:46,539:INFO:catboost==1.0.6
2022-07-27 21:43:46,539:INFO:xgboost==1.6.1
2022-07-27 21:43:46,539:INFO:mlflow==1.27.0
2022-07-27 21:43:46,539:INFO:Checking Exceptions
2022-07-27 21:43:46,539:INFO:Declaring global variables
2022-07-27 21:43:46,539:INFO:USI: 6450
2022-07-27 21:43:46,539:INFO:pycaret_globals: {'_ml_usecase', 'X_test', 'y_train', '_all_models_internal', 'USI', 'fold_groups_param_full', 'html_param', 'pycaret_globals', 'fix_imbalance_param', 'n_jobs_param', '_available_plots', 'display_container', 'imputation_regressor', 'imputation_classifier', 'fold_shuffle_param', '_all_metrics', 'fold_groups_param', 'fold_generator', 'target_param', 'y', 'fold_param', 'stratify_param', 'log_plots_param', '_all_models', '_gpu_n_jobs_param', 'transform_target_param', 'dashboard_logger', 'prep_pipe', 'experiment__', 'seed', 'gpu_param', 'data_before_preprocess', 'X_train', 'X', 'logging_param', 'transform_target_method_param', 'iterative_imputation_iters_param', 'exp_name_log', 'fix_imbalance_method_param', '_internal_pipeline', 'y_test', 'master_model_container', 'create_model_container'}
2022-07-27 21:43:46,539:INFO:Preparing display monitor
2022-07-27 21:43:46,539:INFO:Preparing display monitor
2022-07-27 21:43:46,551:INFO:Importing libraries
2022-07-27 21:43:46,551:INFO:Copying data for preprocessing
2022-07-27 21:43:46,558:INFO:Declaring preprocessing parameters
2022-07-27 21:43:46,562:INFO:Creating preprocessing pipeline
2022-07-27 21:43:46,606:INFO:Preprocessing pipeline created successfully
2022-07-27 21:43:46,606:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-07-27 21:43:46,606:INFO:Creating global containers
2022-07-27 21:43:46,606:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-07-27 21:43:52,686:INFO:Creating grid variables
2022-07-27 21:43:52,705:INFO:create_model_container: 0
2022-07-27 21:43:52,705:INFO:master_model_container: 0
2022-07-27 21:43:52,705:INFO:display_container: 1
2022-07-27 21:43:52,709:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='carat',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='carat')),
                ('fix_perfect', Remove_100(target='carat')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False)
2022-07-27 21:43:52,709:INFO:setup() succesfully completed......................................
2022-07-27 21:44:28,976:INFO:Initializing create_model()
2022-07-27 21:44:28,976:INFO:create_model(estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 21:44:28,976:INFO:Checking exceptions
2022-07-27 21:44:28,976:INFO:Preparing display monitor
2022-07-27 21:44:28,989:INFO:Importing libraries
2022-07-27 21:44:28,989:INFO:Copying training dataset
2022-07-27 21:44:28,992:INFO:Defining folds
2022-07-27 21:44:28,992:INFO:Declaring metric variables
2022-07-27 21:44:28,999:INFO:Importing untrained model
2022-07-27 21:44:29,006:INFO:CatBoost Regressor Imported succesfully
2022-07-27 21:44:29,021:INFO:Starting cross validation
2022-07-27 21:44:29,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 21:46:48,877:INFO:Calculating mean and std
2022-07-27 21:46:48,878:INFO:Creating metrics dataframe
2022-07-27 21:46:48,887:INFO:Finalizing model
2022-07-27 21:46:53,804:INFO:Uploading results into container
2022-07-27 21:46:53,804:INFO:Uploading model into container now
2022-07-27 21:46:53,809:INFO:create_model_container: 1
2022-07-27 21:46:53,809:INFO:master_model_container: 1
2022-07-27 21:46:53,809:INFO:display_container: 2
2022-07-27 21:46:53,810:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e310dd60>
2022-07-27 21:46:53,810:INFO:create_model() succesfully completed......................................
2022-07-27 21:47:40,444:INFO:Initializing tune_model()
2022-07-27 21:47:40,444:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f185c1cc040>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-07-27 21:47:40,444:INFO:Checking exceptions
2022-07-27 21:47:40,445:INFO:Preparing display monitor
2022-07-27 21:47:40,457:INFO:Copying training dataset
2022-07-27 21:47:40,459:INFO:Checking base model
2022-07-27 21:47:40,459:INFO:Base model : CatBoost Regressor
2022-07-27 21:47:40,464:INFO:Declaring metric variables
2022-07-27 21:47:40,471:INFO:Defining Hyperparameters
2022-07-27 21:47:40,589:INFO:Tuning with n_jobs=-1
2022-07-27 21:47:40,589:INFO:Initializing RandomizedSearchCV
2022-07-27 21:50:08,648:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2022-07-27 21:50:08,650:INFO:Hyperparameter search completed
2022-07-27 21:50:08,651:INFO:SubProcess create_model() called ==================================
2022-07-27 21:50:08,652:INFO:Initializing create_model()
2022-07-27 21:50:08,652:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e3108d60>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f18e3115c40>, return_train_score=False, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2022-07-27 21:50:08,652:INFO:Checking exceptions
2022-07-27 21:50:08,652:INFO:Importing libraries
2022-07-27 21:50:08,653:INFO:Copying training dataset
2022-07-27 21:50:08,660:INFO:Defining folds
2022-07-27 21:50:08,661:INFO:Declaring metric variables
2022-07-27 21:50:08,686:INFO:Importing untrained model
2022-07-27 21:50:08,686:INFO:Declaring custom model
2022-07-27 21:50:08,711:INFO:CatBoost Regressor Imported succesfully
2022-07-27 21:50:08,770:INFO:Starting cross validation
2022-07-27 21:50:08,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 21:50:53,377:INFO:Calculating mean and std
2022-07-27 21:50:53,380:INFO:Creating metrics dataframe
2022-07-27 21:50:53,412:INFO:Finalizing model
2022-07-27 21:50:56,556:INFO:Uploading results into container
2022-07-27 21:50:56,556:INFO:Uploading model into container now
2022-07-27 21:50:56,556:INFO:create_model_container: 2
2022-07-27 21:50:56,556:INFO:master_model_container: 2
2022-07-27 21:50:56,556:INFO:display_container: 3
2022-07-27 21:50:56,556:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e311a280>
2022-07-27 21:50:56,556:INFO:create_model() succesfully completed......................................
2022-07-27 21:50:56,642:INFO:SubProcess create_model() end ==================================
2022-07-27 21:50:56,647:INFO:create_model_container: 2
2022-07-27 21:50:56,647:INFO:master_model_container: 2
2022-07-27 21:50:56,647:INFO:display_container: 3
2022-07-27 21:50:56,647:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e311a280>
2022-07-27 21:50:56,647:INFO:tune_model() succesfully completed......................................
2022-07-27 22:02:18,392:INFO:Initializing finalize_model()
2022-07-27 22:02:18,392:INFO:finalize_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e311a280>, fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-07-27 22:02:18,392:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x7f18e311a280>
2022-07-27 22:02:18,392:INFO:Initializing create_model()
2022-07-27 22:02:18,392:INFO:create_model(estimator=<catboost.core.CatBoostRegressor object at 0x7f18e311a280>, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-07-27 22:02:18,393:INFO:Checking exceptions
2022-07-27 22:02:18,393:INFO:Importing libraries
2022-07-27 22:02:18,393:INFO:Copying training dataset
2022-07-27 22:02:18,395:INFO:Defining folds
2022-07-27 22:02:18,395:INFO:Declaring metric variables
2022-07-27 22:02:18,395:INFO:Importing untrained model
2022-07-27 22:02:18,396:INFO:Declaring custom model
2022-07-27 22:02:18,396:INFO:CatBoost Regressor Imported succesfully
2022-07-27 22:02:18,396:INFO:Starting cross validation
2022-07-27 22:02:18,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 22:03:08,151:INFO:Calculating mean and std
2022-07-27 22:03:08,152:INFO:Creating metrics dataframe
2022-07-27 22:03:08,154:INFO:Finalizing model
2022-07-27 22:03:10,898:INFO:create_model_container: 2
2022-07-27 22:03:10,899:INFO:master_model_container: 2
2022-07-27 22:03:10,899:INFO:display_container: 4
2022-07-27 22:03:10,899:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e317ab50>
2022-07-27 22:03:10,899:INFO:create_model() succesfully completed......................................
2022-07-27 22:03:10,996:INFO:create_model_container: 2
2022-07-27 22:03:10,996:INFO:master_model_container: 2
2022-07-27 22:03:10,996:INFO:display_container: 3
2022-07-27 22:03:10,996:INFO:<catboost.core.CatBoostRegressor object at 0x7f18e317ab50>
2022-07-27 22:03:10,996:INFO:finalize_model() succesfully completed......................................
2022-07-27 22:03:49,161:INFO:Initializing save_model()
2022-07-27 22:03:49,161:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x7f18e311a280>, model_name=diamond_model_quality, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='carat',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='carat')),
                ('fix_perfect', Remove_100(target='carat')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-07-27 22:03:49,161:INFO:Adding model into prep_pipe
2022-07-27 22:03:49,298:INFO:diamond_model_quality.pkl saved in current working directory
2022-07-27 22:03:49,302:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='carat',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f18e311a280>]],
         verbose=False)
2022-07-27 22:03:49,302:INFO:save_model() successfully completed......................................
2022-07-27 22:06:03,491:INFO:Initializing load_model()
2022-07-27 22:06:03,492:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:06:03,608:INFO:Initializing predict_model()
2022-07-27 22:06:03,608:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50258a00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:06:03,609:INFO:Checking exceptions
2022-07-27 22:06:03,609:INFO:Preloading libraries
2022-07-27 22:06:05,134:INFO:Initializing load_model()
2022-07-27 22:06:05,135:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:06:05,218:INFO:Initializing predict_model()
2022-07-27 22:06:05,218:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb79e8cbb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:06:05,218:INFO:Checking exceptions
2022-07-27 22:06:05,219:INFO:Preloading libraries
2022-07-27 22:06:05,337:INFO:Initializing predict_model()
2022-07-27 22:06:05,337:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb79e8cbb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:06:05,337:INFO:Checking exceptions
2022-07-27 22:06:05,337:INFO:Preloading libraries
2022-07-27 22:07:16,384:INFO:Initializing load_model()
2022-07-27 22:07:16,384:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:07:44,855:INFO:Initializing load_model()
2022-07-27 22:07:44,855:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:07:44,925:INFO:Initializing predict_model()
2022-07-27 22:07:44,925:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50207ac0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:07:44,925:INFO:Checking exceptions
2022-07-27 22:07:44,925:INFO:Preloading libraries
2022-07-27 22:07:46,196:INFO:Initializing load_model()
2022-07-27 22:07:46,198:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:07:46,284:INFO:Initializing predict_model()
2022-07-27 22:07:46,284:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6cd30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:07:46,285:INFO:Checking exceptions
2022-07-27 22:07:46,285:INFO:Preloading libraries
2022-07-27 22:07:46,404:INFO:Initializing predict_model()
2022-07-27 22:07:46,405:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6cd30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:07:46,405:INFO:Checking exceptions
2022-07-27 22:07:46,406:INFO:Preloading libraries
2022-07-27 22:09:13,958:INFO:Initializing load_model()
2022-07-27 22:09:13,958:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:14,013:INFO:Initializing load_model()
2022-07-27 22:09:14,013:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:14,110:INFO:Initializing predict_model()
2022-07-27 22:09:14,110:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb502164c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:09:14,110:INFO:Checking exceptions
2022-07-27 22:09:14,111:INFO:Preloading libraries
2022-07-27 22:09:15,578:INFO:Initializing load_model()
2022-07-27 22:09:15,580:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:15,651:INFO:Initializing load_model()
2022-07-27 22:09:15,652:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:15,755:INFO:Initializing predict_model()
2022-07-27 22:09:15,755:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6ce50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:09:15,755:INFO:Checking exceptions
2022-07-27 22:09:15,755:INFO:Preloading libraries
2022-07-27 22:09:15,876:INFO:Initializing predict_model()
2022-07-27 22:09:15,878:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6ce50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:09:15,878:INFO:Checking exceptions
2022-07-27 22:09:15,878:INFO:Preloading libraries
2022-07-27 22:09:18,502:INFO:Initializing load_model()
2022-07-27 22:09:18,505:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:18,597:INFO:Initializing load_model()
2022-07-27 22:09:18,597:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:18,671:INFO:Initializing predict_model()
2022-07-27 22:09:18,671:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8c40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:09:18,671:INFO:Checking exceptions
2022-07-27 22:09:18,671:INFO:Preloading libraries
2022-07-27 22:09:19,259:INFO:Initializing load_model()
2022-07-27 22:09:19,262:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:19,329:INFO:Initializing load_model()
2022-07-27 22:09:19,330:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:09:19,383:INFO:Initializing predict_model()
2022-07-27 22:09:19,383:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5b80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:09:19,384:INFO:Checking exceptions
2022-07-27 22:09:19,384:INFO:Preloading libraries
2022-07-27 22:09:19,501:INFO:Initializing predict_model()
2022-07-27 22:09:19,501:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5b80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:09:19,501:INFO:Checking exceptions
2022-07-27 22:09:19,502:INFO:Preloading libraries
2022-07-27 22:11:07,375:INFO:Initializing load_model()
2022-07-27 22:11:07,375:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:11:07,431:INFO:Initializing load_model()
2022-07-27 22:11:07,431:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:11:07,492:INFO:Initializing predict_model()
2022-07-27 22:11:07,493:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6c520>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:11:07,493:INFO:Checking exceptions
2022-07-27 22:11:07,494:INFO:Preloading libraries
2022-07-27 22:11:08,845:INFO:Initializing load_model()
2022-07-27 22:11:08,846:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:11:08,903:INFO:Initializing load_model()
2022-07-27 22:11:08,904:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:11:08,970:INFO:Initializing predict_model()
2022-07-27 22:11:08,970:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169f610>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:11:08,970:INFO:Checking exceptions
2022-07-27 22:11:08,971:INFO:Preloading libraries
2022-07-27 22:11:09,110:INFO:Initializing predict_model()
2022-07-27 22:11:09,111:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169f610>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:11:09,112:INFO:Checking exceptions
2022-07-27 22:11:09,112:INFO:Preloading libraries
2022-07-27 22:13:05,558:INFO:Initializing load_model()
2022-07-27 22:13:05,558:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:05,612:INFO:Initializing load_model()
2022-07-27 22:13:05,612:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:05,679:INFO:Initializing predict_model()
2022-07-27 22:13:05,679:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f59a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:05,679:INFO:Checking exceptions
2022-07-27 22:13:05,679:INFO:Preloading libraries
2022-07-27 22:13:05,805:INFO:Initializing predict_model()
2022-07-27 22:13:05,805:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6c8b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:05,805:INFO:Checking exceptions
2022-07-27 22:13:05,805:INFO:Preloading libraries
2022-07-27 22:13:34,770:INFO:Initializing load_model()
2022-07-27 22:13:34,770:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:34,829:INFO:Initializing load_model()
2022-07-27 22:13:34,829:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:34,887:INFO:Initializing predict_model()
2022-07-27 22:13:34,887:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5227da00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:34,887:INFO:Checking exceptions
2022-07-27 22:13:34,887:INFO:Preloading libraries
2022-07-27 22:13:35,009:INFO:Initializing predict_model()
2022-07-27 22:13:35,010:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52230940>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:35,011:INFO:Checking exceptions
2022-07-27 22:13:35,011:INFO:Preloading libraries
2022-07-27 22:13:36,318:INFO:Initializing load_model()
2022-07-27 22:13:36,319:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:36,387:INFO:Initializing load_model()
2022-07-27 22:13:36,387:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:36,448:INFO:Initializing predict_model()
2022-07-27 22:13:36,448:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51876910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:36,448:INFO:Checking exceptions
2022-07-27 22:13:36,448:INFO:Preloading libraries
2022-07-27 22:13:36,567:INFO:Initializing predict_model()
2022-07-27 22:13:36,567:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51876910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:36,568:INFO:Checking exceptions
2022-07-27 22:13:36,569:INFO:Preloading libraries
2022-07-27 22:13:36,698:INFO:Initializing predict_model()
2022-07-27 22:13:36,698:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521f6370>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:36,699:INFO:Checking exceptions
2022-07-27 22:13:36,699:INFO:Preloading libraries
2022-07-27 22:13:39,629:INFO:Initializing load_model()
2022-07-27 22:13:39,630:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:39,696:INFO:Initializing load_model()
2022-07-27 22:13:39,697:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:39,755:INFO:Initializing predict_model()
2022-07-27 22:13:39,755:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50216ca0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:39,755:INFO:Checking exceptions
2022-07-27 22:13:39,756:INFO:Preloading libraries
2022-07-27 22:13:39,876:INFO:Initializing predict_model()
2022-07-27 22:13:39,876:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50207d00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:39,876:INFO:Checking exceptions
2022-07-27 22:13:39,876:INFO:Preloading libraries
2022-07-27 22:13:40,247:INFO:Initializing load_model()
2022-07-27 22:13:40,248:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:40,316:INFO:Initializing load_model()
2022-07-27 22:13:40,316:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:13:40,376:INFO:Initializing predict_model()
2022-07-27 22:13:40,376:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61f00340>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:40,376:INFO:Checking exceptions
2022-07-27 22:13:40,376:INFO:Preloading libraries
2022-07-27 22:13:40,495:INFO:Initializing predict_model()
2022-07-27 22:13:40,495:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51876f40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:40,496:INFO:Checking exceptions
2022-07-27 22:13:40,496:INFO:Preloading libraries
2022-07-27 22:13:40,612:INFO:Initializing predict_model()
2022-07-27 22:13:40,612:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51876f40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:13:40,612:INFO:Checking exceptions
2022-07-27 22:13:40,612:INFO:Preloading libraries
2022-07-27 22:17:38,112:INFO:Initializing load_model()
2022-07-27 22:17:38,112:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:17:38,171:INFO:Initializing load_model()
2022-07-27 22:17:38,171:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:17:38,232:INFO:Initializing predict_model()
2022-07-27 22:17:38,233:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50216ca0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:38,233:INFO:Checking exceptions
2022-07-27 22:17:38,233:INFO:Preloading libraries
2022-07-27 22:17:38,387:INFO:Initializing predict_model()
2022-07-27 22:17:38,387:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5021bdf0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:38,388:INFO:Checking exceptions
2022-07-27 22:17:38,388:INFO:Preloading libraries
2022-07-27 22:17:41,860:INFO:Initializing load_model()
2022-07-27 22:17:41,862:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:17:41,929:INFO:Initializing load_model()
2022-07-27 22:17:41,929:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:17:41,989:INFO:Initializing predict_model()
2022-07-27 22:17:41,989:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521f62e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:41,989:INFO:Checking exceptions
2022-07-27 22:17:41,990:INFO:Preloading libraries
2022-07-27 22:17:42,121:INFO:Initializing predict_model()
2022-07-27 22:17:42,121:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61f000a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:42,122:INFO:Checking exceptions
2022-07-27 22:17:42,123:INFO:Preloading libraries
2022-07-27 22:17:42,511:INFO:Initializing load_model()
2022-07-27 22:17:42,513:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:17:42,573:INFO:Initializing load_model()
2022-07-27 22:17:42,573:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:17:42,631:INFO:Initializing predict_model()
2022-07-27 22:17:42,632:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50207a60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:42,632:INFO:Checking exceptions
2022-07-27 22:17:42,632:INFO:Preloading libraries
2022-07-27 22:17:42,752:INFO:Initializing predict_model()
2022-07-27 22:17:42,752:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc643a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:42,752:INFO:Checking exceptions
2022-07-27 22:17:42,752:INFO:Preloading libraries
2022-07-27 22:17:42,870:INFO:Initializing predict_model()
2022-07-27 22:17:42,870:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc643a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:17:42,870:INFO:Checking exceptions
2022-07-27 22:17:42,870:INFO:Preloading libraries
2022-07-27 22:18:04,285:INFO:Initializing load_model()
2022-07-27 22:18:04,285:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:18:04,341:INFO:Initializing load_model()
2022-07-27 22:18:04,341:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:18:04,400:INFO:Initializing predict_model()
2022-07-27 22:18:04,400:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5021b9a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:04,400:INFO:Checking exceptions
2022-07-27 22:18:04,400:INFO:Preloading libraries
2022-07-27 22:18:04,524:INFO:Initializing predict_model()
2022-07-27 22:18:04,525:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51891550>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:04,525:INFO:Checking exceptions
2022-07-27 22:18:04,526:INFO:Preloading libraries
2022-07-27 22:18:07,224:INFO:Initializing load_model()
2022-07-27 22:18:07,225:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:18:07,288:INFO:Initializing load_model()
2022-07-27 22:18:07,289:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:18:07,348:INFO:Initializing predict_model()
2022-07-27 22:18:07,349:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61eb2850>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:07,349:INFO:Checking exceptions
2022-07-27 22:18:07,349:INFO:Preloading libraries
2022-07-27 22:18:07,468:INFO:Initializing predict_model()
2022-07-27 22:18:07,468:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50207460>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:07,468:INFO:Checking exceptions
2022-07-27 22:18:07,468:INFO:Preloading libraries
2022-07-27 22:18:07,587:INFO:Initializing predict_model()
2022-07-27 22:18:07,587:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50207460>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:07,587:INFO:Checking exceptions
2022-07-27 22:18:07,588:INFO:Preloading libraries
2022-07-27 22:18:10,303:INFO:Initializing load_model()
2022-07-27 22:18:10,304:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:18:10,375:INFO:Initializing load_model()
2022-07-27 22:18:10,376:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:18:10,433:INFO:Initializing predict_model()
2022-07-27 22:18:10,433:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169fd60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:10,433:INFO:Checking exceptions
2022-07-27 22:18:10,433:INFO:Preloading libraries
2022-07-27 22:18:10,561:INFO:Initializing predict_model()
2022-07-27 22:18:10,562:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169fd60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:10,562:INFO:Checking exceptions
2022-07-27 22:18:10,563:INFO:Preloading libraries
2022-07-27 22:18:10,685:INFO:Initializing predict_model()
2022-07-27 22:18:10,686:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc18a90>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:18:10,686:INFO:Checking exceptions
2022-07-27 22:18:10,686:INFO:Preloading libraries
2022-07-27 22:22:39,945:INFO:Initializing load_model()
2022-07-27 22:22:39,946:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:22:40,007:INFO:Initializing load_model()
2022-07-27 22:22:40,007:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:22:40,067:INFO:Initializing predict_model()
2022-07-27 22:22:40,067:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8850>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:22:40,068:INFO:Checking exceptions
2022-07-27 22:22:40,069:INFO:Preloading libraries
2022-07-27 22:22:40,227:INFO:Initializing predict_model()
2022-07-27 22:22:40,228:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5021b430>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:22:40,228:INFO:Checking exceptions
2022-07-27 22:22:40,228:INFO:Preloading libraries
2022-07-27 22:22:42,590:INFO:Initializing load_model()
2022-07-27 22:22:42,591:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:22:42,649:INFO:Initializing load_model()
2022-07-27 22:22:42,649:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:22:42,707:INFO:Initializing predict_model()
2022-07-27 22:22:42,707:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5167f1f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:22:42,707:INFO:Checking exceptions
2022-07-27 22:22:42,707:INFO:Preloading libraries
2022-07-27 22:22:42,822:INFO:Initializing predict_model()
2022-07-27 22:22:42,822:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5167f1f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:22:42,822:INFO:Checking exceptions
2022-07-27 22:22:42,823:INFO:Preloading libraries
2022-07-27 22:22:42,934:INFO:Initializing predict_model()
2022-07-27 22:22:42,934:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51a58490>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:22:42,934:INFO:Checking exceptions
2022-07-27 22:22:42,935:INFO:Preloading libraries
2022-07-27 22:23:05,324:INFO:Initializing load_model()
2022-07-27 22:23:05,324:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:23:05,376:INFO:Initializing load_model()
2022-07-27 22:23:05,376:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:23:05,434:INFO:Initializing predict_model()
2022-07-27 22:23:05,435:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f8760>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:05,435:INFO:Checking exceptions
2022-07-27 22:23:05,435:INFO:Preloading libraries
2022-07-27 22:23:05,553:INFO:Initializing predict_model()
2022-07-27 22:23:05,553:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50216340>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:05,554:INFO:Checking exceptions
2022-07-27 22:23:05,555:INFO:Preloading libraries
2022-07-27 22:23:06,709:INFO:Initializing load_model()
2022-07-27 22:23:06,710:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:23:06,775:INFO:Initializing load_model()
2022-07-27 22:23:06,775:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:23:06,837:INFO:Initializing predict_model()
2022-07-27 22:23:06,837:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb79ea5100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:06,838:INFO:Checking exceptions
2022-07-27 22:23:06,838:INFO:Preloading libraries
2022-07-27 22:23:06,957:INFO:Initializing predict_model()
2022-07-27 22:23:06,957:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb79ea5100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:06,957:INFO:Checking exceptions
2022-07-27 22:23:06,958:INFO:Preloading libraries
2022-07-27 22:23:07,075:INFO:Initializing predict_model()
2022-07-27 22:23:07,075:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51891100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:07,075:INFO:Checking exceptions
2022-07-27 22:23:07,075:INFO:Preloading libraries
2022-07-27 22:23:09,319:INFO:Initializing load_model()
2022-07-27 22:23:09,320:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:23:09,386:INFO:Initializing load_model()
2022-07-27 22:23:09,386:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:23:09,440:INFO:Initializing predict_model()
2022-07-27 22:23:09,440:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61eb2d90>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:09,441:INFO:Checking exceptions
2022-07-27 22:23:09,441:INFO:Preloading libraries
2022-07-27 22:23:09,559:INFO:Initializing predict_model()
2022-07-27 22:23:09,559:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc64160>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:09,559:INFO:Checking exceptions
2022-07-27 22:23:09,559:INFO:Preloading libraries
2022-07-27 22:23:09,674:INFO:Initializing predict_model()
2022-07-27 22:23:09,675:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc64160>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:23:09,675:INFO:Checking exceptions
2022-07-27 22:23:09,675:INFO:Preloading libraries
2022-07-27 22:27:25,394:INFO:Initializing load_model()
2022-07-27 22:27:25,395:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:27:25,455:INFO:Initializing load_model()
2022-07-27 22:27:25,455:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:27:25,533:INFO:Initializing predict_model()
2022-07-27 22:27:25,533:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222e20>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:27:25,534:INFO:Checking exceptions
2022-07-27 22:27:25,534:INFO:Preloading libraries
2022-07-27 22:27:25,674:INFO:Initializing predict_model()
2022-07-27 22:27:25,675:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5fa0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:27:25,675:INFO:Checking exceptions
2022-07-27 22:27:25,675:INFO:Preloading libraries
2022-07-27 22:29:31,773:INFO:Initializing load_model()
2022-07-27 22:29:31,773:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:29:31,823:INFO:Initializing load_model()
2022-07-27 22:29:31,823:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:29:31,879:INFO:Initializing predict_model()
2022-07-27 22:29:31,880:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222ee0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:29:31,880:INFO:Checking exceptions
2022-07-27 22:29:31,881:INFO:Preloading libraries
2022-07-27 22:29:32,001:INFO:Initializing predict_model()
2022-07-27 22:29:32,002:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169ff10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:29:32,003:INFO:Checking exceptions
2022-07-27 22:29:32,004:INFO:Preloading libraries
2022-07-27 22:30:23,369:INFO:Initializing load_model()
2022-07-27 22:30:23,369:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:30:23,422:INFO:Initializing load_model()
2022-07-27 22:30:23,422:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:30:23,477:INFO:Initializing predict_model()
2022-07-27 22:30:23,478:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222520>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:30:23,478:INFO:Checking exceptions
2022-07-27 22:30:23,478:INFO:Preloading libraries
2022-07-27 22:30:23,599:INFO:Initializing predict_model()
2022-07-27 22:30:23,600:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f8520>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:30:23,601:INFO:Checking exceptions
2022-07-27 22:30:23,601:INFO:Preloading libraries
2022-07-27 22:30:38,288:INFO:Initializing load_model()
2022-07-27 22:30:38,288:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:30:38,340:INFO:Initializing load_model()
2022-07-27 22:30:38,340:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:30:38,400:INFO:Initializing predict_model()
2022-07-27 22:30:38,400:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51a584c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:30:38,400:INFO:Checking exceptions
2022-07-27 22:30:38,400:INFO:Preloading libraries
2022-07-27 22:30:38,534:INFO:Initializing predict_model()
2022-07-27 22:30:38,535:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5225cb20>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:30:38,536:INFO:Checking exceptions
2022-07-27 22:30:38,536:INFO:Preloading libraries
2022-07-27 22:31:14,339:INFO:Initializing load_model()
2022-07-27 22:31:14,339:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:31:14,396:INFO:Initializing load_model()
2022-07-27 22:31:14,396:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:31:14,452:INFO:Initializing predict_model()
2022-07-27 22:31:14,452:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51876880>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:31:14,452:INFO:Checking exceptions
2022-07-27 22:31:14,453:INFO:Preloading libraries
2022-07-27 22:31:14,579:INFO:Initializing predict_model()
2022-07-27 22:31:14,580:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5224ad60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:31:14,580:INFO:Checking exceptions
2022-07-27 22:31:14,581:INFO:Preloading libraries
2022-07-27 22:32:12,626:INFO:Initializing load_model()
2022-07-27 22:32:12,627:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:32:12,678:INFO:Initializing load_model()
2022-07-27 22:32:12,678:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:32:12,734:INFO:Initializing predict_model()
2022-07-27 22:32:12,734:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222eb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:32:12,735:INFO:Checking exceptions
2022-07-27 22:32:12,735:INFO:Preloading libraries
2022-07-27 22:32:12,853:INFO:Initializing predict_model()
2022-07-27 22:32:12,854:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521fec70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:32:12,855:INFO:Checking exceptions
2022-07-27 22:32:12,855:INFO:Preloading libraries
2022-07-27 22:32:36,301:INFO:Initializing load_model()
2022-07-27 22:32:36,302:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:32:36,356:INFO:Initializing load_model()
2022-07-27 22:32:36,356:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:32:36,416:INFO:Initializing predict_model()
2022-07-27 22:32:36,416:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522302b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:32:36,416:INFO:Checking exceptions
2022-07-27 22:32:36,416:INFO:Preloading libraries
2022-07-27 22:32:36,535:INFO:Initializing predict_model()
2022-07-27 22:32:36,535:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f88e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:32:36,536:INFO:Checking exceptions
2022-07-27 22:32:36,537:INFO:Preloading libraries
2022-07-27 22:32:51,108:INFO:Initializing load_model()
2022-07-27 22:32:51,108:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:32:51,165:INFO:Initializing load_model()
2022-07-27 22:32:51,165:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:32:51,224:INFO:Initializing predict_model()
2022-07-27 22:32:51,224:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51ddd6a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:32:51,224:INFO:Checking exceptions
2022-07-27 22:32:51,224:INFO:Preloading libraries
2022-07-27 22:32:51,359:INFO:Initializing predict_model()
2022-07-27 22:32:51,360:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5580>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:32:51,360:INFO:Checking exceptions
2022-07-27 22:32:51,360:INFO:Preloading libraries
2022-07-27 22:34:08,256:INFO:Initializing load_model()
2022-07-27 22:34:08,256:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:34:08,308:INFO:Initializing load_model()
2022-07-27 22:34:08,308:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:34:08,363:INFO:Initializing predict_model()
2022-07-27 22:34:08,363:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522d2430>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:34:08,363:INFO:Checking exceptions
2022-07-27 22:34:08,364:INFO:Preloading libraries
2022-07-27 22:34:08,482:INFO:Initializing predict_model()
2022-07-27 22:34:08,482:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51dd3640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:34:08,482:INFO:Checking exceptions
2022-07-27 22:34:08,482:INFO:Preloading libraries
2022-07-27 22:35:00,921:INFO:Initializing load_model()
2022-07-27 22:35:00,922:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:35:00,974:INFO:Initializing load_model()
2022-07-27 22:35:00,974:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:35:01,030:INFO:Initializing predict_model()
2022-07-27 22:35:01,031:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51673c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:35:01,031:INFO:Checking exceptions
2022-07-27 22:35:01,031:INFO:Preloading libraries
2022-07-27 22:35:01,149:INFO:Initializing predict_model()
2022-07-27 22:35:01,150:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5670>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:35:01,150:INFO:Checking exceptions
2022-07-27 22:35:01,150:INFO:Preloading libraries
2022-07-27 22:36:23,095:INFO:Initializing load_model()
2022-07-27 22:36:23,095:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:36:23,149:INFO:Initializing load_model()
2022-07-27 22:36:23,149:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:36:23,202:INFO:Initializing predict_model()
2022-07-27 22:36:23,203:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf27f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:36:23,203:INFO:Checking exceptions
2022-07-27 22:36:23,203:INFO:Preloading libraries
2022-07-27 22:36:23,322:INFO:Initializing predict_model()
2022-07-27 22:36:23,323:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51dd35b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:36:23,323:INFO:Checking exceptions
2022-07-27 22:36:23,323:INFO:Preloading libraries
2022-07-27 22:37:51,865:INFO:Initializing load_model()
2022-07-27 22:37:51,866:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:37:51,923:INFO:Initializing load_model()
2022-07-27 22:37:51,923:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:37:51,982:INFO:Initializing predict_model()
2022-07-27 22:37:51,982:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8eb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:37:51,983:INFO:Checking exceptions
2022-07-27 22:37:51,983:INFO:Preloading libraries
2022-07-27 22:37:52,099:INFO:Initializing predict_model()
2022-07-27 22:37:52,099:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222b50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:37:52,100:INFO:Checking exceptions
2022-07-27 22:37:52,101:INFO:Preloading libraries
2022-07-27 22:38:44,578:INFO:Initializing load_model()
2022-07-27 22:38:44,578:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:38:44,635:INFO:Initializing load_model()
2022-07-27 22:38:44,636:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:38:44,690:INFO:Initializing predict_model()
2022-07-27 22:38:44,691:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521feee0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:38:44,691:INFO:Checking exceptions
2022-07-27 22:38:44,691:INFO:Preloading libraries
2022-07-27 22:38:44,810:INFO:Initializing predict_model()
2022-07-27 22:38:44,811:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51db92b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:38:44,811:INFO:Checking exceptions
2022-07-27 22:38:44,811:INFO:Preloading libraries
2022-07-27 22:39:29,566:INFO:Initializing load_model()
2022-07-27 22:39:29,566:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:39:29,620:INFO:Initializing load_model()
2022-07-27 22:39:29,620:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:39:29,678:INFO:Initializing predict_model()
2022-07-27 22:39:29,679:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50258580>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:39:29,679:INFO:Checking exceptions
2022-07-27 22:39:29,680:INFO:Preloading libraries
2022-07-27 22:39:29,801:INFO:Initializing predict_model()
2022-07-27 22:39:29,801:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5021b280>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:39:29,801:INFO:Checking exceptions
2022-07-27 22:39:29,801:INFO:Preloading libraries
2022-07-27 22:39:47,918:INFO:Initializing load_model()
2022-07-27 22:39:47,919:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:39:47,991:INFO:Initializing load_model()
2022-07-27 22:39:47,992:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:39:48,065:INFO:Initializing predict_model()
2022-07-27 22:39:48,065:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb516a8d90>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:39:48,066:INFO:Checking exceptions
2022-07-27 22:39:48,066:INFO:Preloading libraries
2022-07-27 22:39:48,199:INFO:Initializing predict_model()
2022-07-27 22:39:48,199:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52230a00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:39:48,199:INFO:Checking exceptions
2022-07-27 22:39:48,200:INFO:Preloading libraries
2022-07-27 22:42:36,531:INFO:Initializing load_model()
2022-07-27 22:42:36,531:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:42:36,589:INFO:Initializing load_model()
2022-07-27 22:42:36,589:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:42:36,650:INFO:Initializing predict_model()
2022-07-27 22:42:36,650:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51de53d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:42:36,650:INFO:Checking exceptions
2022-07-27 22:42:36,650:INFO:Preloading libraries
2022-07-27 22:42:36,799:INFO:Initializing predict_model()
2022-07-27 22:42:36,799:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521fe220>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:42:36,800:INFO:Checking exceptions
2022-07-27 22:42:36,800:INFO:Preloading libraries
2022-07-27 22:46:11,123:INFO:Initializing load_model()
2022-07-27 22:46:11,123:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:46:11,192:INFO:Initializing load_model()
2022-07-27 22:46:11,193:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:46:11,320:INFO:Initializing predict_model()
2022-07-27 22:46:11,320:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50258b50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:46:11,320:INFO:Checking exceptions
2022-07-27 22:46:11,321:INFO:Preloading libraries
2022-07-27 22:46:11,458:INFO:Initializing predict_model()
2022-07-27 22:46:11,459:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521ecb80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:46:11,459:INFO:Checking exceptions
2022-07-27 22:46:11,460:INFO:Preloading libraries
2022-07-27 22:46:37,259:INFO:Initializing load_model()
2022-07-27 22:46:37,260:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:46:37,317:INFO:Initializing load_model()
2022-07-27 22:46:37,317:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:46:37,430:INFO:Initializing predict_model()
2022-07-27 22:46:37,430:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5169f370>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:46:37,430:INFO:Checking exceptions
2022-07-27 22:46:37,430:INFO:Preloading libraries
2022-07-27 22:46:37,552:INFO:Initializing predict_model()
2022-07-27 22:46:37,552:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb522230d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:46:37,553:INFO:Checking exceptions
2022-07-27 22:46:37,553:INFO:Preloading libraries
2022-07-27 22:48:53,215:INFO:Initializing load_model()
2022-07-27 22:48:53,216:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:48:53,267:INFO:Initializing load_model()
2022-07-27 22:48:53,268:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:48:53,327:INFO:Initializing predict_model()
2022-07-27 22:48:53,327:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51ddd580>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:48:53,327:INFO:Checking exceptions
2022-07-27 22:48:53,327:INFO:Preloading libraries
2022-07-27 22:48:53,461:INFO:Initializing predict_model()
2022-07-27 22:48:53,461:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5227d790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:48:53,461:INFO:Checking exceptions
2022-07-27 22:48:53,461:INFO:Preloading libraries
2022-07-27 22:49:29,227:INFO:Initializing load_model()
2022-07-27 22:49:29,227:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:49:29,280:INFO:Initializing load_model()
2022-07-27 22:49:29,280:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:49:29,360:INFO:Initializing predict_model()
2022-07-27 22:49:29,360:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52223e20>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:49:29,360:INFO:Checking exceptions
2022-07-27 22:49:29,361:INFO:Preloading libraries
2022-07-27 22:49:29,490:INFO:Initializing predict_model()
2022-07-27 22:49:29,490:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51dc5640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:49:29,491:INFO:Checking exceptions
2022-07-27 22:49:29,491:INFO:Preloading libraries
2022-07-27 22:52:36,096:INFO:Initializing load_model()
2022-07-27 22:52:36,096:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:52:36,199:INFO:Initializing load_model()
2022-07-27 22:52:36,199:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:52:36,315:INFO:Initializing predict_model()
2022-07-27 22:52:36,315:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5167f1c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:52:36,316:INFO:Checking exceptions
2022-07-27 22:52:36,316:INFO:Preloading libraries
2022-07-27 22:52:36,456:INFO:Initializing predict_model()
2022-07-27 22:52:36,456:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51db9fd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:52:36,456:INFO:Checking exceptions
2022-07-27 22:52:36,457:INFO:Preloading libraries
2022-07-27 22:53:29,656:INFO:Initializing load_model()
2022-07-27 22:53:29,656:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:53:29,710:INFO:Initializing load_model()
2022-07-27 22:53:29,711:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:53:29,800:INFO:Initializing predict_model()
2022-07-27 22:53:29,800:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51de53d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:53:29,800:INFO:Checking exceptions
2022-07-27 22:53:29,801:INFO:Preloading libraries
2022-07-27 22:53:29,930:INFO:Initializing predict_model()
2022-07-27 22:53:29,931:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52223ac0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:53:29,931:INFO:Checking exceptions
2022-07-27 22:53:29,931:INFO:Preloading libraries
2022-07-27 22:53:44,792:INFO:Initializing load_model()
2022-07-27 22:53:44,792:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:53:44,852:INFO:Initializing load_model()
2022-07-27 22:53:44,853:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:53:44,986:INFO:Initializing predict_model()
2022-07-27 22:53:44,986:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc64250>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:53:44,987:INFO:Checking exceptions
2022-07-27 22:53:44,987:INFO:Preloading libraries
2022-07-27 22:53:45,128:INFO:Initializing predict_model()
2022-07-27 22:53:45,128:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5370>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:53:45,129:INFO:Checking exceptions
2022-07-27 22:53:45,130:INFO:Preloading libraries
2022-07-27 22:54:07,207:INFO:Initializing load_model()
2022-07-27 22:54:07,208:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:54:07,258:INFO:Initializing load_model()
2022-07-27 22:54:07,259:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:54:07,335:INFO:Initializing predict_model()
2022-07-27 22:54:07,335:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecc6cf70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:54:07,336:INFO:Checking exceptions
2022-07-27 22:54:07,337:INFO:Preloading libraries
2022-07-27 22:54:07,463:INFO:Initializing predict_model()
2022-07-27 22:54:07,464:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb521ec7f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:54:07,465:INFO:Checking exceptions
2022-07-27 22:54:07,465:INFO:Preloading libraries
2022-07-27 22:56:12,059:INFO:Initializing load_model()
2022-07-27 22:56:12,060:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:56:12,121:INFO:Initializing load_model()
2022-07-27 22:56:12,121:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:56:12,238:INFO:Initializing predict_model()
2022-07-27 22:56:12,238:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:56:12,239:INFO:Checking exceptions
2022-07-27 22:56:12,239:INFO:Preloading libraries
2022-07-27 22:56:12,364:INFO:Initializing predict_model()
2022-07-27 22:56:12,364:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f8580>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:56:12,364:INFO:Checking exceptions
2022-07-27 22:56:12,364:INFO:Preloading libraries
2022-07-27 22:56:56,458:INFO:Initializing load_model()
2022-07-27 22:56:56,458:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:56:56,516:INFO:Initializing load_model()
2022-07-27 22:56:56,517:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:56:56,583:INFO:Initializing predict_model()
2022-07-27 22:56:56,583:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a46f640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:56:56,583:INFO:Checking exceptions
2022-07-27 22:56:56,583:INFO:Preloading libraries
2022-07-27 22:56:56,712:INFO:Initializing predict_model()
2022-07-27 22:56:56,712:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a456910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:56:56,713:INFO:Checking exceptions
2022-07-27 22:56:56,713:INFO:Preloading libraries
2022-07-27 22:58:17,647:INFO:Initializing load_model()
2022-07-27 22:58:17,647:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:58:17,703:INFO:Initializing load_model()
2022-07-27 22:58:17,704:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:58:17,762:INFO:Initializing predict_model()
2022-07-27 22:58:17,763:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb501f5070>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:58:17,763:INFO:Checking exceptions
2022-07-27 22:58:17,763:INFO:Preloading libraries
2022-07-27 22:58:17,893:INFO:Initializing predict_model()
2022-07-27 22:58:17,893:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfe9fd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:58:17,894:INFO:Checking exceptions
2022-07-27 22:58:17,894:INFO:Preloading libraries
2022-07-27 22:58:38,952:INFO:Initializing load_model()
2022-07-27 22:58:38,952:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:58:39,012:INFO:Initializing load_model()
2022-07-27 22:58:39,012:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:58:39,071:INFO:Initializing predict_model()
2022-07-27 22:58:39,071:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a474d30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:58:39,072:INFO:Checking exceptions
2022-07-27 22:58:39,072:INFO:Preloading libraries
2022-07-27 22:58:39,212:INFO:Initializing predict_model()
2022-07-27 22:58:39,212:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bffd0a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:58:39,213:INFO:Checking exceptions
2022-07-27 22:58:39,213:INFO:Preloading libraries
2022-07-27 22:59:41,475:INFO:Initializing load_model()
2022-07-27 22:59:41,476:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 22:59:41,532:INFO:Initializing load_model()
2022-07-27 22:59:41,532:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 22:59:41,598:INFO:Initializing predict_model()
2022-07-27 22:59:41,599:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51885880>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:59:41,599:INFO:Checking exceptions
2022-07-27 22:59:41,600:INFO:Preloading libraries
2022-07-27 22:59:41,765:INFO:Initializing predict_model()
2022-07-27 22:59:41,766:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a45b040>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 22:59:41,766:INFO:Checking exceptions
2022-07-27 22:59:41,767:INFO:Preloading libraries
2022-07-27 23:00:35,486:INFO:Initializing load_model()
2022-07-27 23:00:35,486:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:00:35,543:INFO:Initializing load_model()
2022-07-27 23:00:35,543:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:00:35,601:INFO:Initializing predict_model()
2022-07-27 23:00:35,601:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51dc5ee0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:00:35,601:INFO:Checking exceptions
2022-07-27 23:00:35,601:INFO:Preloading libraries
2022-07-27 23:00:35,733:INFO:Initializing predict_model()
2022-07-27 23:00:35,733:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bffd790>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:00:35,734:INFO:Checking exceptions
2022-07-27 23:00:35,734:INFO:Preloading libraries
2022-07-27 23:01:04,504:INFO:Initializing load_model()
2022-07-27 23:01:04,504:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:01:04,559:INFO:Initializing load_model()
2022-07-27 23:01:04,559:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:01:04,618:INFO:Initializing predict_model()
2022-07-27 23:01:04,618:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb518766a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:01:04,618:INFO:Checking exceptions
2022-07-27 23:01:04,619:INFO:Preloading libraries
2022-07-27 23:01:04,752:INFO:Initializing predict_model()
2022-07-27 23:01:04,752:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bff05b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:01:04,753:INFO:Checking exceptions
2022-07-27 23:01:04,753:INFO:Preloading libraries
2022-07-27 23:01:52,875:INFO:Initializing load_model()
2022-07-27 23:01:52,876:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:01:52,933:INFO:Initializing load_model()
2022-07-27 23:01:52,933:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:01:52,991:INFO:Initializing predict_model()
2022-07-27 23:01:52,991:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfe9280>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:01:52,992:INFO:Checking exceptions
2022-07-27 23:01:52,992:INFO:Preloading libraries
2022-07-27 23:01:53,123:INFO:Initializing predict_model()
2022-07-27 23:01:53,123:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a45b9a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:01:53,124:INFO:Checking exceptions
2022-07-27 23:01:53,124:INFO:Preloading libraries
2022-07-27 23:02:31,811:INFO:Initializing load_model()
2022-07-27 23:02:31,811:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:02:31,869:INFO:Initializing load_model()
2022-07-27 23:02:31,869:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:02:31,925:INFO:Initializing predict_model()
2022-07-27 23:02:31,926:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb61f003d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:02:31,926:INFO:Checking exceptions
2022-07-27 23:02:31,926:INFO:Preloading libraries
2022-07-27 23:02:32,056:INFO:Initializing predict_model()
2022-07-27 23:02:32,057:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51db4460>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:02:32,057:INFO:Checking exceptions
2022-07-27 23:02:32,058:INFO:Preloading libraries
2022-07-27 23:02:59,173:INFO:Initializing load_model()
2022-07-27 23:02:59,174:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:02:59,235:INFO:Initializing load_model()
2022-07-27 23:02:59,235:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:02:59,293:INFO:Initializing predict_model()
2022-07-27 23:02:59,293:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb502169a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:02:59,294:INFO:Checking exceptions
2022-07-27 23:02:59,294:INFO:Preloading libraries
2022-07-27 23:02:59,428:INFO:Initializing predict_model()
2022-07-27 23:02:59,429:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222580>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:02:59,429:INFO:Checking exceptions
2022-07-27 23:02:59,429:INFO:Preloading libraries
2022-07-27 23:03:21,394:INFO:Initializing load_model()
2022-07-27 23:03:21,395:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:03:21,453:INFO:Initializing load_model()
2022-07-27 23:03:21,453:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:03:21,515:INFO:Initializing predict_model()
2022-07-27 23:03:21,515:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfc94f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:03:21,515:INFO:Checking exceptions
2022-07-27 23:03:21,515:INFO:Preloading libraries
2022-07-27 23:03:21,672:INFO:Initializing predict_model()
2022-07-27 23:03:21,673:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51dc7580>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:03:21,673:INFO:Checking exceptions
2022-07-27 23:03:21,674:INFO:Preloading libraries
2022-07-27 23:04:06,267:INFO:Initializing load_model()
2022-07-27 23:04:06,267:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:04:06,324:INFO:Initializing load_model()
2022-07-27 23:04:06,324:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:04:06,381:INFO:Initializing predict_model()
2022-07-27 23:04:06,381:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3b2b9520>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:04:06,381:INFO:Checking exceptions
2022-07-27 23:04:06,381:INFO:Preloading libraries
2022-07-27 23:04:06,510:INFO:Initializing predict_model()
2022-07-27 23:04:06,510:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bffdbb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:04:06,510:INFO:Checking exceptions
2022-07-27 23:04:06,511:INFO:Preloading libraries
2022-07-27 23:05:40,377:INFO:Initializing load_model()
2022-07-27 23:05:40,377:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:05:40,432:INFO:Initializing load_model()
2022-07-27 23:05:40,433:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:05:40,492:INFO:Initializing predict_model()
2022-07-27 23:05:40,492:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a443a00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:05:40,492:INFO:Checking exceptions
2022-07-27 23:05:40,493:INFO:Preloading libraries
2022-07-27 23:05:40,625:INFO:Initializing predict_model()
2022-07-27 23:05:40,625:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcbecbf8880>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:05:40,625:INFO:Checking exceptions
2022-07-27 23:05:40,626:INFO:Preloading libraries
2022-07-27 23:06:21,907:INFO:Initializing load_model()
2022-07-27 23:06:21,907:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:06:21,968:INFO:Initializing load_model()
2022-07-27 23:06:21,968:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:06:22,035:INFO:Initializing predict_model()
2022-07-27 23:06:22,035:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfe9f70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:06:22,035:INFO:Checking exceptions
2022-07-27 23:06:22,036:INFO:Preloading libraries
2022-07-27 23:06:22,171:INFO:Initializing predict_model()
2022-07-27 23:06:22,171:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a45bee0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:06:22,172:INFO:Checking exceptions
2022-07-27 23:06:22,172:INFO:Preloading libraries
2022-07-27 23:06:46,161:INFO:Initializing load_model()
2022-07-27 23:06:46,161:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:06:46,215:INFO:Initializing load_model()
2022-07-27 23:06:46,215:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:06:46,274:INFO:Initializing predict_model()
2022-07-27 23:06:46,275:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51dc73d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:06:46,276:INFO:Checking exceptions
2022-07-27 23:06:46,276:INFO:Preloading libraries
2022-07-27 23:06:46,482:INFO:Initializing predict_model()
2022-07-27 23:06:46,482:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3b341490>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:06:46,482:INFO:Checking exceptions
2022-07-27 23:06:46,482:INFO:Preloading libraries
2022-07-27 23:07:28,251:INFO:Initializing load_model()
2022-07-27 23:07:28,252:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:07:28,313:INFO:Initializing load_model()
2022-07-27 23:07:28,313:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:07:28,375:INFO:Initializing predict_model()
2022-07-27 23:07:28,376:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a45ba30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:07:28,376:INFO:Checking exceptions
2022-07-27 23:07:28,377:INFO:Preloading libraries
2022-07-27 23:07:28,518:INFO:Initializing predict_model()
2022-07-27 23:07:28,518:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bff0c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:07:28,518:INFO:Checking exceptions
2022-07-27 23:07:28,518:INFO:Preloading libraries
2022-07-27 23:09:33,431:INFO:Initializing load_model()
2022-07-27 23:09:33,431:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:09:33,486:INFO:Initializing load_model()
2022-07-27 23:09:33,486:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:09:33,548:INFO:Initializing predict_model()
2022-07-27 23:09:33,548:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfd9c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:09:33,548:INFO:Checking exceptions
2022-07-27 23:09:33,548:INFO:Preloading libraries
2022-07-27 23:09:33,680:INFO:Initializing predict_model()
2022-07-27 23:09:33,681:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bff09a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:09:33,681:INFO:Checking exceptions
2022-07-27 23:09:33,681:INFO:Preloading libraries
2022-07-27 23:10:02,823:INFO:Initializing load_model()
2022-07-27 23:10:02,823:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:10:02,881:INFO:Initializing load_model()
2022-07-27 23:10:02,881:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:10:02,941:INFO:Initializing predict_model()
2022-07-27 23:10:02,941:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3a45bd00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:10:02,941:INFO:Checking exceptions
2022-07-27 23:10:02,942:INFO:Preloading libraries
2022-07-27 23:10:03,078:INFO:Initializing predict_model()
2022-07-27 23:10:03,078:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfe9130>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:10:03,079:INFO:Checking exceptions
2022-07-27 23:10:03,079:INFO:Preloading libraries
2022-07-27 23:10:42,674:INFO:Initializing load_model()
2022-07-27 23:10:42,674:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:10:42,741:INFO:Initializing load_model()
2022-07-27 23:10:42,742:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:10:42,827:INFO:Initializing predict_model()
2022-07-27 23:10:42,827:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb51db40a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:10:42,827:INFO:Checking exceptions
2022-07-27 23:10:42,828:INFO:Preloading libraries
2022-07-27 23:10:42,987:INFO:Initializing predict_model()
2022-07-27 23:10:42,988:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3b3173a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:10:42,988:INFO:Checking exceptions
2022-07-27 23:10:42,988:INFO:Preloading libraries
2022-07-27 23:11:15,196:INFO:Initializing load_model()
2022-07-27 23:11:15,197:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:11:15,248:INFO:Initializing load_model()
2022-07-27 23:11:15,248:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:11:15,339:INFO:Initializing predict_model()
2022-07-27 23:11:15,340:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3b292bb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:11:15,340:INFO:Checking exceptions
2022-07-27 23:11:15,341:INFO:Preloading libraries
2022-07-27 23:11:15,491:INFO:Initializing predict_model()
2022-07-27 23:11:15,492:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50dffc70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:11:15,492:INFO:Checking exceptions
2022-07-27 23:11:15,492:INFO:Preloading libraries
2022-07-27 23:11:58,817:INFO:Initializing load_model()
2022-07-27 23:11:58,817:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:11:58,935:INFO:Initializing load_model()
2022-07-27 23:11:58,935:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:11:59,059:INFO:Initializing predict_model()
2022-07-27 23:11:59,059:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb5225cfd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:11:59,059:INFO:Checking exceptions
2022-07-27 23:11:59,059:INFO:Preloading libraries
2022-07-27 23:11:59,229:INFO:Initializing predict_model()
2022-07-27 23:11:59,230:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50e189a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:11:59,231:INFO:Checking exceptions
2022-07-27 23:11:59,232:INFO:Preloading libraries
2022-07-27 23:13:11,910:INFO:Initializing load_model()
2022-07-27 23:13:11,911:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:13:11,964:INFO:Initializing load_model()
2022-07-27 23:13:11,964:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:13:12,031:INFO:Initializing predict_model()
2022-07-27 23:13:12,031:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfd9100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:13:12,031:INFO:Checking exceptions
2022-07-27 23:13:12,031:INFO:Preloading libraries
2022-07-27 23:13:12,173:INFO:Initializing predict_model()
2022-07-27 23:13:12,173:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3b315910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:13:12,174:INFO:Checking exceptions
2022-07-27 23:13:12,174:INFO:Preloading libraries
2022-07-27 23:14:00,917:INFO:Initializing load_model()
2022-07-27 23:14:00,918:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:14:00,993:INFO:Initializing load_model()
2022-07-27 23:14:00,994:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:14:01,098:INFO:Initializing predict_model()
2022-07-27 23:14:01,098:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb50e1d400>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:14:01,098:INFO:Checking exceptions
2022-07-27 23:14:01,099:INFO:Preloading libraries
2022-07-27 23:14:01,232:INFO:Initializing predict_model()
2022-07-27 23:14:01,232:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3b317250>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:14:01,232:INFO:Checking exceptions
2022-07-27 23:14:01,232:INFO:Preloading libraries
2022-07-27 23:14:27,063:INFO:Initializing load_model()
2022-07-27 23:14:27,063:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:14:27,127:INFO:Initializing load_model()
2022-07-27 23:14:27,127:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:14:27,197:INFO:Initializing predict_model()
2022-07-27 23:14:27,197:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb3bfd9e80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:14:27,198:INFO:Checking exceptions
2022-07-27 23:14:27,198:INFO:Preloading libraries
2022-07-27 23:14:27,343:INFO:Initializing predict_model()
2022-07-27 23:14:27,344:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fcb52222220>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:14:27,344:INFO:Checking exceptions
2022-07-27 23:14:27,344:INFO:Preloading libraries
2022-07-27 23:15:12,726:INFO:Initializing load_model()
2022-07-27 23:15:12,726:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:15:12,910:INFO:Initializing load_model()
2022-07-27 23:15:12,910:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:15:13,110:INFO:Initializing predict_model()
2022-07-27 23:15:13,110:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13fd1a8dc0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:15:13,111:INFO:Checking exceptions
2022-07-27 23:15:13,111:INFO:Preloading libraries
2022-07-27 23:15:13,273:INFO:Initializing predict_model()
2022-07-27 23:15:13,274:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13ea634d00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:15:13,275:INFO:Checking exceptions
2022-07-27 23:15:13,275:INFO:Preloading libraries
2022-07-27 23:16:15,070:INFO:Initializing load_model()
2022-07-27 23:16:15,071:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:16:15,180:INFO:Initializing load_model()
2022-07-27 23:16:15,180:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:16:15,267:INFO:Initializing predict_model()
2022-07-27 23:16:15,267:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01c4d60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:16:15,267:INFO:Checking exceptions
2022-07-27 23:16:15,268:INFO:Preloading libraries
2022-07-27 23:16:15,405:INFO:Initializing predict_model()
2022-07-27 23:16:15,405:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01a7fd0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:16:15,406:INFO:Checking exceptions
2022-07-27 23:16:15,406:INFO:Preloading libraries
2022-07-27 23:17:11,650:INFO:Initializing load_model()
2022-07-27 23:17:11,651:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:17:11,760:INFO:Initializing load_model()
2022-07-27 23:17:11,760:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:17:11,855:INFO:Initializing predict_model()
2022-07-27 23:17:11,855:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f14753668b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:17:11,856:INFO:Checking exceptions
2022-07-27 23:17:11,856:INFO:Preloading libraries
2022-07-27 23:17:11,989:INFO:Initializing predict_model()
2022-07-27 23:17:11,989:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e380be0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:17:11,990:INFO:Checking exceptions
2022-07-27 23:17:11,990:INFO:Preloading libraries
2022-07-27 23:17:20,903:INFO:Initializing load_model()
2022-07-27 23:17:20,903:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:17:20,958:INFO:Initializing load_model()
2022-07-27 23:17:20,958:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:17:21,036:INFO:Initializing predict_model()
2022-07-27 23:17:21,036:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f1475367910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:17:21,037:INFO:Checking exceptions
2022-07-27 23:17:21,037:INFO:Preloading libraries
2022-07-27 23:17:21,195:INFO:Initializing predict_model()
2022-07-27 23:17:21,196:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e316160>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:17:21,196:INFO:Checking exceptions
2022-07-27 23:17:21,196:INFO:Preloading libraries
2022-07-27 23:17:49,668:INFO:Initializing load_model()
2022-07-27 23:17:49,668:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:17:49,731:INFO:Initializing load_model()
2022-07-27 23:17:49,731:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:17:49,863:INFO:Initializing predict_model()
2022-07-27 23:17:49,863:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01b4a00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:17:49,863:INFO:Checking exceptions
2022-07-27 23:17:49,864:INFO:Preloading libraries
2022-07-27 23:17:50,002:INFO:Initializing predict_model()
2022-07-27 23:17:50,003:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01c50d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:17:50,003:INFO:Checking exceptions
2022-07-27 23:17:50,003:INFO:Preloading libraries
2022-07-27 23:18:07,775:INFO:Initializing load_model()
2022-07-27 23:18:07,776:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:18:07,828:INFO:Initializing load_model()
2022-07-27 23:18:07,828:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:18:07,901:INFO:Initializing predict_model()
2022-07-27 23:18:07,901:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e3338b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:18:07,902:INFO:Checking exceptions
2022-07-27 23:18:07,902:INFO:Preloading libraries
2022-07-27 23:18:08,032:INFO:Initializing predict_model()
2022-07-27 23:18:08,032:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145dedd970>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:18:08,033:INFO:Checking exceptions
2022-07-27 23:18:08,033:INFO:Preloading libraries
2022-07-27 23:18:20,744:INFO:Initializing load_model()
2022-07-27 23:18:20,744:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:18:20,801:INFO:Initializing load_model()
2022-07-27 23:18:20,801:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:18:20,873:INFO:Initializing predict_model()
2022-07-27 23:18:20,874:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e31a430>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:18:20,874:INFO:Checking exceptions
2022-07-27 23:18:20,874:INFO:Preloading libraries
2022-07-27 23:18:21,014:INFO:Initializing predict_model()
2022-07-27 23:18:21,014:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e380130>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:18:21,015:INFO:Checking exceptions
2022-07-27 23:18:21,015:INFO:Preloading libraries
2022-07-27 23:19:18,115:INFO:Initializing load_model()
2022-07-27 23:19:18,116:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:19:18,178:INFO:Initializing load_model()
2022-07-27 23:19:18,178:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:19:18,264:INFO:Initializing predict_model()
2022-07-27 23:19:18,265:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f14753757c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:19:18,265:INFO:Checking exceptions
2022-07-27 23:19:18,266:INFO:Preloading libraries
2022-07-27 23:19:18,395:INFO:Initializing predict_model()
2022-07-27 23:19:18,395:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145debcc10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:19:18,395:INFO:Checking exceptions
2022-07-27 23:19:18,395:INFO:Preloading libraries
2022-07-27 23:20:57,236:INFO:Initializing load_model()
2022-07-27 23:20:57,236:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:20:57,312:INFO:Initializing load_model()
2022-07-27 23:20:57,312:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:20:57,399:INFO:Initializing predict_model()
2022-07-27 23:20:57,399:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e333730>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:20:57,400:INFO:Checking exceptions
2022-07-27 23:20:57,400:INFO:Preloading libraries
2022-07-27 23:20:57,528:INFO:Initializing predict_model()
2022-07-27 23:20:57,528:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e31ac70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:20:57,529:INFO:Checking exceptions
2022-07-27 23:20:57,529:INFO:Preloading libraries
2022-07-27 23:21:16,331:INFO:Initializing load_model()
2022-07-27 23:21:16,332:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:21:16,382:INFO:Initializing load_model()
2022-07-27 23:21:16,383:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:21:16,444:INFO:Initializing predict_model()
2022-07-27 23:21:16,444:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f1448052c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:21:16,445:INFO:Checking exceptions
2022-07-27 23:21:16,445:INFO:Preloading libraries
2022-07-27 23:21:16,596:INFO:Initializing predict_model()
2022-07-27 23:21:16,597:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145dee18e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:21:16,597:INFO:Checking exceptions
2022-07-27 23:21:16,597:INFO:Preloading libraries
2022-07-27 23:22:58,387:INFO:Initializing load_model()
2022-07-27 23:22:58,388:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:22:58,443:INFO:Initializing load_model()
2022-07-27 23:22:58,443:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:22:58,526:INFO:Initializing predict_model()
2022-07-27 23:22:58,526:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145de97b50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:22:58,526:INFO:Checking exceptions
2022-07-27 23:22:58,527:INFO:Preloading libraries
2022-07-27 23:22:58,653:INFO:Initializing predict_model()
2022-07-27 23:22:58,653:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e33f430>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:22:58,654:INFO:Checking exceptions
2022-07-27 23:22:58,654:INFO:Preloading libraries
2022-07-27 23:23:28,539:INFO:Initializing load_model()
2022-07-27 23:23:28,540:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:23:28,612:INFO:Initializing load_model()
2022-07-27 23:23:28,612:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:23:28,673:INFO:Initializing predict_model()
2022-07-27 23:23:28,674:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e31a820>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:23:28,674:INFO:Checking exceptions
2022-07-27 23:23:28,675:INFO:Preloading libraries
2022-07-27 23:23:28,804:INFO:Initializing predict_model()
2022-07-27 23:23:28,804:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e2fbbb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:23:28,804:INFO:Checking exceptions
2022-07-27 23:23:28,804:INFO:Preloading libraries
2022-07-27 23:23:29,223:INFO:Initializing load_model()
2022-07-27 23:23:29,223:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:23:29,271:INFO:Initializing load_model()
2022-07-27 23:23:29,272:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:23:29,344:INFO:Initializing predict_model()
2022-07-27 23:23:29,344:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d00118b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:23:29,344:INFO:Checking exceptions
2022-07-27 23:23:29,344:INFO:Preloading libraries
2022-07-27 23:23:29,461:INFO:Initializing predict_model()
2022-07-27 23:23:29,461:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d00118b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:23:29,461:INFO:Checking exceptions
2022-07-27 23:23:29,461:INFO:Preloading libraries
2022-07-27 23:23:29,580:INFO:Initializing predict_model()
2022-07-27 23:23:29,580:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01bb910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:23:29,580:INFO:Checking exceptions
2022-07-27 23:23:29,581:INFO:Preloading libraries
2022-07-27 23:24:50,948:INFO:Initializing load_model()
2022-07-27 23:24:50,949:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:24:51,095:INFO:Initializing load_model()
2022-07-27 23:24:51,095:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:24:51,204:INFO:Initializing predict_model()
2022-07-27 23:24:51,204:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01c53d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:24:51,204:INFO:Checking exceptions
2022-07-27 23:24:51,205:INFO:Preloading libraries
2022-07-27 23:24:51,336:INFO:Initializing predict_model()
2022-07-27 23:24:51,337:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d008bdc0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:24:51,337:INFO:Checking exceptions
2022-07-27 23:24:51,337:INFO:Preloading libraries
2022-07-27 23:47:09,359:INFO:Initializing load_model()
2022-07-27 23:47:09,360:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-27 23:47:09,504:INFO:Initializing load_model()
2022-07-27 23:47:09,504:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-27 23:47:09,608:INFO:Initializing predict_model()
2022-07-27 23:47:09,608:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e351520>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:47:09,608:INFO:Checking exceptions
2022-07-27 23:47:09,608:INFO:Preloading libraries
2022-07-27 23:47:09,736:INFO:Initializing predict_model()
2022-07-27 23:47:09,736:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e351520>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:47:09,736:INFO:Checking exceptions
2022-07-27 23:47:09,736:INFO:Preloading libraries
2022-07-27 23:47:09,871:INFO:Initializing predict_model()
2022-07-27 23:47:09,872:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d00475e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-27 23:47:09,872:INFO:Checking exceptions
2022-07-27 23:47:09,873:INFO:Preloading libraries
2022-07-28 00:32:16,955:INFO:Initializing load_model()
2022-07-28 00:32:16,958:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 00:32:17,020:INFO:Initializing load_model()
2022-07-28 00:32:17,020:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 00:32:17,157:INFO:Initializing predict_model()
2022-07-28 00:32:17,157:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d001c040>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 00:32:17,158:INFO:Checking exceptions
2022-07-28 00:32:17,158:INFO:Preloading libraries
2022-07-28 00:32:17,320:INFO:Initializing predict_model()
2022-07-28 00:32:17,321:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d00206d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 00:32:17,322:INFO:Checking exceptions
2022-07-28 00:32:17,323:INFO:Preloading libraries
2022-07-28 00:32:21,986:INFO:Initializing load_model()
2022-07-28 00:32:21,988:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 00:32:22,046:INFO:Initializing load_model()
2022-07-28 00:32:22,046:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 00:32:22,132:INFO:Initializing predict_model()
2022-07-28 00:32:22,133:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d0028760>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 00:32:22,134:INFO:Checking exceptions
2022-07-28 00:32:22,134:INFO:Preloading libraries
2022-07-28 00:32:22,267:INFO:Initializing predict_model()
2022-07-28 00:32:22,267:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d0053e80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 00:32:22,268:INFO:Checking exceptions
2022-07-28 00:32:22,268:INFO:Preloading libraries
2022-07-28 01:05:03,321:INFO:Initializing load_model()
2022-07-28 01:05:03,322:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:05:03,959:INFO:Initializing load_model()
2022-07-28 01:05:03,960:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:05:04,783:INFO:Initializing predict_model()
2022-07-28 01:05:04,783:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d001c3d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:05:04,783:INFO:Checking exceptions
2022-07-28 01:05:04,784:INFO:Preloading libraries
2022-07-28 01:05:04,973:INFO:Initializing predict_model()
2022-07-28 01:05:04,973:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e33f280>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:05:04,974:INFO:Checking exceptions
2022-07-28 01:05:04,974:INFO:Preloading libraries
2022-07-28 01:05:53,943:INFO:Initializing load_model()
2022-07-28 01:05:53,943:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:05:54,006:INFO:Initializing load_model()
2022-07-28 01:05:54,006:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:05:54,168:INFO:Initializing predict_model()
2022-07-28 01:05:54,168:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d01c7910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:05:54,168:INFO:Checking exceptions
2022-07-28 01:05:54,169:INFO:Preloading libraries
2022-07-28 01:05:54,303:INFO:Initializing predict_model()
2022-07-28 01:05:54,304:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d0047280>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:05:54,304:INFO:Checking exceptions
2022-07-28 01:05:54,304:INFO:Preloading libraries
2022-07-28 01:06:11,883:INFO:Initializing load_model()
2022-07-28 01:06:11,883:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:06:12,019:INFO:Initializing load_model()
2022-07-28 01:06:12,020:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:06:12,183:INFO:Initializing predict_model()
2022-07-28 01:06:12,183:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d008bb80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:06:12,184:INFO:Checking exceptions
2022-07-28 01:06:12,184:INFO:Preloading libraries
2022-07-28 01:06:12,331:INFO:Initializing predict_model()
2022-07-28 01:06:12,331:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d0028760>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:06:12,332:INFO:Checking exceptions
2022-07-28 01:06:12,332:INFO:Preloading libraries
2022-07-28 01:06:27,103:INFO:Initializing load_model()
2022-07-28 01:06:27,104:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:06:27,166:INFO:Initializing load_model()
2022-07-28 01:06:27,166:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:06:27,270:INFO:Initializing predict_model()
2022-07-28 01:06:27,270:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145e2fa910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:06:27,270:INFO:Checking exceptions
2022-07-28 01:06:27,271:INFO:Preloading libraries
2022-07-28 01:06:27,413:INFO:Initializing predict_model()
2022-07-28 01:06:27,413:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13d001cd30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:06:27,413:INFO:Checking exceptions
2022-07-28 01:06:27,413:INFO:Preloading libraries
2022-07-28 01:21:19,075:INFO:Initializing load_model()
2022-07-28 01:21:19,076:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:21:19,693:INFO:Initializing load_model()
2022-07-28 01:21:19,693:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:21:20,433:INFO:Initializing predict_model()
2022-07-28 01:21:20,433:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f13abb9e3a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:21:20,434:INFO:Checking exceptions
2022-07-28 01:21:20,435:INFO:Preloading libraries
2022-07-28 01:21:20,585:INFO:Initializing predict_model()
2022-07-28 01:21:20,586:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f145de97e50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:21:20,586:INFO:Checking exceptions
2022-07-28 01:21:20,587:INFO:Preloading libraries
2022-07-28 01:21:44,956:INFO:Initializing load_model()
2022-07-28 01:21:44,956:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:21:45,342:INFO:Initializing load_model()
2022-07-28 01:21:45,342:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:21:45,416:INFO:Initializing predict_model()
2022-07-28 01:21:45,416:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf244f4070>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:21:45,417:INFO:Checking exceptions
2022-07-28 01:21:45,417:INFO:Preloading libraries
2022-07-28 01:21:45,544:INFO:Initializing predict_model()
2022-07-28 01:21:45,544:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf18f3f3d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:21:45,544:INFO:Checking exceptions
2022-07-28 01:21:45,544:INFO:Preloading libraries
2022-07-28 01:22:31,679:INFO:Initializing load_model()
2022-07-28 01:22:31,680:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:22:31,844:INFO:Initializing load_model()
2022-07-28 01:22:31,844:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:22:31,951:INFO:Initializing predict_model()
2022-07-28 01:22:31,952:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdfa3d7d3d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:22:31,952:INFO:Checking exceptions
2022-07-28 01:22:31,952:INFO:Preloading libraries
2022-07-28 01:22:32,104:INFO:Initializing predict_model()
2022-07-28 01:22:32,104:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdeeaadf400>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:22:32,104:INFO:Checking exceptions
2022-07-28 01:22:32,105:INFO:Preloading libraries
2022-07-28 01:24:48,062:INFO:Initializing load_model()
2022-07-28 01:24:48,063:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:24:48,222:INFO:Initializing load_model()
2022-07-28 01:24:48,222:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:24:48,392:INFO:Initializing predict_model()
2022-07-28 01:24:48,395:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf019f3e50>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:24:48,398:INFO:Checking exceptions
2022-07-28 01:24:48,399:INFO:Preloading libraries
2022-07-28 01:24:48,638:INFO:Initializing predict_model()
2022-07-28 01:24:48,638:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01a10f70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:24:48,639:INFO:Checking exceptions
2022-07-28 01:24:48,640:INFO:Preloading libraries
2022-07-28 01:30:59,731:INFO:Initializing load_model()
2022-07-28 01:30:59,732:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:30:59,792:INFO:Initializing load_model()
2022-07-28 01:30:59,792:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:30:59,929:INFO:Initializing predict_model()
2022-07-28 01:30:59,929:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01df1820>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:30:59,929:INFO:Checking exceptions
2022-07-28 01:30:59,930:INFO:Preloading libraries
2022-07-28 01:31:00,100:INFO:Initializing predict_model()
2022-07-28 01:31:00,101:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdfa3dcaa00>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:31:00,101:INFO:Checking exceptions
2022-07-28 01:31:00,102:INFO:Preloading libraries
2022-07-28 01:31:59,749:INFO:Initializing load_model()
2022-07-28 01:31:59,749:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:31:59,809:INFO:Initializing load_model()
2022-07-28 01:31:59,809:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:31:59,878:INFO:Initializing predict_model()
2022-07-28 01:31:59,878:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdfa3d58b20>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:31:59,879:INFO:Checking exceptions
2022-07-28 01:31:59,879:INFO:Preloading libraries
2022-07-28 01:32:00,041:INFO:Initializing predict_model()
2022-07-28 01:32:00,041:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdeeaadf820>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:32:00,041:INFO:Checking exceptions
2022-07-28 01:32:00,041:INFO:Preloading libraries
2022-07-28 01:32:18,395:INFO:Initializing load_model()
2022-07-28 01:32:18,396:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:32:18,517:INFO:Initializing load_model()
2022-07-28 01:32:18,517:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:32:18,752:INFO:Initializing predict_model()
2022-07-28 01:32:18,752:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01bf5b80>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:32:18,752:INFO:Checking exceptions
2022-07-28 01:32:18,752:INFO:Preloading libraries
2022-07-28 01:32:18,925:INFO:Initializing predict_model()
2022-07-28 01:32:18,925:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf00d2a070>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:32:18,925:INFO:Checking exceptions
2022-07-28 01:32:18,926:INFO:Preloading libraries
2022-07-28 01:36:13,978:INFO:Initializing load_model()
2022-07-28 01:36:13,978:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:36:14,039:INFO:Initializing load_model()
2022-07-28 01:36:14,039:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:36:14,100:INFO:Initializing predict_model()
2022-07-28 01:36:14,100:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf00d44d60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:36:14,101:INFO:Checking exceptions
2022-07-28 01:36:14,101:INFO:Preloading libraries
2022-07-28 01:36:14,266:INFO:Initializing predict_model()
2022-07-28 01:36:14,266:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf00d3e880>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:36:14,266:INFO:Checking exceptions
2022-07-28 01:36:14,267:INFO:Preloading libraries
2022-07-28 01:36:48,025:INFO:Initializing load_model()
2022-07-28 01:36:48,025:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:36:48,096:INFO:Initializing load_model()
2022-07-28 01:36:48,096:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:36:48,226:INFO:Initializing predict_model()
2022-07-28 01:36:48,227:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdfa3d7d5e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:36:48,227:INFO:Checking exceptions
2022-07-28 01:36:48,227:INFO:Preloading libraries
2022-07-28 01:36:48,379:INFO:Initializing predict_model()
2022-07-28 01:36:48,379:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01d9d340>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:36:48,380:INFO:Checking exceptions
2022-07-28 01:36:48,380:INFO:Preloading libraries
2022-07-28 01:37:38,841:INFO:Initializing load_model()
2022-07-28 01:37:38,841:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:37:38,900:INFO:Initializing load_model()
2022-07-28 01:37:38,900:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:37:38,959:INFO:Initializing predict_model()
2022-07-28 01:37:38,959:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01bf5700>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:37:38,960:INFO:Checking exceptions
2022-07-28 01:37:38,960:INFO:Preloading libraries
2022-07-28 01:37:39,141:INFO:Initializing predict_model()
2022-07-28 01:37:39,141:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01d97eb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:37:39,142:INFO:Checking exceptions
2022-07-28 01:37:39,142:INFO:Preloading libraries
2022-07-28 01:39:53,163:INFO:Initializing load_model()
2022-07-28 01:39:53,164:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:39:53,215:INFO:Initializing load_model()
2022-07-28 01:39:53,216:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:39:53,364:INFO:Initializing predict_model()
2022-07-28 01:39:53,364:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01d9d3d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:39:53,364:INFO:Checking exceptions
2022-07-28 01:39:53,365:INFO:Preloading libraries
2022-07-28 01:39:53,513:INFO:Initializing predict_model()
2022-07-28 01:39:53,514:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdeeae599d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:39:53,516:INFO:Checking exceptions
2022-07-28 01:39:53,516:INFO:Preloading libraries
2022-07-28 01:40:30,954:INFO:Initializing load_model()
2022-07-28 01:40:30,954:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:40:31,089:INFO:Initializing load_model()
2022-07-28 01:40:31,089:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:40:31,331:INFO:Initializing predict_model()
2022-07-28 01:40:31,331:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf00ccd670>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:40:31,332:INFO:Checking exceptions
2022-07-28 01:40:31,332:INFO:Preloading libraries
2022-07-28 01:40:31,483:INFO:Initializing predict_model()
2022-07-28 01:40:31,484:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fdf01c771c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:40:31,484:INFO:Checking exceptions
2022-07-28 01:40:31,485:INFO:Preloading libraries
2022-07-28 01:41:34,503:INFO:Initializing load_model()
2022-07-28 01:41:34,503:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:41:34,643:INFO:Initializing load_model()
2022-07-28 01:41:34,643:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:41:34,761:INFO:Initializing predict_model()
2022-07-28 01:41:34,762:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fe8f2eb94f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:41:34,762:INFO:Checking exceptions
2022-07-28 01:41:34,762:INFO:Preloading libraries
2022-07-28 01:41:34,903:INFO:Initializing predict_model()
2022-07-28 01:41:34,903:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7fe8e0340bb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:41:34,903:INFO:Checking exceptions
2022-07-28 01:41:34,903:INFO:Preloading libraries
2022-07-28 01:55:20,355:INFO:Initializing load_model()
2022-07-28 01:55:20,355:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:55:20,545:INFO:Initializing load_model()
2022-07-28 01:55:20,545:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:55:20,779:INFO:Initializing predict_model()
2022-07-28 01:55:20,779:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b78bd3a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:55:20,780:INFO:Checking exceptions
2022-07-28 01:55:20,781:INFO:Preloading libraries
2022-07-28 01:55:20,959:INFO:Initializing predict_model()
2022-07-28 01:55:20,959:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63a4d8bd30>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:55:20,960:INFO:Checking exceptions
2022-07-28 01:55:20,960:INFO:Preloading libraries
2022-07-28 01:55:48,611:INFO:Initializing load_model()
2022-07-28 01:55:48,611:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 01:55:48,688:INFO:Initializing load_model()
2022-07-28 01:55:48,689:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 01:55:48,801:INFO:Initializing predict_model()
2022-07-28 01:55:48,801:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8f51c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:55:48,801:INFO:Checking exceptions
2022-07-28 01:55:48,801:INFO:Preloading libraries
2022-07-28 01:55:48,977:INFO:Initializing predict_model()
2022-07-28 01:55:48,978:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8a72e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 01:55:48,978:INFO:Checking exceptions
2022-07-28 01:55:48,979:INFO:Preloading libraries
2022-07-28 02:03:43,684:INFO:Initializing load_model()
2022-07-28 02:03:43,685:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:03:43,796:INFO:Initializing load_model()
2022-07-28 02:03:43,797:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:03:43,928:INFO:Initializing predict_model()
2022-07-28 02:03:43,929:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f64300d4d90>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:03:43,929:INFO:Checking exceptions
2022-07-28 02:03:43,929:INFO:Preloading libraries
2022-07-28 02:03:44,074:INFO:Initializing predict_model()
2022-07-28 02:03:44,074:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8e9370>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:03:44,075:INFO:Checking exceptions
2022-07-28 02:03:44,075:INFO:Preloading libraries
2022-07-28 02:13:42,358:INFO:Initializing load_model()
2022-07-28 02:13:42,358:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:13:42,567:INFO:Initializing load_model()
2022-07-28 02:13:42,567:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:13:42,696:INFO:Initializing predict_model()
2022-07-28 02:13:42,697:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f64300672b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:13:42,697:INFO:Checking exceptions
2022-07-28 02:13:42,698:INFO:Preloading libraries
2022-07-28 02:13:42,864:INFO:Initializing predict_model()
2022-07-28 02:13:42,864:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b72cb100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:13:42,865:INFO:Checking exceptions
2022-07-28 02:13:42,865:INFO:Preloading libraries
2022-07-28 02:15:00,194:INFO:Initializing load_model()
2022-07-28 02:15:00,195:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:15:00,312:INFO:Initializing load_model()
2022-07-28 02:15:00,312:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:15:00,395:INFO:Initializing predict_model()
2022-07-28 02:15:00,395:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63765d27c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:15:00,395:INFO:Checking exceptions
2022-07-28 02:15:00,395:INFO:Preloading libraries
2022-07-28 02:15:00,574:INFO:Initializing predict_model()
2022-07-28 02:15:00,574:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8e9d60>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:15:00,574:INFO:Checking exceptions
2022-07-28 02:15:00,575:INFO:Preloading libraries
2022-07-28 02:15:22,816:INFO:Initializing load_model()
2022-07-28 02:15:22,816:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:15:22,909:INFO:Initializing load_model()
2022-07-28 02:15:22,909:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:15:23,003:INFO:Initializing predict_model()
2022-07-28 02:15:23,003:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8f5910>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:15:23,003:INFO:Checking exceptions
2022-07-28 02:15:23,004:INFO:Preloading libraries
2022-07-28 02:15:23,165:INFO:Initializing predict_model()
2022-07-28 02:15:23,165:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8d0c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:15:23,166:INFO:Checking exceptions
2022-07-28 02:15:23,166:INFO:Preloading libraries
2022-07-28 02:16:24,960:INFO:Initializing load_model()
2022-07-28 02:16:24,960:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:16:25,059:INFO:Initializing load_model()
2022-07-28 02:16:25,059:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:16:25,153:INFO:Initializing predict_model()
2022-07-28 02:16:25,153:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63767ee640>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:16:25,154:INFO:Checking exceptions
2022-07-28 02:16:25,154:INFO:Preloading libraries
2022-07-28 02:16:25,320:INFO:Initializing predict_model()
2022-07-28 02:16:25,321:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b7be77f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:16:25,321:INFO:Checking exceptions
2022-07-28 02:16:25,322:INFO:Preloading libraries
2022-07-28 02:16:43,797:INFO:Initializing load_model()
2022-07-28 02:16:43,797:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:16:43,968:INFO:Initializing load_model()
2022-07-28 02:16:43,968:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:16:44,066:INFO:Initializing predict_model()
2022-07-28 02:16:44,066:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63765ccbe0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:16:44,067:INFO:Checking exceptions
2022-07-28 02:16:44,068:INFO:Preloading libraries
2022-07-28 02:16:44,242:INFO:Initializing predict_model()
2022-07-28 02:16:44,243:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b4a8e2e0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:16:44,246:INFO:Checking exceptions
2022-07-28 02:16:44,247:INFO:Preloading libraries
2022-07-28 02:17:00,866:INFO:Initializing load_model()
2022-07-28 02:17:00,866:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:17:00,979:INFO:Initializing load_model()
2022-07-28 02:17:00,979:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:17:01,068:INFO:Initializing predict_model()
2022-07-28 02:17:01,069:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8e9130>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:17:01,069:INFO:Checking exceptions
2022-07-28 02:17:01,069:INFO:Preloading libraries
2022-07-28 02:17:01,217:INFO:Initializing predict_model()
2022-07-28 02:17:01,218:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63767eec40>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:17:01,218:INFO:Checking exceptions
2022-07-28 02:17:01,219:INFO:Preloading libraries
2022-07-28 02:17:45,698:INFO:Initializing load_model()
2022-07-28 02:17:45,699:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:17:45,775:INFO:Initializing load_model()
2022-07-28 02:17:45,775:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:17:45,937:INFO:Initializing predict_model()
2022-07-28 02:17:45,937:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8f5130>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:17:45,937:INFO:Checking exceptions
2022-07-28 02:17:45,938:INFO:Preloading libraries
2022-07-28 02:17:46,091:INFO:Initializing predict_model()
2022-07-28 02:17:46,092:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63a4d60fa0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:17:46,093:INFO:Checking exceptions
2022-07-28 02:17:46,093:INFO:Preloading libraries
2022-07-28 02:27:20,957:INFO:Initializing load_model()
2022-07-28 02:27:20,958:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:21,143:INFO:Initializing load_model()
2022-07-28 02:27:21,143:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:21,244:INFO:Initializing predict_model()
2022-07-28 02:27:21,244:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b731a7c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:21,244:INFO:Checking exceptions
2022-07-28 02:27:21,244:INFO:Preloading libraries
2022-07-28 02:27:21,671:INFO:Initializing load_model()
2022-07-28 02:27:21,671:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:21,727:INFO:Initializing load_model()
2022-07-28 02:27:21,727:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:21,857:INFO:Initializing predict_model()
2022-07-28 02:27:21,857:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8f5700>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:21,858:INFO:Checking exceptions
2022-07-28 02:27:21,858:INFO:Preloading libraries
2022-07-28 02:27:21,993:INFO:Initializing predict_model()
2022-07-28 02:27:21,993:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b72e7610>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:21,993:INFO:Checking exceptions
2022-07-28 02:27:21,994:INFO:Preloading libraries
2022-07-28 02:27:23,733:INFO:Initializing load_model()
2022-07-28 02:27:23,734:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:23,829:INFO:Initializing load_model()
2022-07-28 02:27:23,829:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:23,916:INFO:Initializing predict_model()
2022-07-28 02:27:23,917:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b5439bb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:23,917:INFO:Checking exceptions
2022-07-28 02:27:23,918:INFO:Preloading libraries
2022-07-28 02:27:24,054:INFO:Initializing predict_model()
2022-07-28 02:27:24,054:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b5439bb0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:24,055:INFO:Checking exceptions
2022-07-28 02:27:24,055:INFO:Preloading libraries
2022-07-28 02:27:24,185:INFO:Initializing predict_model()
2022-07-28 02:27:24,185:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b5454c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:24,186:INFO:Checking exceptions
2022-07-28 02:27:24,186:INFO:Preloading libraries
2022-07-28 02:27:28,738:INFO:Initializing load_model()
2022-07-28 02:27:28,739:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:28,883:INFO:Initializing load_model()
2022-07-28 02:27:28,884:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:27:28,982:INFO:Initializing predict_model()
2022-07-28 02:27:28,983:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f64300cc9d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:28,983:INFO:Checking exceptions
2022-07-28 02:27:28,984:INFO:Preloading libraries
2022-07-28 02:27:29,140:INFO:Initializing predict_model()
2022-07-28 02:27:29,140:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b7be7280>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:29,141:INFO:Checking exceptions
2022-07-28 02:27:29,141:INFO:Preloading libraries
2022-07-28 02:27:29,258:INFO:Initializing predict_model()
2022-07-28 02:27:29,258:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b7be7280>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:27:29,259:INFO:Checking exceptions
2022-07-28 02:27:29,259:INFO:Preloading libraries
2022-07-28 02:31:35,072:INFO:Initializing load_model()
2022-07-28 02:31:35,073:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 02:31:35,176:INFO:Initializing load_model()
2022-07-28 02:31:35,176:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 02:31:35,421:INFO:Initializing predict_model()
2022-07-28 02:31:35,421:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8f5550>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:31:35,421:INFO:Checking exceptions
2022-07-28 02:31:35,422:INFO:Preloading libraries
2022-07-28 02:31:35,613:INFO:Initializing predict_model()
2022-07-28 02:31:35,614:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f638c8a76a0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 02:31:35,614:INFO:Checking exceptions
2022-07-28 02:31:35,615:INFO:Preloading libraries
2022-07-28 09:19:45,559:INFO:Initializing load_model()
2022-07-28 09:19:45,560:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 09:19:46,291:INFO:Initializing load_model()
2022-07-28 09:19:46,291:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 09:19:47,099:INFO:Initializing predict_model()
2022-07-28 09:19:47,099:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63b7881c70>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 09:19:47,100:INFO:Checking exceptions
2022-07-28 09:19:47,101:INFO:Preloading libraries
2022-07-28 09:19:47,248:INFO:Initializing predict_model()
2022-07-28 09:19:47,249:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f63a4d604f0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 09:19:47,249:INFO:Checking exceptions
2022-07-28 09:19:47,249:INFO:Preloading libraries
2022-07-28 11:11:13,972:INFO:Initializing load_model()
2022-07-28 11:11:13,973:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 11:11:14,850:INFO:Initializing load_model()
2022-07-28 11:11:14,851:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 11:11:15,449:INFO:Initializing predict_model()
2022-07-28 11:11:15,449:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f604f0f30d0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 11:11:15,450:INFO:Checking exceptions
2022-07-28 11:11:15,451:INFO:Preloading libraries
2022-07-28 11:11:15,642:INFO:Initializing predict_model()
2022-07-28 11:11:15,643:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f6043adb5b0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 11:11:15,644:INFO:Checking exceptions
2022-07-28 11:11:15,644:INFO:Preloading libraries
2022-07-28 11:35:04,393:INFO:Initializing load_model()
2022-07-28 11:35:04,394:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 11:35:05,349:INFO:Initializing load_model()
2022-07-28 11:35:05,349:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 11:35:06,028:INFO:Initializing predict_model()
2022-07-28 11:35:06,029:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f5d6760d040>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 11:35:06,030:INFO:Checking exceptions
2022-07-28 11:35:06,030:INFO:Preloading libraries
2022-07-28 11:35:06,281:INFO:Initializing predict_model()
2022-07-28 11:35:06,281:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f5d54ae14c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 11:35:06,281:INFO:Checking exceptions
2022-07-28 11:35:06,282:INFO:Preloading libraries
2022-07-28 16:50:28,131:INFO:Initializing load_model()
2022-07-28 16:50:28,132:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 16:50:28,284:INFO:Initializing load_model()
2022-07-28 16:50:28,284:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 16:50:28,349:INFO:Initializing predict_model()
2022-07-28 16:50:28,349:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f9cc7b2b7c0>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 16:50:28,350:INFO:Checking exceptions
2022-07-28 16:50:28,350:INFO:Preloading libraries
2022-07-28 16:50:28,497:INFO:Initializing predict_model()
2022-07-28 16:50:28,497:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f9cb505df10>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 16:50:28,497:INFO:Checking exceptions
2022-07-28 16:50:28,498:INFO:Preloading libraries
2022-07-28 16:51:45,396:INFO:Initializing load_model()
2022-07-28 16:51:45,397:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2022-07-28 16:51:45,547:INFO:Initializing load_model()
2022-07-28 16:51:45,547:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2022-07-28 16:51:45,616:INFO:Initializing predict_model()
2022-07-28 16:51:45,617:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='price')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='p...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='price',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f6f2cb2f100>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 16:51:45,617:INFO:Checking exceptions
2022-07-28 16:51:45,618:INFO:Preloading libraries
2022-07-28 16:51:45,770:INFO:Initializing predict_model()
2022-07-28 16:51:45,771:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='regression', target='carat')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    target='c...
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs',
                 DFS_Classic(interactions=['multiply'], ml_usecase='regression',
                             n_jobs=-1, random_state=123, subclass='binary',
                             target='carat',
                             top_features_to_pick_percentage=None)),
                ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostRegressor object at 0x7f6f19fe3550>]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-07-28 16:51:45,771:INFO:Checking exceptions
2022-07-28 16:51:45,771:INFO:Preloading libraries
2023-03-21 13:26:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:26:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:26:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:26:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:26:12,205:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-21 13:30:09,848:INFO:Initializing load_model()
2023-03-21 13:30:09,848:INFO:load_model(model_name=Diamond_project_pr/diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:30:56,981:INFO:Initializing load_model()
2023-03-21 13:30:56,982:INFO:load_model(model_name=Diamond_project_pr/diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:31:22,386:INFO:Initializing load_model()
2023-03-21 13:31:22,386:INFO:load_model(model_name=/Diamond_project_pr/diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:31:39,224:INFO:Initializing load_model()
2023-03-21 13:31:39,224:INFO:load_model(model_name=/diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:31:54,889:INFO:Initializing load_model()
2023-03-21 13:31:54,889:INFO:load_model(model_name=DIAMOND_PROJECT_PR/diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:38:35,743:INFO:Initializing load_model()
2023-03-21 13:38:35,743:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:48:35,181:INFO:Initializing load_model()
2023-03-21 13:48:35,184:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 13:53:26,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:53:26,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:53:26,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:53:26,676:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 13:53:27,927:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-21 13:53:53,841:INFO:PyCaret RegressionExperiment
2023-03-21 13:53:53,841:INFO:Logging name: reg-default-name
2023-03-21 13:53:53,841:INFO:ML Usecase: MLUsecase.REGRESSION
2023-03-21 13:53:53,841:INFO:version 3.0.0
2023-03-21 13:53:53,842:INFO:Initializing setup()
2023-03-21 13:53:53,842:INFO:self.USI: 7cd6
2023-03-21 13:53:53,842:INFO:self._variable_keys: {'gpu_param', 'X', 'target_param', '_ml_usecase', 'gpu_n_jobs_param', 'X_test', 'data', 'memory', 'html_param', 'fold_generator', 'n_jobs_param', 'exp_id', '_available_plots', 'log_plots_param', 'logging_param', 'exp_name_log', 'idx', 'pipeline', 'X_train', 'fold_shuffle_param', 'USI', 'y_train', 'y_test', 'fold_groups_param', 'transform_target_param', 'y', 'seed'}
2023-03-21 13:53:53,843:INFO:Checking environment
2023-03-21 13:53:53,843:INFO:python_version: 3.9.13
2023-03-21 13:53:53,843:INFO:python_build: ('tags/v3.9.13:6de2ca5', 'May 17 2022 16:36:42')
2023-03-21 13:53:53,843:INFO:machine: AMD64
2023-03-21 13:53:53,843:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-21 13:53:53,853:INFO:Memory: svmem(total=8215101440, available=505069568, percent=93.9, used=7710031872, free=505069568)
2023-03-21 13:53:53,853:INFO:Physical Core: 4
2023-03-21 13:53:53,853:INFO:Logical Core: 8
2023-03-21 13:53:53,853:INFO:Checking libraries
2023-03-21 13:53:53,853:INFO:System:
2023-03-21 13:53:53,854:INFO:    python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
2023-03-21 13:53:53,854:INFO:executable: C:\Users\demst\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe
2023-03-21 13:53:53,854:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-21 13:53:53,854:INFO:PyCaret required dependencies:
2023-03-21 13:53:53,854:INFO:                 pip: 22.0.4
2023-03-21 13:53:53,854:INFO:          setuptools: 58.1.0
2023-03-21 13:53:53,854:INFO:             pycaret: 3.0.0
2023-03-21 13:53:53,854:INFO:             IPython: 8.10.0
2023-03-21 13:53:53,854:INFO:          ipywidgets: 8.0.4
2023-03-21 13:53:53,854:INFO:                tqdm: 4.65.0
2023-03-21 13:53:53,854:INFO:               numpy: 1.23.5
2023-03-21 13:53:53,854:INFO:              pandas: 1.5.3
2023-03-21 13:53:53,855:INFO:              jinja2: 3.1.2
2023-03-21 13:53:53,855:INFO:               scipy: 1.10.1
2023-03-21 13:53:53,855:INFO:              joblib: 1.2.0
2023-03-21 13:53:53,855:INFO:             sklearn: 1.2.2
2023-03-21 13:53:53,855:INFO:                pyod: 1.0.9
2023-03-21 13:53:53,855:INFO:            imblearn: 0.10.1
2023-03-21 13:53:53,855:INFO:   category_encoders: 2.6.0
2023-03-21 13:53:53,855:INFO:            lightgbm: 3.3.5
2023-03-21 13:53:53,855:INFO:               numba: 0.56.4
2023-03-21 13:53:53,855:INFO:            requests: 2.28.2
2023-03-21 13:53:53,855:INFO:          matplotlib: 3.7.1
2023-03-21 13:53:53,855:INFO:          scikitplot: 0.3.7
2023-03-21 13:53:53,855:INFO:         yellowbrick: 1.5
2023-03-21 13:53:53,855:INFO:              plotly: 5.13.1
2023-03-21 13:53:53,855:INFO:             kaleido: 0.2.1
2023-03-21 13:53:53,855:INFO:         statsmodels: 0.13.5
2023-03-21 13:53:53,855:INFO:              sktime: 0.16.1
2023-03-21 13:53:53,855:INFO:               tbats: 1.1.2
2023-03-21 13:53:53,855:INFO:            pmdarima: 2.0.3
2023-03-21 13:53:53,855:INFO:              psutil: 5.9.4
2023-03-21 13:53:53,855:INFO:PyCaret optional dependencies:
2023-03-21 13:53:53,874:INFO:                shap: Not installed
2023-03-21 13:53:53,874:INFO:           interpret: Not installed
2023-03-21 13:53:53,874:INFO:                umap: Not installed
2023-03-21 13:53:53,874:INFO:    pandas_profiling: Not installed
2023-03-21 13:53:53,874:INFO:  explainerdashboard: Not installed
2023-03-21 13:53:53,874:INFO:             autoviz: Not installed
2023-03-21 13:53:53,874:INFO:           fairlearn: Not installed
2023-03-21 13:53:53,874:INFO:             xgboost: Not installed
2023-03-21 13:53:53,874:INFO:            catboost: 1.1.1
2023-03-21 13:53:53,875:INFO:              kmodes: Not installed
2023-03-21 13:53:53,875:INFO:             mlxtend: Not installed
2023-03-21 13:53:53,875:INFO:       statsforecast: Not installed
2023-03-21 13:53:53,875:INFO:        tune_sklearn: Not installed
2023-03-21 13:53:53,875:INFO:                 ray: Not installed
2023-03-21 13:53:53,875:INFO:            hyperopt: Not installed
2023-03-21 13:53:53,875:INFO:              optuna: Not installed
2023-03-21 13:53:53,875:INFO:               skopt: Not installed
2023-03-21 13:53:53,875:INFO:              mlflow: Not installed
2023-03-21 13:53:53,875:INFO:              gradio: Not installed
2023-03-21 13:53:53,875:INFO:             fastapi: Not installed
2023-03-21 13:53:53,875:INFO:             uvicorn: 0.13.1
2023-03-21 13:53:53,875:INFO:              m2cgen: Not installed
2023-03-21 13:53:53,875:INFO:           evidently: Not installed
2023-03-21 13:53:53,875:INFO:               fugue: Not installed
2023-03-21 13:53:53,875:INFO:           streamlit: 1.20.0
2023-03-21 13:53:53,875:INFO:             prophet: Not installed
2023-03-21 13:53:53,875:INFO:None
2023-03-21 13:53:53,875:INFO:Set up data.
2023-03-21 13:53:53,907:INFO:Set up train/test split.
2023-03-21 13:53:53,922:INFO:Set up index.
2023-03-21 13:53:53,923:INFO:Set up folding strategy.
2023-03-21 13:53:53,923:INFO:Assigning column types.
2023-03-21 13:53:53,931:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-21 13:53:53,931:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 13:53:53,935:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 13:53:53,940:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 13:53:54,010:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:54,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:54,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:54,589:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:54,948:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 13:53:54,955:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 13:53:54,960:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,035:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,094:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,094:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-03-21 13:53:55,099:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,105:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,236:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,238:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,244:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,258:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,397:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,461:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,462:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-03-21 13:53:55,472:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,543:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,591:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,662:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,723:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,724:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-03-21 13:53:55,827:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,877:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,995:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 13:53:55,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:55,995:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:55,997:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-21 13:53:56,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:56,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:56,113:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:56,188:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 13:53:56,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:56,233:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:56,233:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-03-21 13:53:56,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:56,352:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:56,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:53:56,510:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:53:56,514:INFO:Preparing preprocessing pipeline...
2023-03-21 13:53:56,516:INFO:Set up simple imputation.
2023-03-21 13:53:56,526:INFO:Set up encoding of categorical features.
2023-03-21 13:53:56,527:INFO:Set up polynomial features.
2023-03-21 13:53:56,527:INFO:Set up feature normalization.
2023-03-21 13:53:58,212:INFO:Finished creating preprocessing pipeline.
2023-03-21 13:53:58,222:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-03-21 13:53:58,222:INFO:Creating final display dataframe.
2023-03-21 13:54:01,513:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             price
2                   Target type        Regression
3           Original data shape       (53943, 10)
4        Transformed data shape      (53943, 378)
5   Transformed train set shape      (37760, 378)
6    Transformed test set shape      (16183, 378)
7              Numeric features                 6
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator             KFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              7cd6
2023-03-21 13:54:01,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:54:01,788:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:54:01,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 13:54:01,936:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 13:54:01,942:INFO:setup() successfully completed in 8.1s...............
2023-03-21 13:54:02,025:INFO:Initializing compare_models()
2023-03-21 13:54:02,026:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-03-21 13:54:02,026:INFO:Checking exceptions
2023-03-21 13:54:02,035:INFO:Preparing display monitor
2023-03-21 13:54:02,271:INFO:Initializing Linear Regression
2023-03-21 13:54:02,271:INFO:Total runtime is 0.0 minutes
2023-03-21 13:54:02,277:INFO:SubProcess create_model() called ==================================
2023-03-21 13:54:02,278:INFO:Initializing create_model()
2023-03-21 13:54:02,279:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:54:02,279:INFO:Checking exceptions
2023-03-21 13:54:02,279:INFO:Importing libraries
2023-03-21 13:54:02,279:INFO:Copying training dataset
2023-03-21 13:54:02,290:INFO:Defining folds
2023-03-21 13:54:02,291:INFO:Declaring metric variables
2023-03-21 13:54:02,301:INFO:Importing untrained model
2023-03-21 13:54:02,305:INFO:Linear Regression Imported successfully
2023-03-21 13:54:02,314:INFO:Starting cross validation
2023-03-21 13:54:02,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:54:20,027:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-03-21 13:54:20,620:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-03-21 13:54:20,737:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-03-21 13:54:20,906:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-03-21 13:54:22,178:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:23,150:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:26,156:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:26,231:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:26,447:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:26,569:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:26,911:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:26,930:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-03-21 13:54:29,146:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:54:29,320:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:54:30,782:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-03-21 13:54:34,591:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:54:34,651:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:54:35,392:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:54:35,717:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:54:37,486:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-03-21 13:54:42,793:INFO:Calculating mean and std
2023-03-21 13:54:42,869:INFO:Creating metrics dataframe
2023-03-21 13:54:43,009:INFO:Uploading results into container
2023-03-21 13:54:43,014:INFO:Uploading model into container now
2023-03-21 13:54:43,021:INFO:_master_model_container: 1
2023-03-21 13:54:43,021:INFO:_display_container: 2
2023-03-21 13:54:43,028:INFO:LinearRegression(n_jobs=-1)
2023-03-21 13:54:43,029:INFO:create_model() successfully completed......................................
2023-03-21 13:54:44,481:INFO:SubProcess create_model() end ==================================
2023-03-21 13:54:44,482:INFO:Creating metrics dataframe
2023-03-21 13:54:44,513:INFO:Initializing Lasso Regression
2023-03-21 13:54:44,513:INFO:Total runtime is 0.7040369550387064 minutes
2023-03-21 13:54:44,520:INFO:SubProcess create_model() called ==================================
2023-03-21 13:54:44,522:INFO:Initializing create_model()
2023-03-21 13:54:44,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:54:44,524:INFO:Checking exceptions
2023-03-21 13:54:44,524:INFO:Importing libraries
2023-03-21 13:54:44,526:INFO:Copying training dataset
2023-03-21 13:54:44,578:INFO:Defining folds
2023-03-21 13:54:44,578:INFO:Declaring metric variables
2023-03-21 13:54:44,585:INFO:Importing untrained model
2023-03-21 13:54:44,592:INFO:Lasso Regression Imported successfully
2023-03-21 13:54:44,605:INFO:Starting cross validation
2023-03-21 13:54:44,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:55:25,438:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.830e+09, tolerance: 5.378e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:26,812:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:28,228:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-03-21 13:55:29,458:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.13s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 13:55:30,428:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.572e+09, tolerance: 5.363e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:31,100:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.463e+09, tolerance: 5.411e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:31,964:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.46s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:32,526:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.154e+09, tolerance: 5.389e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:32,704:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.195e+09, tolerance: 5.379e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:32,750:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.17s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:32,844:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.271e+09, tolerance: 5.397e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:33,338:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:33,432:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:33,732:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:33,867:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.516e+09, tolerance: 5.420e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:34,468:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.314e+09, tolerance: 5.410e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:34,524:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:43,967:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.911e+09, tolerance: 5.417e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:44,978:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.354e+09, tolerance: 5.409e+07
  model = cd_fast.enet_coordinate_descent(

2023-03-21 13:55:45,208:INFO:Calculating mean and std
2023-03-21 13:55:45,247:INFO:Creating metrics dataframe
2023-03-21 13:55:45,347:INFO:Uploading results into container
2023-03-21 13:55:45,351:INFO:Uploading model into container now
2023-03-21 13:55:45,357:INFO:_master_model_container: 2
2023-03-21 13:55:45,357:INFO:_display_container: 2
2023-03-21 13:55:45,362:INFO:Lasso(random_state=123)
2023-03-21 13:55:45,363:INFO:create_model() successfully completed......................................
2023-03-21 13:55:45,840:INFO:SubProcess create_model() end ==================================
2023-03-21 13:55:45,841:INFO:Creating metrics dataframe
2023-03-21 13:55:45,863:INFO:Initializing Ridge Regression
2023-03-21 13:55:45,863:INFO:Total runtime is 1.7265300830205281 minutes
2023-03-21 13:55:45,868:INFO:SubProcess create_model() called ==================================
2023-03-21 13:55:45,869:INFO:Initializing create_model()
2023-03-21 13:55:45,869:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:55:45,869:INFO:Checking exceptions
2023-03-21 13:55:45,869:INFO:Importing libraries
2023-03-21 13:55:45,870:INFO:Copying training dataset
2023-03-21 13:55:45,890:INFO:Defining folds
2023-03-21 13:55:45,891:INFO:Declaring metric variables
2023-03-21 13:55:45,896:INFO:Importing untrained model
2023-03-21 13:55:45,900:INFO:Ridge Regression Imported successfully
2023-03-21 13:55:45,910:INFO:Starting cross validation
2023-03-21 13:55:45,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:55:49,228:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:49,363:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:55:52,322:INFO:Calculating mean and std
2023-03-21 13:55:52,325:INFO:Creating metrics dataframe
2023-03-21 13:55:52,432:INFO:Uploading results into container
2023-03-21 13:55:52,433:INFO:Uploading model into container now
2023-03-21 13:55:52,434:INFO:_master_model_container: 3
2023-03-21 13:55:52,434:INFO:_display_container: 2
2023-03-21 13:55:52,434:INFO:Ridge(random_state=123)
2023-03-21 13:55:52,434:INFO:create_model() successfully completed......................................
2023-03-21 13:55:52,626:INFO:SubProcess create_model() end ==================================
2023-03-21 13:55:52,626:INFO:Creating metrics dataframe
2023-03-21 13:55:52,644:INFO:Initializing Elastic Net
2023-03-21 13:55:52,644:INFO:Total runtime is 1.8395517468452454 minutes
2023-03-21 13:55:52,650:INFO:SubProcess create_model() called ==================================
2023-03-21 13:55:52,651:INFO:Initializing create_model()
2023-03-21 13:55:52,651:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:55:52,651:INFO:Checking exceptions
2023-03-21 13:55:52,651:INFO:Importing libraries
2023-03-21 13:55:52,651:INFO:Copying training dataset
2023-03-21 13:55:52,669:INFO:Defining folds
2023-03-21 13:55:52,669:INFO:Declaring metric variables
2023-03-21 13:55:52,677:INFO:Importing untrained model
2023-03-21 13:55:52,682:INFO:Elastic Net Imported successfully
2023-03-21 13:55:52,695:INFO:Starting cross validation
2023-03-21 13:55:52,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:56:11,063:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:11,397:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:11,948:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:13,270:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:18,964:INFO:Calculating mean and std
2023-03-21 13:56:18,992:INFO:Creating metrics dataframe
2023-03-21 13:56:19,120:INFO:Uploading results into container
2023-03-21 13:56:19,122:INFO:Uploading model into container now
2023-03-21 13:56:19,124:INFO:_master_model_container: 4
2023-03-21 13:56:19,124:INFO:_display_container: 2
2023-03-21 13:56:19,126:INFO:ElasticNet(random_state=123)
2023-03-21 13:56:19,126:INFO:create_model() successfully completed......................................
2023-03-21 13:56:19,517:INFO:SubProcess create_model() end ==================================
2023-03-21 13:56:19,517:INFO:Creating metrics dataframe
2023-03-21 13:56:19,537:INFO:Initializing Least Angle Regression
2023-03-21 13:56:19,537:INFO:Total runtime is 2.287765566507975 minutes
2023-03-21 13:56:19,543:INFO:SubProcess create_model() called ==================================
2023-03-21 13:56:19,543:INFO:Initializing create_model()
2023-03-21 13:56:19,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:56:19,544:INFO:Checking exceptions
2023-03-21 13:56:19,544:INFO:Importing libraries
2023-03-21 13:56:19,544:INFO:Copying training dataset
2023-03-21 13:56:19,570:INFO:Defining folds
2023-03-21 13:56:19,570:INFO:Declaring metric variables
2023-03-21 13:56:19,576:INFO:Importing untrained model
2023-03-21 13:56:19,582:INFO:Least Angle Regression Imported successfully
2023-03-21 13:56:19,590:INFO:Starting cross validation
2023-03-21 13:56:19,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:56:22,556:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=2.087e+02, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,573:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 47 iterations, i.e. alpha=4.971e+02, with an active set of 39 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,588:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 57 iterations, i.e. alpha=2.475e+02, with an active set of 47 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,601:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 66 iterations, i.e. alpha=2.333e+02, with an active set of 55 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,703:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=1.942e+02, with an active set of 20 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,823:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 53 iterations, i.e. alpha=3.973e+02, with an active set of 46 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,865:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=2.090e+02, with an active set of 20 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,878:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 50 iterations, i.e. alpha=2.271e+02, with an active set of 40 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,930:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 48 iterations, i.e. alpha=2.295e+02, with an active set of 41 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,938:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 94 iterations, i.e. alpha=1.879e+02, with an active set of 80 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,943:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=1.969e+02, with an active set of 20 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,958:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=3.374e+02, with an active set of 37 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:22,960:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 46 iterations, i.e. alpha=3.222e+02, with an active set of 40 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:23,019:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=2.027e+02, with an active set of 21 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:23,037:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 107 iterations, i.e. alpha=2.082e+02, with an active set of 94 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:24,038:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 54 iterations, i.e. alpha=2.188e+02, with an active set of 44 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:24,363:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:24,587:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:26,347:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 60 iterations, i.e. alpha=1.856e+02, with an active set of 51 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:26,360:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 102 iterations, i.e. alpha=1.559e+02, with an active set of 92 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:26,360:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 102 iterations, i.e. alpha=1.556e+02, with an active set of 92 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:26,364:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 106 iterations, i.e. alpha=1.543e+02, with an active set of 95 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:26,369:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 116 iterations, i.e. alpha=1.525e+02, with an active set of 104 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:26,402:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=2.760e+02, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:27,174:INFO:Calculating mean and std
2023-03-21 13:56:27,179:INFO:Creating metrics dataframe
2023-03-21 13:56:27,306:INFO:Uploading results into container
2023-03-21 13:56:27,308:INFO:Uploading model into container now
2023-03-21 13:56:27,311:INFO:_master_model_container: 5
2023-03-21 13:56:27,311:INFO:_display_container: 2
2023-03-21 13:56:27,312:INFO:Lars(random_state=123)
2023-03-21 13:56:27,312:INFO:create_model() successfully completed......................................
2023-03-21 13:56:27,446:INFO:SubProcess create_model() end ==================================
2023-03-21 13:56:27,447:INFO:Creating metrics dataframe
2023-03-21 13:56:27,466:INFO:Initializing Lasso Least Angle Regression
2023-03-21 13:56:27,466:INFO:Total runtime is 2.419920440514882 minutes
2023-03-21 13:56:27,472:INFO:SubProcess create_model() called ==================================
2023-03-21 13:56:27,472:INFO:Initializing create_model()
2023-03-21 13:56:27,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:56:27,473:INFO:Checking exceptions
2023-03-21 13:56:27,473:INFO:Importing libraries
2023-03-21 13:56:27,473:INFO:Copying training dataset
2023-03-21 13:56:27,493:INFO:Defining folds
2023-03-21 13:56:27,493:INFO:Declaring metric variables
2023-03-21 13:56:27,500:INFO:Importing untrained model
2023-03-21 13:56:27,508:INFO:Lasso Least Angle Regression Imported successfully
2023-03-21 13:56:27,520:INFO:Starting cross validation
2023-03-21 13:56:27,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:56:29,803:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 82 iterations, i.e. alpha=1.593e+01, with an active set of 58 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:29,920:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 144 iterations, i.e. alpha=7.408e+00, with an active set of 100 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:29,923:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 146 iterations, alpha=7.407e+00, previous alpha=7.384e+00, with an active set of 101 regressors.
  warnings.warn(

2023-03-21 13:56:30,101:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 85 iterations, i.e. alpha=1.533e+01, with an active set of 59 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,240:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 129 iterations, i.e. alpha=7.708e+00, with an active set of 93 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,244:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 163 iterations, i.e. alpha=4.066e+00, with an active set of 117 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,254:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 177 iterations, i.e. alpha=3.356e+00, with an active set of 125 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,284:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 198 iterations, alpha=3.291e+00, previous alpha=3.143e+00, with an active set of 133 regressors.
  warnings.warn(

2023-03-21 13:56:30,376:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 139 iterations, i.e. alpha=6.447e+00, with an active set of 97 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,392:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 160 iterations, alpha=5.969e+00, previous alpha=5.948e+00, with an active set of 107 regressors.
  warnings.warn(

2023-03-21 13:56:30,412:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 77 iterations, i.e. alpha=1.546e+01, with an active set of 57 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,477:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 235 iterations, alpha=2.766e+00, previous alpha=2.766e+00, with an active set of 136 regressors.
  warnings.warn(

2023-03-21 13:56:30,522:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 155 iterations, alpha=6.143e+00, previous alpha=5.508e+00, with an active set of 106 regressors.
  warnings.warn(

2023-03-21 13:56:30,576:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 125 iterations, alpha=7.926e+00, previous alpha=7.926e+00, with an active set of 90 regressors.
  warnings.warn(

2023-03-21 13:56:30,587:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:30,626:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 180 iterations, i.e. alpha=2.203e+00, with an active set of 132 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,627:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 180 iterations, i.e. alpha=2.202e+00, with an active set of 132 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:30,695:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 215 iterations, alpha=1.102e+00, previous alpha=1.102e+00, with an active set of 146 regressors.
  warnings.warn(

2023-03-21 13:56:32,959:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 133 iterations, i.e. alpha=6.675e+00, with an active set of 99 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:32,975:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 166 iterations, i.e. alpha=3.468e+00, with an active set of 122 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-21 13:56:32,990:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 205 iterations, alpha=1.205e+00, previous alpha=1.203e+00, with an active set of 146 regressors.
  warnings.warn(

2023-03-21 13:56:32,995:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 173 iterations, alpha=2.572e+00, previous alpha=2.572e+00, with an active set of 130 regressors.
  warnings.warn(

2023-03-21 13:56:33,487:INFO:Calculating mean and std
2023-03-21 13:56:33,489:INFO:Creating metrics dataframe
2023-03-21 13:56:33,625:INFO:Uploading results into container
2023-03-21 13:56:33,626:INFO:Uploading model into container now
2023-03-21 13:56:33,627:INFO:_master_model_container: 6
2023-03-21 13:56:33,627:INFO:_display_container: 2
2023-03-21 13:56:33,628:INFO:LassoLars(random_state=123)
2023-03-21 13:56:33,628:INFO:create_model() successfully completed......................................
2023-03-21 13:56:33,759:INFO:SubProcess create_model() end ==================================
2023-03-21 13:56:33,760:INFO:Creating metrics dataframe
2023-03-21 13:56:33,778:INFO:Initializing Orthogonal Matching Pursuit
2023-03-21 13:56:33,778:INFO:Total runtime is 2.525126524766286 minutes
2023-03-21 13:56:33,785:INFO:SubProcess create_model() called ==================================
2023-03-21 13:56:33,789:INFO:Initializing create_model()
2023-03-21 13:56:33,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:56:33,789:INFO:Checking exceptions
2023-03-21 13:56:33,789:INFO:Importing libraries
2023-03-21 13:56:33,789:INFO:Copying training dataset
2023-03-21 13:56:33,808:INFO:Defining folds
2023-03-21 13:56:33,808:INFO:Declaring metric variables
2023-03-21 13:56:33,816:INFO:Importing untrained model
2023-03-21 13:56:33,822:INFO:Orthogonal Matching Pursuit Imported successfully
2023-03-21 13:56:33,836:INFO:Starting cross validation
2023-03-21 13:56:33,839:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:56:37,417:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:39,694:INFO:Calculating mean and std
2023-03-21 13:56:39,698:INFO:Creating metrics dataframe
2023-03-21 13:56:39,855:INFO:Uploading results into container
2023-03-21 13:56:39,856:INFO:Uploading model into container now
2023-03-21 13:56:39,857:INFO:_master_model_container: 7
2023-03-21 13:56:39,857:INFO:_display_container: 2
2023-03-21 13:56:39,857:INFO:OrthogonalMatchingPursuit()
2023-03-21 13:56:39,857:INFO:create_model() successfully completed......................................
2023-03-21 13:56:39,972:INFO:SubProcess create_model() end ==================================
2023-03-21 13:56:39,972:INFO:Creating metrics dataframe
2023-03-21 13:56:39,990:INFO:Initializing Bayesian Ridge
2023-03-21 13:56:39,990:INFO:Total runtime is 2.628661819299062 minutes
2023-03-21 13:56:39,994:INFO:SubProcess create_model() called ==================================
2023-03-21 13:56:39,995:INFO:Initializing create_model()
2023-03-21 13:56:39,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:56:39,995:INFO:Checking exceptions
2023-03-21 13:56:39,995:INFO:Importing libraries
2023-03-21 13:56:39,995:INFO:Copying training dataset
2023-03-21 13:56:40,013:INFO:Defining folds
2023-03-21 13:56:40,013:INFO:Declaring metric variables
2023-03-21 13:56:40,019:INFO:Importing untrained model
2023-03-21 13:56:40,023:INFO:Bayesian Ridge Imported successfully
2023-03-21 13:56:40,033:INFO:Starting cross validation
2023-03-21 13:56:40,036:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:56:51,995:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:53,426:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:53,458:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:53,750:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:56:55,380:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:57:00,028:INFO:Calculating mean and std
2023-03-21 13:57:00,043:INFO:Creating metrics dataframe
2023-03-21 13:57:00,223:INFO:Uploading results into container
2023-03-21 13:57:00,225:INFO:Uploading model into container now
2023-03-21 13:57:00,227:INFO:_master_model_container: 8
2023-03-21 13:57:00,227:INFO:_display_container: 2
2023-03-21 13:57:00,228:INFO:BayesianRidge()
2023-03-21 13:57:00,228:INFO:create_model() successfully completed......................................
2023-03-21 13:57:00,442:INFO:SubProcess create_model() end ==================================
2023-03-21 13:57:00,443:INFO:Creating metrics dataframe
2023-03-21 13:57:00,466:INFO:Initializing Passive Aggressive Regressor
2023-03-21 13:57:00,466:INFO:Total runtime is 2.969916268189748 minutes
2023-03-21 13:57:00,470:INFO:SubProcess create_model() called ==================================
2023-03-21 13:57:00,471:INFO:Initializing create_model()
2023-03-21 13:57:00,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:57:00,471:INFO:Checking exceptions
2023-03-21 13:57:00,471:INFO:Importing libraries
2023-03-21 13:57:00,472:INFO:Copying training dataset
2023-03-21 13:57:00,492:INFO:Defining folds
2023-03-21 13:57:00,492:INFO:Declaring metric variables
2023-03-21 13:57:00,500:INFO:Importing untrained model
2023-03-21 13:57:00,505:INFO:Passive Aggressive Regressor Imported successfully
2023-03-21 13:57:00,517:INFO:Starting cross validation
2023-03-21 13:57:00,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:57:11,838:INFO:Calculating mean and std
2023-03-21 13:57:11,840:INFO:Creating metrics dataframe
2023-03-21 13:57:12,042:INFO:Uploading results into container
2023-03-21 13:57:12,043:INFO:Uploading model into container now
2023-03-21 13:57:12,044:INFO:_master_model_container: 9
2023-03-21 13:57:12,044:INFO:_display_container: 2
2023-03-21 13:57:12,045:INFO:PassiveAggressiveRegressor(random_state=123)
2023-03-21 13:57:12,045:INFO:create_model() successfully completed......................................
2023-03-21 13:57:12,207:INFO:SubProcess create_model() end ==================================
2023-03-21 13:57:12,207:INFO:Creating metrics dataframe
2023-03-21 13:57:12,225:INFO:Initializing Huber Regressor
2023-03-21 13:57:12,225:INFO:Total runtime is 3.1658974091211953 minutes
2023-03-21 13:57:12,230:INFO:SubProcess create_model() called ==================================
2023-03-21 13:57:12,231:INFO:Initializing create_model()
2023-03-21 13:57:12,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:57:12,231:INFO:Checking exceptions
2023-03-21 13:57:12,231:INFO:Importing libraries
2023-03-21 13:57:12,231:INFO:Copying training dataset
2023-03-21 13:57:12,251:INFO:Defining folds
2023-03-21 13:57:12,253:INFO:Declaring metric variables
2023-03-21 13:57:12,258:INFO:Importing untrained model
2023-03-21 13:57:12,263:INFO:Huber Regressor Imported successfully
2023-03-21 13:57:12,275:INFO:Starting cross validation
2023-03-21 13:57:12,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:58:08,777:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:09,007:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:09,422:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:10,322:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:10,589:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:11,164:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:11,304:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:11,958:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:32,520:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:32,553:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-21 13:58:32,917:INFO:Calculating mean and std
2023-03-21 13:58:32,925:INFO:Creating metrics dataframe
2023-03-21 13:58:33,123:INFO:Uploading results into container
2023-03-21 13:58:33,126:INFO:Uploading model into container now
2023-03-21 13:58:33,129:INFO:_master_model_container: 10
2023-03-21 13:58:33,129:INFO:_display_container: 2
2023-03-21 13:58:33,131:INFO:HuberRegressor()
2023-03-21 13:58:33,132:INFO:create_model() successfully completed......................................
2023-03-21 13:58:33,468:INFO:SubProcess create_model() end ==================================
2023-03-21 13:58:33,469:INFO:Creating metrics dataframe
2023-03-21 13:58:33,488:INFO:Initializing K Neighbors Regressor
2023-03-21 13:58:33,488:INFO:Total runtime is 4.52029097477595 minutes
2023-03-21 13:58:33,494:INFO:SubProcess create_model() called ==================================
2023-03-21 13:58:33,495:INFO:Initializing create_model()
2023-03-21 13:58:33,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:58:33,495:INFO:Checking exceptions
2023-03-21 13:58:33,495:INFO:Importing libraries
2023-03-21 13:58:33,495:INFO:Copying training dataset
2023-03-21 13:58:33,509:INFO:Defining folds
2023-03-21 13:58:33,510:INFO:Declaring metric variables
2023-03-21 13:58:33,513:INFO:Importing untrained model
2023-03-21 13:58:33,518:INFO:K Neighbors Regressor Imported successfully
2023-03-21 13:58:33,529:INFO:Starting cross validation
2023-03-21 13:58:33,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:58:39,516:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 13:58:59,419:INFO:Calculating mean and std
2023-03-21 13:58:59,437:INFO:Creating metrics dataframe
2023-03-21 13:58:59,696:INFO:Uploading results into container
2023-03-21 13:58:59,698:INFO:Uploading model into container now
2023-03-21 13:58:59,699:INFO:_master_model_container: 11
2023-03-21 13:58:59,699:INFO:_display_container: 2
2023-03-21 13:58:59,700:INFO:KNeighborsRegressor(n_jobs=-1)
2023-03-21 13:58:59,701:INFO:create_model() successfully completed......................................
2023-03-21 13:58:59,920:INFO:SubProcess create_model() end ==================================
2023-03-21 13:58:59,920:INFO:Creating metrics dataframe
2023-03-21 13:58:59,939:INFO:Initializing Decision Tree Regressor
2023-03-21 13:58:59,939:INFO:Total runtime is 4.961130201816559 minutes
2023-03-21 13:58:59,944:INFO:SubProcess create_model() called ==================================
2023-03-21 13:58:59,945:INFO:Initializing create_model()
2023-03-21 13:58:59,945:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:58:59,945:INFO:Checking exceptions
2023-03-21 13:58:59,945:INFO:Importing libraries
2023-03-21 13:58:59,945:INFO:Copying training dataset
2023-03-21 13:58:59,964:INFO:Defining folds
2023-03-21 13:58:59,964:INFO:Declaring metric variables
2023-03-21 13:58:59,970:INFO:Importing untrained model
2023-03-21 13:58:59,975:INFO:Decision Tree Regressor Imported successfully
2023-03-21 13:58:59,985:INFO:Starting cross validation
2023-03-21 13:58:59,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 13:59:17,007:INFO:Calculating mean and std
2023-03-21 13:59:17,011:INFO:Creating metrics dataframe
2023-03-21 13:59:17,240:INFO:Uploading results into container
2023-03-21 13:59:17,241:INFO:Uploading model into container now
2023-03-21 13:59:17,241:INFO:_master_model_container: 12
2023-03-21 13:59:17,241:INFO:_display_container: 2
2023-03-21 13:59:17,243:INFO:DecisionTreeRegressor(random_state=123)
2023-03-21 13:59:17,243:INFO:create_model() successfully completed......................................
2023-03-21 13:59:17,370:INFO:SubProcess create_model() end ==================================
2023-03-21 13:59:17,371:INFO:Creating metrics dataframe
2023-03-21 13:59:17,389:INFO:Initializing Random Forest Regressor
2023-03-21 13:59:17,389:INFO:Total runtime is 5.251969834168752 minutes
2023-03-21 13:59:17,394:INFO:SubProcess create_model() called ==================================
2023-03-21 13:59:17,395:INFO:Initializing create_model()
2023-03-21 13:59:17,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 13:59:17,395:INFO:Checking exceptions
2023-03-21 13:59:17,395:INFO:Importing libraries
2023-03-21 13:59:17,395:INFO:Copying training dataset
2023-03-21 13:59:17,411:INFO:Defining folds
2023-03-21 13:59:17,411:INFO:Declaring metric variables
2023-03-21 13:59:17,416:INFO:Importing untrained model
2023-03-21 13:59:17,423:INFO:Random Forest Regressor Imported successfully
2023-03-21 13:59:17,435:INFO:Starting cross validation
2023-03-21 13:59:17,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:08:24,776:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.38s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:25,644:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:26,350:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:27,947:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:28,328:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:28,937:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:29,610:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:29,697:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:30,908:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 4.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:31,938:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:32,637:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 5.35s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:08:33,157:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:34,379:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 2.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:34,449:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:35,928:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:08:37,627:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:11:13,931:INFO:Calculating mean and std
2023-03-21 14:11:14,008:INFO:Creating metrics dataframe
2023-03-21 14:11:14,320:INFO:Uploading results into container
2023-03-21 14:11:14,324:INFO:Uploading model into container now
2023-03-21 14:11:14,335:INFO:_master_model_container: 13
2023-03-21 14:11:14,335:INFO:_display_container: 2
2023-03-21 14:11:14,344:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-03-21 14:11:14,345:INFO:create_model() successfully completed......................................
2023-03-21 14:11:15,033:INFO:SubProcess create_model() end ==================================
2023-03-21 14:11:15,034:INFO:Creating metrics dataframe
2023-03-21 14:11:15,053:INFO:Initializing Extra Trees Regressor
2023-03-21 14:11:15,053:INFO:Total runtime is 17.21304220755895 minutes
2023-03-21 14:11:15,058:INFO:SubProcess create_model() called ==================================
2023-03-21 14:11:15,058:INFO:Initializing create_model()
2023-03-21 14:11:15,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:11:15,060:INFO:Checking exceptions
2023-03-21 14:11:15,060:INFO:Importing libraries
2023-03-21 14:11:15,060:INFO:Copying training dataset
2023-03-21 14:11:15,094:INFO:Defining folds
2023-03-21 14:11:15,094:INFO:Declaring metric variables
2023-03-21 14:11:15,100:INFO:Importing untrained model
2023-03-21 14:11:15,105:INFO:Extra Trees Regressor Imported successfully
2023-03-21 14:11:15,116:INFO:Starting cross validation
2023-03-21 14:11:15,119:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:18:00,181:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.41s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:01,724:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:02,325:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:18:03,880:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:04,023:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:05,185:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.38s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:05,221:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:05,291:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:05,297:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:18:06,398:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:18:06,450:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:18:06,534:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:19:46,067:INFO:Calculating mean and std
2023-03-21 14:19:46,173:INFO:Creating metrics dataframe
2023-03-21 14:19:46,577:INFO:Uploading results into container
2023-03-21 14:19:46,585:INFO:Uploading model into container now
2023-03-21 14:19:46,598:INFO:_master_model_container: 14
2023-03-21 14:19:46,598:INFO:_display_container: 2
2023-03-21 14:19:46,610:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-03-21 14:19:46,610:INFO:create_model() successfully completed......................................
2023-03-21 14:19:47,330:INFO:SubProcess create_model() end ==================================
2023-03-21 14:19:47,331:INFO:Creating metrics dataframe
2023-03-21 14:19:47,356:INFO:Initializing AdaBoost Regressor
2023-03-21 14:19:47,356:INFO:Total runtime is 25.751426136493684 minutes
2023-03-21 14:19:47,363:INFO:SubProcess create_model() called ==================================
2023-03-21 14:19:47,364:INFO:Initializing create_model()
2023-03-21 14:19:47,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:19:47,364:INFO:Checking exceptions
2023-03-21 14:19:47,364:INFO:Importing libraries
2023-03-21 14:19:47,364:INFO:Copying training dataset
2023-03-21 14:19:47,405:INFO:Defining folds
2023-03-21 14:19:47,406:INFO:Declaring metric variables
2023-03-21 14:19:47,409:INFO:Importing untrained model
2023-03-21 14:19:47,413:INFO:AdaBoost Regressor Imported successfully
2023-03-21 14:19:47,425:INFO:Starting cross validation
2023-03-21 14:19:47,429:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:23:35,773:INFO:Calculating mean and std
2023-03-21 14:23:35,835:INFO:Creating metrics dataframe
2023-03-21 14:23:36,088:INFO:Uploading results into container
2023-03-21 14:23:36,094:INFO:Uploading model into container now
2023-03-21 14:23:36,102:INFO:_master_model_container: 15
2023-03-21 14:23:36,102:INFO:_display_container: 2
2023-03-21 14:23:36,110:INFO:AdaBoostRegressor(random_state=123)
2023-03-21 14:23:36,110:INFO:create_model() successfully completed......................................
2023-03-21 14:23:36,733:INFO:SubProcess create_model() end ==================================
2023-03-21 14:23:36,733:INFO:Creating metrics dataframe
2023-03-21 14:23:36,762:INFO:Initializing Gradient Boosting Regressor
2023-03-21 14:23:36,762:INFO:Total runtime is 29.574853761990866 minutes
2023-03-21 14:23:36,769:INFO:SubProcess create_model() called ==================================
2023-03-21 14:23:36,770:INFO:Initializing create_model()
2023-03-21 14:23:36,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:23:36,771:INFO:Checking exceptions
2023-03-21 14:23:36,771:INFO:Importing libraries
2023-03-21 14:23:36,771:INFO:Copying training dataset
2023-03-21 14:23:36,805:INFO:Defining folds
2023-03-21 14:23:36,807:INFO:Declaring metric variables
2023-03-21 14:23:36,812:INFO:Importing untrained model
2023-03-21 14:23:36,818:INFO:Gradient Boosting Regressor Imported successfully
2023-03-21 14:23:36,829:INFO:Starting cross validation
2023-03-21 14:23:36,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:26:13,466:INFO:Calculating mean and std
2023-03-21 14:26:13,467:INFO:Creating metrics dataframe
2023-03-21 14:26:13,675:INFO:Uploading results into container
2023-03-21 14:26:13,676:INFO:Uploading model into container now
2023-03-21 14:26:13,677:INFO:_master_model_container: 16
2023-03-21 14:26:13,677:INFO:_display_container: 2
2023-03-21 14:26:13,677:INFO:GradientBoostingRegressor(random_state=123)
2023-03-21 14:26:13,677:INFO:create_model() successfully completed......................................
2023-03-21 14:26:13,783:INFO:SubProcess create_model() end ==================================
2023-03-21 14:26:13,783:INFO:Creating metrics dataframe
2023-03-21 14:26:13,800:INFO:Initializing Light Gradient Boosting Machine
2023-03-21 14:26:13,801:INFO:Total runtime is 32.1921693166097 minutes
2023-03-21 14:26:13,805:INFO:SubProcess create_model() called ==================================
2023-03-21 14:26:13,805:INFO:Initializing create_model()
2023-03-21 14:26:13,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:26:13,806:INFO:Checking exceptions
2023-03-21 14:26:13,806:INFO:Importing libraries
2023-03-21 14:26:13,806:INFO:Copying training dataset
2023-03-21 14:26:13,821:INFO:Defining folds
2023-03-21 14:26:13,822:INFO:Declaring metric variables
2023-03-21 14:26:13,827:INFO:Importing untrained model
2023-03-21 14:26:13,831:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-21 14:26:13,839:INFO:Starting cross validation
2023-03-21 14:26:13,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:26:33,677:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:26:33,741:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:26:33,865:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:26:40,754:INFO:Calculating mean and std
2023-03-21 14:26:40,769:INFO:Creating metrics dataframe
2023-03-21 14:26:40,988:INFO:Uploading results into container
2023-03-21 14:26:40,989:INFO:Uploading model into container now
2023-03-21 14:26:40,994:INFO:_master_model_container: 17
2023-03-21 14:26:40,994:INFO:_display_container: 2
2023-03-21 14:26:40,995:INFO:LGBMRegressor(random_state=123)
2023-03-21 14:26:40,995:INFO:create_model() successfully completed......................................
2023-03-21 14:26:41,323:INFO:SubProcess create_model() end ==================================
2023-03-21 14:26:41,323:INFO:Creating metrics dataframe
2023-03-21 14:26:41,346:INFO:Initializing CatBoost Regressor
2023-03-21 14:26:41,346:INFO:Total runtime is 32.651256036758426 minutes
2023-03-21 14:26:41,353:INFO:SubProcess create_model() called ==================================
2023-03-21 14:26:41,354:INFO:Initializing create_model()
2023-03-21 14:26:41,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E93EE8C760>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E93EE8C670>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:26:41,354:INFO:Checking exceptions
2023-03-21 14:26:41,354:INFO:Importing libraries
2023-03-21 14:26:41,355:INFO:Copying training dataset
2023-03-21 14:26:41,383:INFO:Defining folds
2023-03-21 14:26:41,383:INFO:Declaring metric variables
2023-03-21 14:26:41,389:INFO:Importing untrained model
2023-03-21 14:26:41,404:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:26:41,412:INFO:Starting cross validation
2023-03-21 14:26:41,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:29:36,378:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:32:56,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:32:56,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:32:56,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:32:56,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:32:57,505:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-21 14:32:57,910:INFO:PyCaret RegressionExperiment
2023-03-21 14:32:57,910:INFO:Logging name: reg-default-name
2023-03-21 14:32:57,910:INFO:ML Usecase: MLUsecase.REGRESSION
2023-03-21 14:32:57,912:INFO:version 3.0.0
2023-03-21 14:32:57,912:INFO:Initializing setup()
2023-03-21 14:32:57,912:INFO:self.USI: a723
2023-03-21 14:32:57,912:INFO:self._variable_keys: {'y_test', 'log_plots_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'transform_target_param', 'idx', 'fold_groups_param', 'X_train', 'target_param', 'exp_name_log', 'memory', '_available_plots', 'pipeline', 'html_param', 'n_jobs_param', 'logging_param', 'USI', 'y_train', 'gpu_param', '_ml_usecase', 'seed', 'X', 'X_test', 'y', 'fold_generator', 'data', 'exp_id'}
2023-03-21 14:32:57,912:INFO:Checking environment
2023-03-21 14:32:57,912:INFO:python_version: 3.9.13
2023-03-21 14:32:57,912:INFO:python_build: ('tags/v3.9.13:6de2ca5', 'May 17 2022 16:36:42')
2023-03-21 14:32:57,912:INFO:machine: AMD64
2023-03-21 14:32:57,912:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-21 14:32:57,917:INFO:Memory: svmem(total=8215101440, available=415608832, percent=94.9, used=7799492608, free=415608832)
2023-03-21 14:32:57,917:INFO:Physical Core: 4
2023-03-21 14:32:57,917:INFO:Logical Core: 8
2023-03-21 14:32:57,917:INFO:Checking libraries
2023-03-21 14:32:57,917:INFO:System:
2023-03-21 14:32:57,917:INFO:    python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
2023-03-21 14:32:57,917:INFO:executable: C:\Users\demst\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe
2023-03-21 14:32:57,917:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-21 14:32:57,917:INFO:PyCaret required dependencies:
2023-03-21 14:32:57,917:INFO:                 pip: 22.0.4
2023-03-21 14:32:57,917:INFO:          setuptools: 58.1.0
2023-03-21 14:32:57,917:INFO:             pycaret: 3.0.0
2023-03-21 14:32:57,917:INFO:             IPython: 8.10.0
2023-03-21 14:32:57,917:INFO:          ipywidgets: 8.0.4
2023-03-21 14:32:57,917:INFO:                tqdm: 4.65.0
2023-03-21 14:32:57,917:INFO:               numpy: 1.23.5
2023-03-21 14:32:57,917:INFO:              pandas: 1.5.3
2023-03-21 14:32:57,917:INFO:              jinja2: 3.1.2
2023-03-21 14:32:57,917:INFO:               scipy: 1.10.1
2023-03-21 14:32:57,917:INFO:              joblib: 1.2.0
2023-03-21 14:32:57,917:INFO:             sklearn: 1.2.2
2023-03-21 14:32:57,917:INFO:                pyod: 1.0.9
2023-03-21 14:32:57,917:INFO:            imblearn: 0.10.1
2023-03-21 14:32:57,917:INFO:   category_encoders: 2.6.0
2023-03-21 14:32:57,917:INFO:            lightgbm: 3.3.5
2023-03-21 14:32:57,917:INFO:               numba: 0.56.4
2023-03-21 14:32:57,917:INFO:            requests: 2.28.2
2023-03-21 14:32:57,917:INFO:          matplotlib: 3.7.1
2023-03-21 14:32:57,917:INFO:          scikitplot: 0.3.7
2023-03-21 14:32:57,917:INFO:         yellowbrick: 1.5
2023-03-21 14:32:57,919:INFO:              plotly: 5.13.1
2023-03-21 14:32:57,919:INFO:             kaleido: 0.2.1
2023-03-21 14:32:57,919:INFO:         statsmodels: 0.13.5
2023-03-21 14:32:57,919:INFO:              sktime: 0.16.1
2023-03-21 14:32:57,919:INFO:               tbats: 1.1.2
2023-03-21 14:32:57,919:INFO:            pmdarima: 2.0.3
2023-03-21 14:32:57,919:INFO:              psutil: 5.9.4
2023-03-21 14:32:57,919:INFO:PyCaret optional dependencies:
2023-03-21 14:32:57,940:INFO:                shap: Not installed
2023-03-21 14:32:57,940:INFO:           interpret: Not installed
2023-03-21 14:32:57,940:INFO:                umap: Not installed
2023-03-21 14:32:57,940:INFO:    pandas_profiling: Not installed
2023-03-21 14:32:57,940:INFO:  explainerdashboard: Not installed
2023-03-21 14:32:57,941:INFO:             autoviz: Not installed
2023-03-21 14:32:57,941:INFO:           fairlearn: Not installed
2023-03-21 14:32:57,941:INFO:             xgboost: Not installed
2023-03-21 14:32:57,941:INFO:            catboost: 1.1.1
2023-03-21 14:32:57,941:INFO:              kmodes: Not installed
2023-03-21 14:32:57,941:INFO:             mlxtend: Not installed
2023-03-21 14:32:57,941:INFO:       statsforecast: Not installed
2023-03-21 14:32:57,941:INFO:        tune_sklearn: Not installed
2023-03-21 14:32:57,941:INFO:                 ray: Not installed
2023-03-21 14:32:57,941:INFO:            hyperopt: Not installed
2023-03-21 14:32:57,941:INFO:              optuna: Not installed
2023-03-21 14:32:57,941:INFO:               skopt: Not installed
2023-03-21 14:32:57,941:INFO:              mlflow: Not installed
2023-03-21 14:32:57,941:INFO:              gradio: Not installed
2023-03-21 14:32:57,941:INFO:             fastapi: Not installed
2023-03-21 14:32:57,941:INFO:             uvicorn: 0.13.1
2023-03-21 14:32:57,941:INFO:              m2cgen: Not installed
2023-03-21 14:32:57,941:INFO:           evidently: Not installed
2023-03-21 14:32:57,941:INFO:               fugue: Not installed
2023-03-21 14:32:57,941:INFO:           streamlit: 1.20.0
2023-03-21 14:32:57,941:INFO:             prophet: Not installed
2023-03-21 14:32:57,941:INFO:None
2023-03-21 14:32:57,941:INFO:Set up data.
2023-03-21 14:32:57,989:INFO:Set up train/test split.
2023-03-21 14:32:58,007:INFO:Set up index.
2023-03-21 14:32:58,007:INFO:Set up folding strategy.
2023-03-21 14:32:58,008:INFO:Assigning column types.
2023-03-21 14:32:58,018:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-21 14:32:58,018:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,024:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,031:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,142:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:58,284:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:58,444:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,454:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,461:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,543:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:58,602:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:58,603:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-03-21 14:32:58,608:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,613:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,703:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,780:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:58,782:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:58,793:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,804:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:32:58,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:59,009:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:59,010:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-03-21 14:32:59,024:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:59,184:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:59,203:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:59,462:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:59,463:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-03-21 14:32:59,624:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:59,691:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:59,806:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:32:59,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:32:59,867:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:32:59,867:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-21 14:32:59,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:33:00,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:33:00,016:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:33:00,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:33:00,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:33:00,159:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:33:00,160:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-03-21 14:33:00,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:33:00,289:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:33:00,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:33:00,428:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:33:00,433:INFO:Preparing preprocessing pipeline...
2023-03-21 14:33:00,433:INFO:Set up simple imputation.
2023-03-21 14:33:00,444:INFO:Set up encoding of categorical features.
2023-03-21 14:33:00,444:INFO:Set up feature normalization.
2023-03-21 14:33:00,726:INFO:Finished creating preprocessing pipeline.
2023-03-21 14:33:00,736:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-03-21 14:33:00,737:INFO:Creating final display dataframe.
2023-03-21 14:33:01,235:INFO:Setup _display_container:                     Description             Value
0                    Session id               357
1                        Target             price
2                   Target type        Regression
3           Original data shape       (53943, 10)
4        Transformed data shape       (53943, 27)
5   Transformed train set shape       (37760, 27)
6    Transformed test set shape       (16183, 27)
7              Numeric features                 6
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              a723
2023-03-21 14:33:01,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:33:01,407:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:33:01,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:33:01,569:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:33:01,570:INFO:setup() successfully completed in 3.88s...............
2023-03-21 14:33:01,678:INFO:Initializing compare_models()
2023-03-21 14:33:01,678:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-03-21 14:33:01,678:INFO:Checking exceptions
2023-03-21 14:33:01,687:INFO:Preparing display monitor
2023-03-21 14:33:01,734:INFO:Initializing Linear Regression
2023-03-21 14:33:01,734:INFO:Total runtime is 0.0 minutes
2023-03-21 14:33:01,740:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:01,741:INFO:Initializing create_model()
2023-03-21 14:33:01,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:01,741:INFO:Checking exceptions
2023-03-21 14:33:01,741:INFO:Importing libraries
2023-03-21 14:33:01,741:INFO:Copying training dataset
2023-03-21 14:33:01,766:INFO:Defining folds
2023-03-21 14:33:01,766:INFO:Declaring metric variables
2023-03-21 14:33:01,770:INFO:Importing untrained model
2023-03-21 14:33:01,775:INFO:Linear Regression Imported successfully
2023-03-21 14:33:01,787:INFO:Starting cross validation
2023-03-21 14:33:01,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:14,957:INFO:Calculating mean and std
2023-03-21 14:33:14,958:INFO:Creating metrics dataframe
2023-03-21 14:33:15,163:INFO:Uploading results into container
2023-03-21 14:33:15,166:INFO:Uploading model into container now
2023-03-21 14:33:15,167:INFO:_master_model_container: 1
2023-03-21 14:33:15,167:INFO:_display_container: 2
2023-03-21 14:33:15,168:INFO:LinearRegression(n_jobs=-1)
2023-03-21 14:33:15,168:INFO:create_model() successfully completed......................................
2023-03-21 14:33:15,273:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:15,273:INFO:Creating metrics dataframe
2023-03-21 14:33:15,280:INFO:Initializing Lasso Regression
2023-03-21 14:33:15,281:INFO:Total runtime is 0.22578502496083577 minutes
2023-03-21 14:33:15,285:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:15,286:INFO:Initializing create_model()
2023-03-21 14:33:15,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:15,286:INFO:Checking exceptions
2023-03-21 14:33:15,286:INFO:Importing libraries
2023-03-21 14:33:15,286:INFO:Copying training dataset
2023-03-21 14:33:15,302:INFO:Defining folds
2023-03-21 14:33:15,302:INFO:Declaring metric variables
2023-03-21 14:33:15,307:INFO:Importing untrained model
2023-03-21 14:33:15,311:INFO:Lasso Regression Imported successfully
2023-03-21 14:33:15,321:INFO:Starting cross validation
2023-03-21 14:33:15,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:20,105:INFO:Calculating mean and std
2023-03-21 14:33:20,107:INFO:Creating metrics dataframe
2023-03-21 14:33:20,339:INFO:Uploading results into container
2023-03-21 14:33:20,340:INFO:Uploading model into container now
2023-03-21 14:33:20,340:INFO:_master_model_container: 2
2023-03-21 14:33:20,342:INFO:_display_container: 2
2023-03-21 14:33:20,342:INFO:Lasso(random_state=357)
2023-03-21 14:33:20,342:INFO:create_model() successfully completed......................................
2023-03-21 14:33:20,440:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:20,440:INFO:Creating metrics dataframe
2023-03-21 14:33:20,451:INFO:Initializing Ridge Regression
2023-03-21 14:33:20,451:INFO:Total runtime is 0.31196187337239584 minutes
2023-03-21 14:33:20,455:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:20,456:INFO:Initializing create_model()
2023-03-21 14:33:20,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:20,456:INFO:Checking exceptions
2023-03-21 14:33:20,456:INFO:Importing libraries
2023-03-21 14:33:20,456:INFO:Copying training dataset
2023-03-21 14:33:20,471:INFO:Defining folds
2023-03-21 14:33:20,471:INFO:Declaring metric variables
2023-03-21 14:33:20,476:INFO:Importing untrained model
2023-03-21 14:33:20,481:INFO:Ridge Regression Imported successfully
2023-03-21 14:33:20,494:INFO:Starting cross validation
2023-03-21 14:33:20,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:23,519:INFO:Calculating mean and std
2023-03-21 14:33:23,521:INFO:Creating metrics dataframe
2023-03-21 14:33:23,765:INFO:Uploading results into container
2023-03-21 14:33:23,766:INFO:Uploading model into container now
2023-03-21 14:33:23,767:INFO:_master_model_container: 3
2023-03-21 14:33:23,767:INFO:_display_container: 2
2023-03-21 14:33:23,767:INFO:Ridge(random_state=357)
2023-03-21 14:33:23,768:INFO:create_model() successfully completed......................................
2023-03-21 14:33:23,896:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:23,896:INFO:Creating metrics dataframe
2023-03-21 14:33:23,911:INFO:Initializing Elastic Net
2023-03-21 14:33:23,912:INFO:Total runtime is 0.3696462670962016 minutes
2023-03-21 14:33:23,917:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:23,918:INFO:Initializing create_model()
2023-03-21 14:33:23,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:23,918:INFO:Checking exceptions
2023-03-21 14:33:23,918:INFO:Importing libraries
2023-03-21 14:33:23,918:INFO:Copying training dataset
2023-03-21 14:33:23,946:INFO:Defining folds
2023-03-21 14:33:23,946:INFO:Declaring metric variables
2023-03-21 14:33:23,951:INFO:Importing untrained model
2023-03-21 14:33:23,961:INFO:Elastic Net Imported successfully
2023-03-21 14:33:23,972:INFO:Starting cross validation
2023-03-21 14:33:23,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:27,239:INFO:Calculating mean and std
2023-03-21 14:33:27,241:INFO:Creating metrics dataframe
2023-03-21 14:33:27,504:INFO:Uploading results into container
2023-03-21 14:33:27,505:INFO:Uploading model into container now
2023-03-21 14:33:27,506:INFO:_master_model_container: 4
2023-03-21 14:33:27,506:INFO:_display_container: 2
2023-03-21 14:33:27,507:INFO:ElasticNet(random_state=357)
2023-03-21 14:33:27,507:INFO:create_model() successfully completed......................................
2023-03-21 14:33:27,616:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:27,616:INFO:Creating metrics dataframe
2023-03-21 14:33:27,627:INFO:Initializing Least Angle Regression
2023-03-21 14:33:27,627:INFO:Total runtime is 0.43155254125595094 minutes
2023-03-21 14:33:27,631:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:27,631:INFO:Initializing create_model()
2023-03-21 14:33:27,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:27,632:INFO:Checking exceptions
2023-03-21 14:33:27,632:INFO:Importing libraries
2023-03-21 14:33:27,632:INFO:Copying training dataset
2023-03-21 14:33:27,645:INFO:Defining folds
2023-03-21 14:33:27,645:INFO:Declaring metric variables
2023-03-21 14:33:27,648:INFO:Importing untrained model
2023-03-21 14:33:27,656:INFO:Least Angle Regression Imported successfully
2023-03-21 14:33:27,665:INFO:Starting cross validation
2023-03-21 14:33:27,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:30,504:INFO:Calculating mean and std
2023-03-21 14:33:30,507:INFO:Creating metrics dataframe
2023-03-21 14:33:30,758:INFO:Uploading results into container
2023-03-21 14:33:30,759:INFO:Uploading model into container now
2023-03-21 14:33:30,759:INFO:_master_model_container: 5
2023-03-21 14:33:30,760:INFO:_display_container: 2
2023-03-21 14:33:30,760:INFO:Lars(random_state=357)
2023-03-21 14:33:30,760:INFO:create_model() successfully completed......................................
2023-03-21 14:33:30,850:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:30,850:INFO:Creating metrics dataframe
2023-03-21 14:33:30,860:INFO:Initializing Lasso Least Angle Regression
2023-03-21 14:33:30,860:INFO:Total runtime is 0.48543421824773153 minutes
2023-03-21 14:33:30,863:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:30,864:INFO:Initializing create_model()
2023-03-21 14:33:30,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:30,864:INFO:Checking exceptions
2023-03-21 14:33:30,864:INFO:Importing libraries
2023-03-21 14:33:30,864:INFO:Copying training dataset
2023-03-21 14:33:30,880:INFO:Defining folds
2023-03-21 14:33:30,880:INFO:Declaring metric variables
2023-03-21 14:33:30,885:INFO:Importing untrained model
2023-03-21 14:33:30,890:INFO:Lasso Least Angle Regression Imported successfully
2023-03-21 14:33:30,901:INFO:Starting cross validation
2023-03-21 14:33:30,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:34,220:INFO:Calculating mean and std
2023-03-21 14:33:34,223:INFO:Creating metrics dataframe
2023-03-21 14:33:34,517:INFO:Uploading results into container
2023-03-21 14:33:34,518:INFO:Uploading model into container now
2023-03-21 14:33:34,519:INFO:_master_model_container: 6
2023-03-21 14:33:34,519:INFO:_display_container: 2
2023-03-21 14:33:34,520:INFO:LassoLars(random_state=357)
2023-03-21 14:33:34,520:INFO:create_model() successfully completed......................................
2023-03-21 14:33:34,615:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:34,615:INFO:Creating metrics dataframe
2023-03-21 14:33:34,631:INFO:Initializing Orthogonal Matching Pursuit
2023-03-21 14:33:34,631:INFO:Total runtime is 0.5482961893081665 minutes
2023-03-21 14:33:34,635:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:34,636:INFO:Initializing create_model()
2023-03-21 14:33:34,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:34,636:INFO:Checking exceptions
2023-03-21 14:33:34,636:INFO:Importing libraries
2023-03-21 14:33:34,636:INFO:Copying training dataset
2023-03-21 14:33:34,650:INFO:Defining folds
2023-03-21 14:33:34,650:INFO:Declaring metric variables
2023-03-21 14:33:34,655:INFO:Importing untrained model
2023-03-21 14:33:34,660:INFO:Orthogonal Matching Pursuit Imported successfully
2023-03-21 14:33:34,672:INFO:Starting cross validation
2023-03-21 14:33:34,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:37,279:INFO:Calculating mean and std
2023-03-21 14:33:37,280:INFO:Creating metrics dataframe
2023-03-21 14:33:37,529:INFO:Uploading results into container
2023-03-21 14:33:37,531:INFO:Uploading model into container now
2023-03-21 14:33:37,532:INFO:_master_model_container: 7
2023-03-21 14:33:37,532:INFO:_display_container: 2
2023-03-21 14:33:37,532:INFO:OrthogonalMatchingPursuit()
2023-03-21 14:33:37,532:INFO:create_model() successfully completed......................................
2023-03-21 14:33:37,632:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:37,633:INFO:Creating metrics dataframe
2023-03-21 14:33:37,644:INFO:Initializing Bayesian Ridge
2023-03-21 14:33:37,644:INFO:Total runtime is 0.598513642946879 minutes
2023-03-21 14:33:37,648:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:37,649:INFO:Initializing create_model()
2023-03-21 14:33:37,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:37,649:INFO:Checking exceptions
2023-03-21 14:33:37,649:INFO:Importing libraries
2023-03-21 14:33:37,650:INFO:Copying training dataset
2023-03-21 14:33:37,662:INFO:Defining folds
2023-03-21 14:33:37,664:INFO:Declaring metric variables
2023-03-21 14:33:37,669:INFO:Importing untrained model
2023-03-21 14:33:37,674:INFO:Bayesian Ridge Imported successfully
2023-03-21 14:33:37,685:INFO:Starting cross validation
2023-03-21 14:33:37,687:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:41,043:INFO:Calculating mean and std
2023-03-21 14:33:41,044:INFO:Creating metrics dataframe
2023-03-21 14:33:41,304:INFO:Uploading results into container
2023-03-21 14:33:41,308:INFO:Uploading model into container now
2023-03-21 14:33:41,309:INFO:_master_model_container: 8
2023-03-21 14:33:41,309:INFO:_display_container: 2
2023-03-21 14:33:41,309:INFO:BayesianRidge()
2023-03-21 14:33:41,309:INFO:create_model() successfully completed......................................
2023-03-21 14:33:41,416:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:41,416:INFO:Creating metrics dataframe
2023-03-21 14:33:41,431:INFO:Initializing Passive Aggressive Regressor
2023-03-21 14:33:41,431:INFO:Total runtime is 0.6616212805112203 minutes
2023-03-21 14:33:41,435:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:41,435:INFO:Initializing create_model()
2023-03-21 14:33:41,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:41,435:INFO:Checking exceptions
2023-03-21 14:33:41,435:INFO:Importing libraries
2023-03-21 14:33:41,435:INFO:Copying training dataset
2023-03-21 14:33:41,451:INFO:Defining folds
2023-03-21 14:33:41,451:INFO:Declaring metric variables
2023-03-21 14:33:41,456:INFO:Importing untrained model
2023-03-21 14:33:41,461:INFO:Passive Aggressive Regressor Imported successfully
2023-03-21 14:33:41,473:INFO:Starting cross validation
2023-03-21 14:33:41,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:45,269:INFO:Calculating mean and std
2023-03-21 14:33:45,270:INFO:Creating metrics dataframe
2023-03-21 14:33:45,530:INFO:Uploading results into container
2023-03-21 14:33:45,531:INFO:Uploading model into container now
2023-03-21 14:33:45,532:INFO:_master_model_container: 9
2023-03-21 14:33:45,533:INFO:_display_container: 2
2023-03-21 14:33:45,533:INFO:PassiveAggressiveRegressor(random_state=357)
2023-03-21 14:33:45,533:INFO:create_model() successfully completed......................................
2023-03-21 14:33:45,644:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:45,645:INFO:Creating metrics dataframe
2023-03-21 14:33:45,661:INFO:Initializing Huber Regressor
2023-03-21 14:33:45,661:INFO:Total runtime is 0.7321301301320393 minutes
2023-03-21 14:33:45,665:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:45,666:INFO:Initializing create_model()
2023-03-21 14:33:45,666:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:45,666:INFO:Checking exceptions
2023-03-21 14:33:45,666:INFO:Importing libraries
2023-03-21 14:33:45,666:INFO:Copying training dataset
2023-03-21 14:33:45,682:INFO:Defining folds
2023-03-21 14:33:45,682:INFO:Declaring metric variables
2023-03-21 14:33:45,687:INFO:Importing untrained model
2023-03-21 14:33:45,692:INFO:Huber Regressor Imported successfully
2023-03-21 14:33:45,703:INFO:Starting cross validation
2023-03-21 14:33:45,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:52,085:INFO:Calculating mean and std
2023-03-21 14:33:52,087:INFO:Creating metrics dataframe
2023-03-21 14:33:52,450:INFO:Uploading results into container
2023-03-21 14:33:52,451:INFO:Uploading model into container now
2023-03-21 14:33:52,452:INFO:_master_model_container: 10
2023-03-21 14:33:52,452:INFO:_display_container: 2
2023-03-21 14:33:52,453:INFO:HuberRegressor()
2023-03-21 14:33:52,453:INFO:create_model() successfully completed......................................
2023-03-21 14:33:52,591:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:52,592:INFO:Creating metrics dataframe
2023-03-21 14:33:52,609:INFO:Initializing K Neighbors Regressor
2023-03-21 14:33:52,609:INFO:Total runtime is 0.847927967707316 minutes
2023-03-21 14:33:52,618:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:52,619:INFO:Initializing create_model()
2023-03-21 14:33:52,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:52,619:INFO:Checking exceptions
2023-03-21 14:33:52,619:INFO:Importing libraries
2023-03-21 14:33:52,619:INFO:Copying training dataset
2023-03-21 14:33:52,642:INFO:Defining folds
2023-03-21 14:33:52,643:INFO:Declaring metric variables
2023-03-21 14:33:52,649:INFO:Importing untrained model
2023-03-21 14:33:52,655:INFO:K Neighbors Regressor Imported successfully
2023-03-21 14:33:52,665:INFO:Starting cross validation
2023-03-21 14:33:52,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:33:58,533:INFO:Calculating mean and std
2023-03-21 14:33:58,534:INFO:Creating metrics dataframe
2023-03-21 14:33:58,846:INFO:Uploading results into container
2023-03-21 14:33:58,846:INFO:Uploading model into container now
2023-03-21 14:33:58,847:INFO:_master_model_container: 11
2023-03-21 14:33:58,847:INFO:_display_container: 2
2023-03-21 14:33:58,848:INFO:KNeighborsRegressor(n_jobs=-1)
2023-03-21 14:33:58,848:INFO:create_model() successfully completed......................................
2023-03-21 14:33:58,951:INFO:SubProcess create_model() end ==================================
2023-03-21 14:33:58,951:INFO:Creating metrics dataframe
2023-03-21 14:33:58,968:INFO:Initializing Decision Tree Regressor
2023-03-21 14:33:58,968:INFO:Total runtime is 0.953904664516449 minutes
2023-03-21 14:33:58,975:INFO:SubProcess create_model() called ==================================
2023-03-21 14:33:58,976:INFO:Initializing create_model()
2023-03-21 14:33:58,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:33:58,976:INFO:Checking exceptions
2023-03-21 14:33:58,976:INFO:Importing libraries
2023-03-21 14:33:58,976:INFO:Copying training dataset
2023-03-21 14:33:58,993:INFO:Defining folds
2023-03-21 14:33:58,993:INFO:Declaring metric variables
2023-03-21 14:33:58,999:INFO:Importing untrained model
2023-03-21 14:33:59,005:INFO:Decision Tree Regressor Imported successfully
2023-03-21 14:33:59,016:INFO:Starting cross validation
2023-03-21 14:33:59,018:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:34:03,279:INFO:Calculating mean and std
2023-03-21 14:34:03,281:INFO:Creating metrics dataframe
2023-03-21 14:34:03,607:INFO:Uploading results into container
2023-03-21 14:34:03,610:INFO:Uploading model into container now
2023-03-21 14:34:03,610:INFO:_master_model_container: 12
2023-03-21 14:34:03,610:INFO:_display_container: 2
2023-03-21 14:34:03,611:INFO:DecisionTreeRegressor(random_state=357)
2023-03-21 14:34:03,611:INFO:create_model() successfully completed......................................
2023-03-21 14:34:03,712:INFO:SubProcess create_model() end ==================================
2023-03-21 14:34:03,712:INFO:Creating metrics dataframe
2023-03-21 14:34:03,725:INFO:Initializing Random Forest Regressor
2023-03-21 14:34:03,725:INFO:Total runtime is 1.0331841309865315 minutes
2023-03-21 14:34:03,729:INFO:SubProcess create_model() called ==================================
2023-03-21 14:34:03,730:INFO:Initializing create_model()
2023-03-21 14:34:03,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:34:03,730:INFO:Checking exceptions
2023-03-21 14:34:03,730:INFO:Importing libraries
2023-03-21 14:34:03,730:INFO:Copying training dataset
2023-03-21 14:34:03,743:INFO:Defining folds
2023-03-21 14:34:03,743:INFO:Declaring metric variables
2023-03-21 14:34:03,749:INFO:Importing untrained model
2023-03-21 14:34:03,754:INFO:Random Forest Regressor Imported successfully
2023-03-21 14:34:03,763:INFO:Starting cross validation
2023-03-21 14:34:03,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:35:01,128:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:35:01,266:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:35:19,919:INFO:Calculating mean and std
2023-03-21 14:35:19,965:INFO:Creating metrics dataframe
2023-03-21 14:35:20,625:INFO:Uploading results into container
2023-03-21 14:35:20,629:INFO:Uploading model into container now
2023-03-21 14:35:20,638:INFO:_master_model_container: 13
2023-03-21 14:35:20,638:INFO:_display_container: 2
2023-03-21 14:35:20,646:INFO:RandomForestRegressor(n_jobs=-1, random_state=357)
2023-03-21 14:35:20,646:INFO:create_model() successfully completed......................................
2023-03-21 14:35:21,343:INFO:SubProcess create_model() end ==================================
2023-03-21 14:35:21,343:INFO:Creating metrics dataframe
2023-03-21 14:35:21,383:INFO:Initializing Extra Trees Regressor
2023-03-21 14:35:21,385:INFO:Total runtime is 2.327519122759501 minutes
2023-03-21 14:35:21,394:INFO:SubProcess create_model() called ==================================
2023-03-21 14:35:21,394:INFO:Initializing create_model()
2023-03-21 14:35:21,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000016232EB6BE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016233ED2700>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:35:21,397:INFO:Checking exceptions
2023-03-21 14:35:21,397:INFO:Importing libraries
2023-03-21 14:35:21,398:INFO:Copying training dataset
2023-03-21 14:35:21,455:INFO:Defining folds
2023-03-21 14:35:21,455:INFO:Declaring metric variables
2023-03-21 14:35:21,469:INFO:Importing untrained model
2023-03-21 14:35:21,477:INFO:Extra Trees Regressor Imported successfully
2023-03-21 14:35:21,492:INFO:Starting cross validation
2023-03-21 14:35:21,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:36:18,183:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:18,564:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:18,534:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.37s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:18,850:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 2.15s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:19,183:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 3.46s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:21,066:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.39s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:21,287:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:36:21,422:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:37:55,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:37:55,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:37:55,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:37:55,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:37:56,032:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-21 14:37:56,335:INFO:PyCaret RegressionExperiment
2023-03-21 14:37:56,335:INFO:Logging name: reg-default-name
2023-03-21 14:37:56,336:INFO:ML Usecase: MLUsecase.REGRESSION
2023-03-21 14:37:56,336:INFO:version 3.0.0
2023-03-21 14:37:56,336:INFO:Initializing setup()
2023-03-21 14:37:56,336:INFO:self.USI: 525b
2023-03-21 14:37:56,336:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'transform_target_param', 'idx', 'n_jobs_param', 'exp_id', 'gpu_param', 'y_test', 'exp_name_log', 'logging_param', '_ml_usecase', 'y_train', 'gpu_n_jobs_param', 'X_train', 'USI', 'seed', '_available_plots', 'X', 'data', 'X_test', 'y', 'pipeline', 'fold_groups_param', 'fold_shuffle_param', 'memory', 'html_param', 'fold_generator'}
2023-03-21 14:37:56,336:INFO:Checking environment
2023-03-21 14:37:56,336:INFO:python_version: 3.9.13
2023-03-21 14:37:56,336:INFO:python_build: ('tags/v3.9.13:6de2ca5', 'May 17 2022 16:36:42')
2023-03-21 14:37:56,336:INFO:machine: AMD64
2023-03-21 14:37:56,336:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-21 14:37:56,342:INFO:Memory: svmem(total=8215101440, available=1116880896, percent=86.4, used=7098220544, free=1116880896)
2023-03-21 14:37:56,343:INFO:Physical Core: 4
2023-03-21 14:37:56,343:INFO:Logical Core: 8
2023-03-21 14:37:56,343:INFO:Checking libraries
2023-03-21 14:37:56,343:INFO:System:
2023-03-21 14:37:56,343:INFO:    python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
2023-03-21 14:37:56,344:INFO:executable: C:\Users\demst\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe
2023-03-21 14:37:56,344:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-21 14:37:56,344:INFO:PyCaret required dependencies:
2023-03-21 14:37:56,344:INFO:                 pip: 22.0.4
2023-03-21 14:37:56,344:INFO:          setuptools: 58.1.0
2023-03-21 14:37:56,344:INFO:             pycaret: 3.0.0
2023-03-21 14:37:56,344:INFO:             IPython: 8.10.0
2023-03-21 14:37:56,344:INFO:          ipywidgets: 8.0.4
2023-03-21 14:37:56,344:INFO:                tqdm: 4.65.0
2023-03-21 14:37:56,344:INFO:               numpy: 1.23.5
2023-03-21 14:37:56,344:INFO:              pandas: 1.5.3
2023-03-21 14:37:56,344:INFO:              jinja2: 3.1.2
2023-03-21 14:37:56,344:INFO:               scipy: 1.10.1
2023-03-21 14:37:56,345:INFO:              joblib: 1.2.0
2023-03-21 14:37:56,345:INFO:             sklearn: 1.2.2
2023-03-21 14:37:56,345:INFO:                pyod: 1.0.9
2023-03-21 14:37:56,345:INFO:            imblearn: 0.10.1
2023-03-21 14:37:56,345:INFO:   category_encoders: 2.6.0
2023-03-21 14:37:56,345:INFO:            lightgbm: 3.3.5
2023-03-21 14:37:56,345:INFO:               numba: 0.56.4
2023-03-21 14:37:56,345:INFO:            requests: 2.28.2
2023-03-21 14:37:56,345:INFO:          matplotlib: 3.7.1
2023-03-21 14:37:56,345:INFO:          scikitplot: 0.3.7
2023-03-21 14:37:56,345:INFO:         yellowbrick: 1.5
2023-03-21 14:37:56,345:INFO:              plotly: 5.13.1
2023-03-21 14:37:56,345:INFO:             kaleido: 0.2.1
2023-03-21 14:37:56,345:INFO:         statsmodels: 0.13.5
2023-03-21 14:37:56,345:INFO:              sktime: 0.16.1
2023-03-21 14:37:56,345:INFO:               tbats: 1.1.2
2023-03-21 14:37:56,345:INFO:            pmdarima: 2.0.3
2023-03-21 14:37:56,345:INFO:              psutil: 5.9.4
2023-03-21 14:37:56,345:INFO:PyCaret optional dependencies:
2023-03-21 14:37:56,365:INFO:                shap: Not installed
2023-03-21 14:37:56,366:INFO:           interpret: Not installed
2023-03-21 14:37:56,366:INFO:                umap: Not installed
2023-03-21 14:37:56,366:INFO:    pandas_profiling: Not installed
2023-03-21 14:37:56,366:INFO:  explainerdashboard: Not installed
2023-03-21 14:37:56,366:INFO:             autoviz: Not installed
2023-03-21 14:37:56,366:INFO:           fairlearn: Not installed
2023-03-21 14:37:56,366:INFO:             xgboost: Not installed
2023-03-21 14:37:56,366:INFO:            catboost: 1.1.1
2023-03-21 14:37:56,366:INFO:              kmodes: Not installed
2023-03-21 14:37:56,366:INFO:             mlxtend: Not installed
2023-03-21 14:37:56,366:INFO:       statsforecast: Not installed
2023-03-21 14:37:56,366:INFO:        tune_sklearn: Not installed
2023-03-21 14:37:56,366:INFO:                 ray: Not installed
2023-03-21 14:37:56,366:INFO:            hyperopt: Not installed
2023-03-21 14:37:56,366:INFO:              optuna: Not installed
2023-03-21 14:37:56,366:INFO:               skopt: Not installed
2023-03-21 14:37:56,367:INFO:              mlflow: Not installed
2023-03-21 14:37:56,367:INFO:              gradio: Not installed
2023-03-21 14:37:56,367:INFO:             fastapi: Not installed
2023-03-21 14:37:56,367:INFO:             uvicorn: 0.13.1
2023-03-21 14:37:56,367:INFO:              m2cgen: Not installed
2023-03-21 14:37:56,367:INFO:           evidently: Not installed
2023-03-21 14:37:56,367:INFO:               fugue: Not installed
2023-03-21 14:37:56,367:INFO:           streamlit: 1.20.0
2023-03-21 14:37:56,367:INFO:             prophet: Not installed
2023-03-21 14:37:56,367:INFO:None
2023-03-21 14:37:56,367:INFO:Set up data.
2023-03-21 14:37:56,377:INFO:Set up train/test split.
2023-03-21 14:37:56,382:INFO:Set up index.
2023-03-21 14:37:56,383:INFO:Set up folding strategy.
2023-03-21 14:37:56,383:INFO:Assigning column types.
2023-03-21 14:37:56,388:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-21 14:37:56,388:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,393:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,397:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,463:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:56,577:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:56,699:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,705:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,711:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,788:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,829:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:56,830:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:56,830:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-03-21 14:37:56,835:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,840:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:56,956:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:56,961:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:37:56,969:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,043:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,097:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,098:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,098:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-03-21 14:37:57,110:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,244:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,263:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,417:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,463:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,463:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-03-21 14:37:57,538:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,601:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,715:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,715:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,716:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-21 14:37:57,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,835:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,922:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:37:57,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:57,982:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:57,982:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-03-21 14:37:58,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:58,110:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:58,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:58,217:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:58,219:INFO:Preparing preprocessing pipeline...
2023-03-21 14:37:58,219:INFO:Set up simple imputation.
2023-03-21 14:37:58,225:INFO:Set up encoding of categorical features.
2023-03-21 14:37:58,225:INFO:Set up feature normalization.
2023-03-21 14:37:58,325:INFO:Finished creating preprocessing pipeline.
2023-03-21 14:37:58,334:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-03-21 14:37:58,334:INFO:Creating final display dataframe.
2023-03-21 14:37:58,545:INFO:Setup _display_container:                     Description             Value
0                    Session id               357
1                        Target             price
2                   Target type        Regression
3           Original data shape        (6101, 10)
4        Transformed data shape        (6101, 27)
5   Transformed train set shape        (4270, 27)
6    Transformed test set shape        (1831, 27)
7              Numeric features                 6
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              525b
2023-03-21 14:37:58,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:58,670:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:58,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:37:58,777:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:37:58,778:INFO:setup() successfully completed in 2.57s...............
2023-03-21 14:37:58,830:INFO:Initializing compare_models()
2023-03-21 14:37:58,830:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-03-21 14:37:58,831:INFO:Checking exceptions
2023-03-21 14:37:58,834:INFO:Preparing display monitor
2023-03-21 14:37:58,867:INFO:Initializing Linear Regression
2023-03-21 14:37:58,869:INFO:Total runtime is 2.3337205251057944e-05 minutes
2023-03-21 14:37:58,873:INFO:SubProcess create_model() called ==================================
2023-03-21 14:37:58,873:INFO:Initializing create_model()
2023-03-21 14:37:58,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:37:58,873:INFO:Checking exceptions
2023-03-21 14:37:58,873:INFO:Importing libraries
2023-03-21 14:37:58,873:INFO:Copying training dataset
2023-03-21 14:37:58,881:INFO:Defining folds
2023-03-21 14:37:58,881:INFO:Declaring metric variables
2023-03-21 14:37:58,885:INFO:Importing untrained model
2023-03-21 14:37:58,890:INFO:Linear Regression Imported successfully
2023-03-21 14:37:58,897:INFO:Starting cross validation
2023-03-21 14:37:58,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:06,671:INFO:Calculating mean and std
2023-03-21 14:38:06,672:INFO:Creating metrics dataframe
2023-03-21 14:38:07,027:INFO:Uploading results into container
2023-03-21 14:38:07,029:INFO:Uploading model into container now
2023-03-21 14:38:07,029:INFO:_master_model_container: 1
2023-03-21 14:38:07,029:INFO:_display_container: 2
2023-03-21 14:38:07,030:INFO:LinearRegression(n_jobs=-1)
2023-03-21 14:38:07,030:INFO:create_model() successfully completed......................................
2023-03-21 14:38:07,158:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:07,159:INFO:Creating metrics dataframe
2023-03-21 14:38:07,171:INFO:Initializing Lasso Regression
2023-03-21 14:38:07,171:INFO:Total runtime is 0.13839345773061115 minutes
2023-03-21 14:38:07,177:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:07,178:INFO:Initializing create_model()
2023-03-21 14:38:07,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:07,178:INFO:Checking exceptions
2023-03-21 14:38:07,178:INFO:Importing libraries
2023-03-21 14:38:07,178:INFO:Copying training dataset
2023-03-21 14:38:07,184:INFO:Defining folds
2023-03-21 14:38:07,184:INFO:Declaring metric variables
2023-03-21 14:38:07,189:INFO:Importing untrained model
2023-03-21 14:38:07,195:INFO:Lasso Regression Imported successfully
2023-03-21 14:38:07,209:INFO:Starting cross validation
2023-03-21 14:38:07,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:10,024:INFO:Calculating mean and std
2023-03-21 14:38:10,026:INFO:Creating metrics dataframe
2023-03-21 14:38:10,282:INFO:Uploading results into container
2023-03-21 14:38:10,283:INFO:Uploading model into container now
2023-03-21 14:38:10,283:INFO:_master_model_container: 2
2023-03-21 14:38:10,283:INFO:_display_container: 2
2023-03-21 14:38:10,283:INFO:Lasso(random_state=357)
2023-03-21 14:38:10,284:INFO:create_model() successfully completed......................................
2023-03-21 14:38:10,391:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:10,391:INFO:Creating metrics dataframe
2023-03-21 14:38:10,402:INFO:Initializing Ridge Regression
2023-03-21 14:38:10,402:INFO:Total runtime is 0.19224679470062256 minutes
2023-03-21 14:38:10,408:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:10,408:INFO:Initializing create_model()
2023-03-21 14:38:10,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:10,408:INFO:Checking exceptions
2023-03-21 14:38:10,409:INFO:Importing libraries
2023-03-21 14:38:10,409:INFO:Copying training dataset
2023-03-21 14:38:10,415:INFO:Defining folds
2023-03-21 14:38:10,415:INFO:Declaring metric variables
2023-03-21 14:38:10,420:INFO:Importing untrained model
2023-03-21 14:38:10,426:INFO:Ridge Regression Imported successfully
2023-03-21 14:38:10,439:INFO:Starting cross validation
2023-03-21 14:38:10,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:13,632:INFO:Calculating mean and std
2023-03-21 14:38:13,633:INFO:Creating metrics dataframe
2023-03-21 14:38:13,929:INFO:Uploading results into container
2023-03-21 14:38:13,930:INFO:Uploading model into container now
2023-03-21 14:38:13,930:INFO:_master_model_container: 3
2023-03-21 14:38:13,931:INFO:_display_container: 2
2023-03-21 14:38:13,931:INFO:Ridge(random_state=357)
2023-03-21 14:38:13,931:INFO:create_model() successfully completed......................................
2023-03-21 14:38:14,031:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:14,031:INFO:Creating metrics dataframe
2023-03-21 14:38:14,044:INFO:Initializing Elastic Net
2023-03-21 14:38:14,044:INFO:Total runtime is 0.25294671456019086 minutes
2023-03-21 14:38:14,048:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:14,048:INFO:Initializing create_model()
2023-03-21 14:38:14,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:14,048:INFO:Checking exceptions
2023-03-21 14:38:14,048:INFO:Importing libraries
2023-03-21 14:38:14,049:INFO:Copying training dataset
2023-03-21 14:38:14,058:INFO:Defining folds
2023-03-21 14:38:14,058:INFO:Declaring metric variables
2023-03-21 14:38:14,062:INFO:Importing untrained model
2023-03-21 14:38:14,066:INFO:Elastic Net Imported successfully
2023-03-21 14:38:14,078:INFO:Starting cross validation
2023-03-21 14:38:14,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:17,221:INFO:Calculating mean and std
2023-03-21 14:38:17,223:INFO:Creating metrics dataframe
2023-03-21 14:38:17,452:INFO:Uploading results into container
2023-03-21 14:38:17,452:INFO:Uploading model into container now
2023-03-21 14:38:17,453:INFO:_master_model_container: 4
2023-03-21 14:38:17,453:INFO:_display_container: 2
2023-03-21 14:38:17,453:INFO:ElasticNet(random_state=357)
2023-03-21 14:38:17,453:INFO:create_model() successfully completed......................................
2023-03-21 14:38:17,540:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:17,540:INFO:Creating metrics dataframe
2023-03-21 14:38:17,552:INFO:Initializing Least Angle Regression
2023-03-21 14:38:17,553:INFO:Total runtime is 0.3114224950472514 minutes
2023-03-21 14:38:17,556:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:17,557:INFO:Initializing create_model()
2023-03-21 14:38:17,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:17,557:INFO:Checking exceptions
2023-03-21 14:38:17,557:INFO:Importing libraries
2023-03-21 14:38:17,557:INFO:Copying training dataset
2023-03-21 14:38:17,564:INFO:Defining folds
2023-03-21 14:38:17,564:INFO:Declaring metric variables
2023-03-21 14:38:17,569:INFO:Importing untrained model
2023-03-21 14:38:17,575:INFO:Least Angle Regression Imported successfully
2023-03-21 14:38:17,585:INFO:Starting cross validation
2023-03-21 14:38:17,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:20,416:INFO:Calculating mean and std
2023-03-21 14:38:20,417:INFO:Creating metrics dataframe
2023-03-21 14:38:20,692:INFO:Uploading results into container
2023-03-21 14:38:20,693:INFO:Uploading model into container now
2023-03-21 14:38:20,694:INFO:_master_model_container: 5
2023-03-21 14:38:20,694:INFO:_display_container: 2
2023-03-21 14:38:20,695:INFO:Lars(random_state=357)
2023-03-21 14:38:20,696:INFO:create_model() successfully completed......................................
2023-03-21 14:38:20,797:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:20,797:INFO:Creating metrics dataframe
2023-03-21 14:38:20,818:INFO:Initializing Lasso Least Angle Regression
2023-03-21 14:38:20,818:INFO:Total runtime is 0.36585144996643065 minutes
2023-03-21 14:38:20,824:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:20,824:INFO:Initializing create_model()
2023-03-21 14:38:20,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:20,825:INFO:Checking exceptions
2023-03-21 14:38:20,825:INFO:Importing libraries
2023-03-21 14:38:20,825:INFO:Copying training dataset
2023-03-21 14:38:20,834:INFO:Defining folds
2023-03-21 14:38:20,834:INFO:Declaring metric variables
2023-03-21 14:38:20,841:INFO:Importing untrained model
2023-03-21 14:38:20,850:INFO:Lasso Least Angle Regression Imported successfully
2023-03-21 14:38:20,864:INFO:Starting cross validation
2023-03-21 14:38:20,866:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:24,272:INFO:Calculating mean and std
2023-03-21 14:38:24,275:INFO:Creating metrics dataframe
2023-03-21 14:38:24,553:INFO:Uploading results into container
2023-03-21 14:38:24,554:INFO:Uploading model into container now
2023-03-21 14:38:24,555:INFO:_master_model_container: 6
2023-03-21 14:38:24,555:INFO:_display_container: 2
2023-03-21 14:38:24,555:INFO:LassoLars(random_state=357)
2023-03-21 14:38:24,555:INFO:create_model() successfully completed......................................
2023-03-21 14:38:24,650:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:24,650:INFO:Creating metrics dataframe
2023-03-21 14:38:24,659:INFO:Initializing Orthogonal Matching Pursuit
2023-03-21 14:38:24,659:INFO:Total runtime is 0.4298632582028707 minutes
2023-03-21 14:38:24,664:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:24,665:INFO:Initializing create_model()
2023-03-21 14:38:24,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:24,665:INFO:Checking exceptions
2023-03-21 14:38:24,665:INFO:Importing libraries
2023-03-21 14:38:24,665:INFO:Copying training dataset
2023-03-21 14:38:24,672:INFO:Defining folds
2023-03-21 14:38:24,672:INFO:Declaring metric variables
2023-03-21 14:38:24,676:INFO:Importing untrained model
2023-03-21 14:38:24,681:INFO:Orthogonal Matching Pursuit Imported successfully
2023-03-21 14:38:24,692:INFO:Starting cross validation
2023-03-21 14:38:24,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:28,229:INFO:Calculating mean and std
2023-03-21 14:38:28,231:INFO:Creating metrics dataframe
2023-03-21 14:38:28,549:INFO:Uploading results into container
2023-03-21 14:38:28,550:INFO:Uploading model into container now
2023-03-21 14:38:28,551:INFO:_master_model_container: 7
2023-03-21 14:38:28,551:INFO:_display_container: 2
2023-03-21 14:38:28,552:INFO:OrthogonalMatchingPursuit()
2023-03-21 14:38:28,552:INFO:create_model() successfully completed......................................
2023-03-21 14:38:28,653:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:28,653:INFO:Creating metrics dataframe
2023-03-21 14:38:28,665:INFO:Initializing Bayesian Ridge
2023-03-21 14:38:28,666:INFO:Total runtime is 0.49664632479349774 minutes
2023-03-21 14:38:28,669:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:28,669:INFO:Initializing create_model()
2023-03-21 14:38:28,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:28,670:INFO:Checking exceptions
2023-03-21 14:38:28,670:INFO:Importing libraries
2023-03-21 14:38:28,670:INFO:Copying training dataset
2023-03-21 14:38:28,678:INFO:Defining folds
2023-03-21 14:38:28,678:INFO:Declaring metric variables
2023-03-21 14:38:28,684:INFO:Importing untrained model
2023-03-21 14:38:28,689:INFO:Bayesian Ridge Imported successfully
2023-03-21 14:38:28,700:INFO:Starting cross validation
2023-03-21 14:38:28,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:31,977:INFO:Calculating mean and std
2023-03-21 14:38:31,978:INFO:Creating metrics dataframe
2023-03-21 14:38:32,259:INFO:Uploading results into container
2023-03-21 14:38:32,260:INFO:Uploading model into container now
2023-03-21 14:38:32,260:INFO:_master_model_container: 8
2023-03-21 14:38:32,260:INFO:_display_container: 2
2023-03-21 14:38:32,261:INFO:BayesianRidge()
2023-03-21 14:38:32,261:INFO:create_model() successfully completed......................................
2023-03-21 14:38:32,357:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:32,357:INFO:Creating metrics dataframe
2023-03-21 14:38:32,369:INFO:Initializing Passive Aggressive Regressor
2023-03-21 14:38:32,370:INFO:Total runtime is 0.5583873867988587 minutes
2023-03-21 14:38:32,376:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:32,376:INFO:Initializing create_model()
2023-03-21 14:38:32,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:32,376:INFO:Checking exceptions
2023-03-21 14:38:32,377:INFO:Importing libraries
2023-03-21 14:38:32,377:INFO:Copying training dataset
2023-03-21 14:38:32,384:INFO:Defining folds
2023-03-21 14:38:32,384:INFO:Declaring metric variables
2023-03-21 14:38:32,388:INFO:Importing untrained model
2023-03-21 14:38:32,394:INFO:Passive Aggressive Regressor Imported successfully
2023-03-21 14:38:32,408:INFO:Starting cross validation
2023-03-21 14:38:32,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:36,093:INFO:Calculating mean and std
2023-03-21 14:38:36,094:INFO:Creating metrics dataframe
2023-03-21 14:38:36,383:INFO:Uploading results into container
2023-03-21 14:38:36,385:INFO:Uploading model into container now
2023-03-21 14:38:36,386:INFO:_master_model_container: 9
2023-03-21 14:38:36,386:INFO:_display_container: 2
2023-03-21 14:38:36,387:INFO:PassiveAggressiveRegressor(random_state=357)
2023-03-21 14:38:36,387:INFO:create_model() successfully completed......................................
2023-03-21 14:38:36,503:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:36,504:INFO:Creating metrics dataframe
2023-03-21 14:38:36,517:INFO:Initializing Huber Regressor
2023-03-21 14:38:36,517:INFO:Total runtime is 0.6274970650672913 minutes
2023-03-21 14:38:36,523:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:36,524:INFO:Initializing create_model()
2023-03-21 14:38:36,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:36,524:INFO:Checking exceptions
2023-03-21 14:38:36,524:INFO:Importing libraries
2023-03-21 14:38:36,524:INFO:Copying training dataset
2023-03-21 14:38:36,531:INFO:Defining folds
2023-03-21 14:38:36,532:INFO:Declaring metric variables
2023-03-21 14:38:36,538:INFO:Importing untrained model
2023-03-21 14:38:36,542:INFO:Huber Regressor Imported successfully
2023-03-21 14:38:36,554:INFO:Starting cross validation
2023-03-21 14:38:36,555:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:40,161:INFO:Calculating mean and std
2023-03-21 14:38:40,162:INFO:Creating metrics dataframe
2023-03-21 14:38:40,455:INFO:Uploading results into container
2023-03-21 14:38:40,455:INFO:Uploading model into container now
2023-03-21 14:38:40,456:INFO:_master_model_container: 10
2023-03-21 14:38:40,456:INFO:_display_container: 2
2023-03-21 14:38:40,457:INFO:HuberRegressor()
2023-03-21 14:38:40,457:INFO:create_model() successfully completed......................................
2023-03-21 14:38:40,559:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:40,559:INFO:Creating metrics dataframe
2023-03-21 14:38:40,571:INFO:Initializing K Neighbors Regressor
2023-03-21 14:38:40,571:INFO:Total runtime is 0.6950639645258586 minutes
2023-03-21 14:38:40,574:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:40,575:INFO:Initializing create_model()
2023-03-21 14:38:40,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:40,575:INFO:Checking exceptions
2023-03-21 14:38:40,575:INFO:Importing libraries
2023-03-21 14:38:40,575:INFO:Copying training dataset
2023-03-21 14:38:40,582:INFO:Defining folds
2023-03-21 14:38:40,583:INFO:Declaring metric variables
2023-03-21 14:38:40,587:INFO:Importing untrained model
2023-03-21 14:38:40,590:INFO:K Neighbors Regressor Imported successfully
2023-03-21 14:38:40,599:INFO:Starting cross validation
2023-03-21 14:38:40,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:43,681:INFO:Calculating mean and std
2023-03-21 14:38:43,683:INFO:Creating metrics dataframe
2023-03-21 14:38:43,960:INFO:Uploading results into container
2023-03-21 14:38:43,961:INFO:Uploading model into container now
2023-03-21 14:38:43,961:INFO:_master_model_container: 11
2023-03-21 14:38:43,962:INFO:_display_container: 2
2023-03-21 14:38:43,962:INFO:KNeighborsRegressor(n_jobs=-1)
2023-03-21 14:38:43,962:INFO:create_model() successfully completed......................................
2023-03-21 14:38:44,069:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:44,070:INFO:Creating metrics dataframe
2023-03-21 14:38:44,087:INFO:Initializing Decision Tree Regressor
2023-03-21 14:38:44,087:INFO:Total runtime is 0.7536551634470622 minutes
2023-03-21 14:38:44,094:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:44,095:INFO:Initializing create_model()
2023-03-21 14:38:44,095:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:44,095:INFO:Checking exceptions
2023-03-21 14:38:44,095:INFO:Importing libraries
2023-03-21 14:38:44,095:INFO:Copying training dataset
2023-03-21 14:38:44,103:INFO:Defining folds
2023-03-21 14:38:44,103:INFO:Declaring metric variables
2023-03-21 14:38:44,110:INFO:Importing untrained model
2023-03-21 14:38:44,115:INFO:Decision Tree Regressor Imported successfully
2023-03-21 14:38:44,127:INFO:Starting cross validation
2023-03-21 14:38:44,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:47,536:INFO:Calculating mean and std
2023-03-21 14:38:47,539:INFO:Creating metrics dataframe
2023-03-21 14:38:47,792:INFO:Uploading results into container
2023-03-21 14:38:47,793:INFO:Uploading model into container now
2023-03-21 14:38:47,793:INFO:_master_model_container: 12
2023-03-21 14:38:47,794:INFO:_display_container: 2
2023-03-21 14:38:47,794:INFO:DecisionTreeRegressor(random_state=357)
2023-03-21 14:38:47,794:INFO:create_model() successfully completed......................................
2023-03-21 14:38:47,890:INFO:SubProcess create_model() end ==================================
2023-03-21 14:38:47,891:INFO:Creating metrics dataframe
2023-03-21 14:38:47,906:INFO:Initializing Random Forest Regressor
2023-03-21 14:38:47,906:INFO:Total runtime is 0.8173068483670552 minutes
2023-03-21 14:38:47,911:INFO:SubProcess create_model() called ==================================
2023-03-21 14:38:47,911:INFO:Initializing create_model()
2023-03-21 14:38:47,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:38:47,912:INFO:Checking exceptions
2023-03-21 14:38:47,912:INFO:Importing libraries
2023-03-21 14:38:47,912:INFO:Copying training dataset
2023-03-21 14:38:47,919:INFO:Defining folds
2023-03-21 14:38:47,920:INFO:Declaring metric variables
2023-03-21 14:38:47,926:INFO:Importing untrained model
2023-03-21 14:38:47,931:INFO:Random Forest Regressor Imported successfully
2023-03-21 14:38:47,942:INFO:Starting cross validation
2023-03-21 14:38:47,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:38:52,678:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:38:52,725:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:38:52,914:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.42s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:38:55,003:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:38:55,492:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:38:55,496:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:38:55,501:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-21 14:39:01,176:INFO:Calculating mean and std
2023-03-21 14:39:01,179:INFO:Creating metrics dataframe
2023-03-21 14:39:01,630:INFO:Uploading results into container
2023-03-21 14:39:01,632:INFO:Uploading model into container now
2023-03-21 14:39:01,633:INFO:_master_model_container: 13
2023-03-21 14:39:01,634:INFO:_display_container: 2
2023-03-21 14:39:01,635:INFO:RandomForestRegressor(n_jobs=-1, random_state=357)
2023-03-21 14:39:01,635:INFO:create_model() successfully completed......................................
2023-03-21 14:39:01,775:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:01,775:INFO:Creating metrics dataframe
2023-03-21 14:39:01,798:INFO:Initializing Extra Trees Regressor
2023-03-21 14:39:01,798:INFO:Total runtime is 1.048847790559133 minutes
2023-03-21 14:39:01,803:INFO:SubProcess create_model() called ==================================
2023-03-21 14:39:01,804:INFO:Initializing create_model()
2023-03-21 14:39:01,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:01,804:INFO:Checking exceptions
2023-03-21 14:39:01,804:INFO:Importing libraries
2023-03-21 14:39:01,804:INFO:Copying training dataset
2023-03-21 14:39:01,814:INFO:Defining folds
2023-03-21 14:39:01,815:INFO:Declaring metric variables
2023-03-21 14:39:01,822:INFO:Importing untrained model
2023-03-21 14:39:01,829:INFO:Extra Trees Regressor Imported successfully
2023-03-21 14:39:01,842:INFO:Starting cross validation
2023-03-21 14:39:01,846:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:39:04,759:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:39:05,047:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:39:05,867:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:39:06,945:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-21 14:39:11,206:INFO:Calculating mean and std
2023-03-21 14:39:11,208:INFO:Creating metrics dataframe
2023-03-21 14:39:11,520:INFO:Uploading results into container
2023-03-21 14:39:11,522:INFO:Uploading model into container now
2023-03-21 14:39:11,523:INFO:_master_model_container: 14
2023-03-21 14:39:11,523:INFO:_display_container: 2
2023-03-21 14:39:11,523:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=357)
2023-03-21 14:39:11,524:INFO:create_model() successfully completed......................................
2023-03-21 14:39:11,642:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:11,642:INFO:Creating metrics dataframe
2023-03-21 14:39:11,659:INFO:Initializing AdaBoost Regressor
2023-03-21 14:39:11,659:INFO:Total runtime is 1.2131882945696513 minutes
2023-03-21 14:39:11,666:INFO:SubProcess create_model() called ==================================
2023-03-21 14:39:11,667:INFO:Initializing create_model()
2023-03-21 14:39:11,667:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:11,668:INFO:Checking exceptions
2023-03-21 14:39:11,668:INFO:Importing libraries
2023-03-21 14:39:11,668:INFO:Copying training dataset
2023-03-21 14:39:11,677:INFO:Defining folds
2023-03-21 14:39:11,678:INFO:Declaring metric variables
2023-03-21 14:39:11,683:INFO:Importing untrained model
2023-03-21 14:39:11,689:INFO:AdaBoost Regressor Imported successfully
2023-03-21 14:39:11,704:INFO:Starting cross validation
2023-03-21 14:39:11,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:39:15,257:INFO:Calculating mean and std
2023-03-21 14:39:15,259:INFO:Creating metrics dataframe
2023-03-21 14:39:15,609:INFO:Uploading results into container
2023-03-21 14:39:15,611:INFO:Uploading model into container now
2023-03-21 14:39:15,611:INFO:_master_model_container: 15
2023-03-21 14:39:15,612:INFO:_display_container: 2
2023-03-21 14:39:15,613:INFO:AdaBoostRegressor(random_state=357)
2023-03-21 14:39:15,613:INFO:create_model() successfully completed......................................
2023-03-21 14:39:15,719:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:15,719:INFO:Creating metrics dataframe
2023-03-21 14:39:15,739:INFO:Initializing Gradient Boosting Regressor
2023-03-21 14:39:15,739:INFO:Total runtime is 1.2811951041221619 minutes
2023-03-21 14:39:15,746:INFO:SubProcess create_model() called ==================================
2023-03-21 14:39:15,746:INFO:Initializing create_model()
2023-03-21 14:39:15,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:15,747:INFO:Checking exceptions
2023-03-21 14:39:15,747:INFO:Importing libraries
2023-03-21 14:39:15,747:INFO:Copying training dataset
2023-03-21 14:39:15,754:INFO:Defining folds
2023-03-21 14:39:15,754:INFO:Declaring metric variables
2023-03-21 14:39:15,758:INFO:Importing untrained model
2023-03-21 14:39:15,768:INFO:Gradient Boosting Regressor Imported successfully
2023-03-21 14:39:15,779:INFO:Starting cross validation
2023-03-21 14:39:15,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:39:21,129:INFO:Calculating mean and std
2023-03-21 14:39:21,130:INFO:Creating metrics dataframe
2023-03-21 14:39:21,459:INFO:Uploading results into container
2023-03-21 14:39:21,460:INFO:Uploading model into container now
2023-03-21 14:39:21,461:INFO:_master_model_container: 16
2023-03-21 14:39:21,462:INFO:_display_container: 2
2023-03-21 14:39:21,462:INFO:GradientBoostingRegressor(random_state=357)
2023-03-21 14:39:21,463:INFO:create_model() successfully completed......................................
2023-03-21 14:39:21,579:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:21,579:INFO:Creating metrics dataframe
2023-03-21 14:39:21,598:INFO:Initializing Light Gradient Boosting Machine
2023-03-21 14:39:21,598:INFO:Total runtime is 1.378845751285553 minutes
2023-03-21 14:39:21,603:INFO:SubProcess create_model() called ==================================
2023-03-21 14:39:21,603:INFO:Initializing create_model()
2023-03-21 14:39:21,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:21,605:INFO:Checking exceptions
2023-03-21 14:39:21,605:INFO:Importing libraries
2023-03-21 14:39:21,605:INFO:Copying training dataset
2023-03-21 14:39:21,616:INFO:Defining folds
2023-03-21 14:39:21,616:INFO:Declaring metric variables
2023-03-21 14:39:21,623:INFO:Importing untrained model
2023-03-21 14:39:21,629:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-21 14:39:21,640:INFO:Starting cross validation
2023-03-21 14:39:21,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:39:26,958:INFO:Calculating mean and std
2023-03-21 14:39:26,959:INFO:Creating metrics dataframe
2023-03-21 14:39:27,260:INFO:Uploading results into container
2023-03-21 14:39:27,261:INFO:Uploading model into container now
2023-03-21 14:39:27,261:INFO:_master_model_container: 17
2023-03-21 14:39:27,261:INFO:_display_container: 2
2023-03-21 14:39:27,262:INFO:LGBMRegressor(random_state=357)
2023-03-21 14:39:27,262:INFO:create_model() successfully completed......................................
2023-03-21 14:39:27,359:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:27,360:INFO:Creating metrics dataframe
2023-03-21 14:39:27,374:INFO:Initializing CatBoost Regressor
2023-03-21 14:39:27,374:INFO:Total runtime is 1.4751208384831747 minutes
2023-03-21 14:39:27,379:INFO:SubProcess create_model() called ==================================
2023-03-21 14:39:27,380:INFO:Initializing create_model()
2023-03-21 14:39:27,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:27,380:INFO:Checking exceptions
2023-03-21 14:39:27,380:INFO:Importing libraries
2023-03-21 14:39:27,380:INFO:Copying training dataset
2023-03-21 14:39:27,388:INFO:Defining folds
2023-03-21 14:39:27,388:INFO:Declaring metric variables
2023-03-21 14:39:27,392:INFO:Importing untrained model
2023-03-21 14:39:27,407:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:39:27,418:INFO:Starting cross validation
2023-03-21 14:39:27,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:39:49,926:INFO:Calculating mean and std
2023-03-21 14:39:49,931:INFO:Creating metrics dataframe
2023-03-21 14:39:50,403:INFO:Uploading results into container
2023-03-21 14:39:50,404:INFO:Uploading model into container now
2023-03-21 14:39:50,405:INFO:_master_model_container: 18
2023-03-21 14:39:50,405:INFO:_display_container: 2
2023-03-21 14:39:50,405:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4156802E0>
2023-03-21 14:39:50,405:INFO:create_model() successfully completed......................................
2023-03-21 14:39:50,525:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:50,525:INFO:Creating metrics dataframe
2023-03-21 14:39:50,551:INFO:Initializing Dummy Regressor
2023-03-21 14:39:50,551:INFO:Total runtime is 1.8613946517308553 minutes
2023-03-21 14:39:50,555:INFO:SubProcess create_model() called ==================================
2023-03-21 14:39:50,555:INFO:Initializing create_model()
2023-03-21 14:39:50,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E410D2ABB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:50,556:INFO:Checking exceptions
2023-03-21 14:39:50,556:INFO:Importing libraries
2023-03-21 14:39:50,556:INFO:Copying training dataset
2023-03-21 14:39:50,565:INFO:Defining folds
2023-03-21 14:39:50,566:INFO:Declaring metric variables
2023-03-21 14:39:50,571:INFO:Importing untrained model
2023-03-21 14:39:50,576:INFO:Dummy Regressor Imported successfully
2023-03-21 14:39:50,587:INFO:Starting cross validation
2023-03-21 14:39:50,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:39:54,956:INFO:Calculating mean and std
2023-03-21 14:39:54,958:INFO:Creating metrics dataframe
2023-03-21 14:39:55,385:INFO:Uploading results into container
2023-03-21 14:39:55,386:INFO:Uploading model into container now
2023-03-21 14:39:55,387:INFO:_master_model_container: 19
2023-03-21 14:39:55,387:INFO:_display_container: 2
2023-03-21 14:39:55,387:INFO:DummyRegressor()
2023-03-21 14:39:55,388:INFO:create_model() successfully completed......................................
2023-03-21 14:39:55,495:INFO:SubProcess create_model() end ==================================
2023-03-21 14:39:55,495:INFO:Creating metrics dataframe
2023-03-21 14:39:55,529:INFO:Initializing create_model()
2023-03-21 14:39:55,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E4156802E0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:39:55,530:INFO:Checking exceptions
2023-03-21 14:39:55,538:INFO:Importing libraries
2023-03-21 14:39:55,538:INFO:Copying training dataset
2023-03-21 14:39:55,546:INFO:Defining folds
2023-03-21 14:39:55,546:INFO:Declaring metric variables
2023-03-21 14:39:55,547:INFO:Importing untrained model
2023-03-21 14:39:55,547:INFO:Declaring custom model
2023-03-21 14:39:55,547:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:39:55,549:INFO:Cross validation set to False
2023-03-21 14:39:55,549:INFO:Fitting Model
2023-03-21 14:40:00,308:INFO:<catboost.core.CatBoostRegressor object at 0x000001E414DFCBB0>
2023-03-21 14:40:00,309:INFO:create_model() successfully completed......................................
2023-03-21 14:40:00,457:INFO:_master_model_container: 19
2023-03-21 14:40:00,457:INFO:_display_container: 2
2023-03-21 14:40:00,458:INFO:<catboost.core.CatBoostRegressor object at 0x000001E414DFCBB0>
2023-03-21 14:40:00,458:INFO:compare_models() successfully completed......................................
2023-03-21 14:40:00,658:INFO:Initializing create_model()
2023-03-21 14:40:00,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:40:00,659:INFO:Checking exceptions
2023-03-21 14:40:00,696:INFO:Importing libraries
2023-03-21 14:40:00,697:INFO:Copying training dataset
2023-03-21 14:40:00,710:INFO:Defining folds
2023-03-21 14:40:00,710:INFO:Declaring metric variables
2023-03-21 14:40:00,715:INFO:Importing untrained model
2023-03-21 14:40:00,726:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:40:00,745:INFO:Starting cross validation
2023-03-21 14:40:00,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:40:04,972:INFO:Calculating mean and std
2023-03-21 14:40:04,974:INFO:Creating metrics dataframe
2023-03-21 14:40:04,981:INFO:Finalizing model
2023-03-21 14:40:05,489:INFO:Uploading results into container
2023-03-21 14:40:05,490:INFO:Uploading model into container now
2023-03-21 14:40:05,503:INFO:_master_model_container: 20
2023-03-21 14:40:05,503:INFO:_display_container: 3
2023-03-21 14:40:05,503:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4154FC5B0>
2023-03-21 14:40:05,503:INFO:create_model() successfully completed......................................
2023-03-21 14:40:05,750:INFO:Initializing plot_model()
2023-03-21 14:40:05,751:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x000001E4154FC5B0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, system=True)
2023-03-21 14:40:05,751:INFO:Checking exceptions
2023-03-21 14:40:05,756:INFO:Preloading libraries
2023-03-21 14:40:05,759:INFO:Copying training dataset
2023-03-21 14:40:05,759:INFO:Plot type: residuals
2023-03-21 14:40:06,464:INFO:Fitting Model
2023-03-21 14:40:06,540:INFO:Scoring test/hold-out set
2023-03-21 14:40:07,470:INFO:Visual Rendered Successfully
2023-03-21 14:40:07,592:INFO:plot_model() successfully completed......................................
2023-03-21 14:40:07,672:INFO:Initializing tune_model()
2023-03-21 14:40:07,672:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001E4154FC5B0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>)
2023-03-21 14:40:07,672:INFO:Checking exceptions
2023-03-21 14:40:07,700:INFO:Copying training dataset
2023-03-21 14:40:07,704:INFO:Checking base model
2023-03-21 14:40:07,705:INFO:Base model : CatBoost Regressor
2023-03-21 14:40:07,708:INFO:Declaring metric variables
2023-03-21 14:40:07,715:INFO:Defining Hyperparameters
2023-03-21 14:40:07,843:INFO:Tuning with n_jobs=-1
2023-03-21 14:40:07,843:INFO:Initializing RandomizedSearchCV
2023-03-21 14:42:44,671:INFO:best_params: {'actual_estimator__random_strength': 0.1, 'actual_estimator__n_estimators': 140, 'actual_estimator__l2_leaf_reg': 9, 'actual_estimator__eta': 0.1, 'actual_estimator__depth': 11}
2023-03-21 14:42:44,673:INFO:Hyperparameter search completed
2023-03-21 14:42:44,673:INFO:SubProcess create_model() called ==================================
2023-03-21 14:42:44,673:INFO:Initializing create_model()
2023-03-21 14:42:44,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E414D82FD0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E415E3EF70>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.1, 'n_estimators': 140, 'l2_leaf_reg': 9, 'eta': 0.1, 'depth': 11})
2023-03-21 14:42:44,673:INFO:Checking exceptions
2023-03-21 14:42:44,673:INFO:Importing libraries
2023-03-21 14:42:44,674:INFO:Copying training dataset
2023-03-21 14:42:44,679:INFO:Defining folds
2023-03-21 14:42:44,679:INFO:Declaring metric variables
2023-03-21 14:42:44,685:INFO:Importing untrained model
2023-03-21 14:42:44,685:INFO:Declaring custom model
2023-03-21 14:42:44,692:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:42:44,701:INFO:Starting cross validation
2023-03-21 14:42:44,703:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:42:49,392:INFO:Calculating mean and std
2023-03-21 14:42:49,394:INFO:Creating metrics dataframe
2023-03-21 14:42:49,402:INFO:Finalizing model
2023-03-21 14:42:54,754:INFO:Uploading results into container
2023-03-21 14:42:54,756:INFO:Uploading model into container now
2023-03-21 14:42:54,757:INFO:_master_model_container: 21
2023-03-21 14:42:54,758:INFO:_display_container: 4
2023-03-21 14:42:54,758:INFO:<catboost.core.CatBoostRegressor object at 0x000001E415468DC0>
2023-03-21 14:42:54,758:INFO:create_model() successfully completed......................................
2023-03-21 14:42:54,850:INFO:SubProcess create_model() end ==================================
2023-03-21 14:42:54,850:INFO:choose_better activated
2023-03-21 14:42:54,854:INFO:SubProcess create_model() called ==================================
2023-03-21 14:42:54,854:INFO:Initializing create_model()
2023-03-21 14:42:54,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E4154FC5B0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:42:54,855:INFO:Checking exceptions
2023-03-21 14:42:54,858:INFO:Importing libraries
2023-03-21 14:42:54,858:INFO:Copying training dataset
2023-03-21 14:42:54,863:INFO:Defining folds
2023-03-21 14:42:54,863:INFO:Declaring metric variables
2023-03-21 14:42:54,863:INFO:Importing untrained model
2023-03-21 14:42:54,863:INFO:Declaring custom model
2023-03-21 14:42:54,863:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:42:54,863:INFO:Starting cross validation
2023-03-21 14:42:54,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:42:58,754:INFO:Calculating mean and std
2023-03-21 14:42:58,755:INFO:Creating metrics dataframe
2023-03-21 14:42:58,757:INFO:Finalizing model
2023-03-21 14:42:59,322:INFO:Uploading results into container
2023-03-21 14:42:59,322:INFO:Uploading model into container now
2023-03-21 14:42:59,323:INFO:_master_model_container: 22
2023-03-21 14:42:59,323:INFO:_display_container: 5
2023-03-21 14:42:59,323:INFO:<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>
2023-03-21 14:42:59,323:INFO:create_model() successfully completed......................................
2023-03-21 14:42:59,411:INFO:SubProcess create_model() end ==================================
2023-03-21 14:42:59,411:INFO:<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0> result for R2 is 0.9445
2023-03-21 14:42:59,411:INFO:<catboost.core.CatBoostRegressor object at 0x000001E415468DC0> result for R2 is 0.9425
2023-03-21 14:42:59,411:INFO:<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0> is best model
2023-03-21 14:42:59,411:INFO:choose_better completed
2023-03-21 14:42:59,412:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-21 14:42:59,423:INFO:_master_model_container: 22
2023-03-21 14:42:59,423:INFO:_display_container: 4
2023-03-21 14:42:59,423:INFO:<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>
2023-03-21 14:42:59,423:INFO:tune_model() successfully completed......................................
2023-03-21 14:42:59,832:INFO:Initializing plot_model()
2023-03-21 14:42:59,832:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, system=True)
2023-03-21 14:42:59,832:INFO:Checking exceptions
2023-03-21 14:42:59,842:INFO:Preloading libraries
2023-03-21 14:42:59,843:INFO:Copying training dataset
2023-03-21 14:42:59,843:INFO:Plot type: residuals
2023-03-21 14:43:00,129:INFO:Fitting Model
2023-03-21 14:43:00,167:INFO:Scoring test/hold-out set
2023-03-21 14:43:00,598:INFO:Visual Rendered Successfully
2023-03-21 14:43:00,696:INFO:plot_model() successfully completed......................................
2023-03-21 14:43:00,782:INFO:Initializing finalize_model()
2023-03-21 14:43:00,782:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-03-21 14:43:00,782:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>
2023-03-21 14:43:00,787:INFO:Initializing create_model()
2023-03-21 14:43:00,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E414CCA100>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-03-21 14:43:00,787:INFO:Checking exceptions
2023-03-21 14:43:00,788:INFO:Importing libraries
2023-03-21 14:43:00,788:INFO:Copying training dataset
2023-03-21 14:43:00,789:INFO:Defining folds
2023-03-21 14:43:00,789:INFO:Declaring metric variables
2023-03-21 14:43:00,789:INFO:Importing untrained model
2023-03-21 14:43:00,789:INFO:Declaring custom model
2023-03-21 14:43:00,790:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:43:00,791:INFO:Cross validation set to False
2023-03-21 14:43:00,791:INFO:Fitting Model
2023-03-21 14:43:04,320:INFO:Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E415E0E9D0>)])
2023-03-21 14:43:04,320:INFO:create_model() successfully completed......................................
2023-03-21 14:43:04,420:INFO:_master_model_container: 22
2023-03-21 14:43:04,420:INFO:_display_container: 4
2023-03-21 14:43:04,427:INFO:Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E415E0E9D0>)])
2023-03-21 14:43:04,427:INFO:finalize_model() successfully completed......................................
2023-03-21 14:43:04,624:INFO:Initializing save_model()
2023-03-21 14:43:04,624:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>, model_name=diamond_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-03-21 14:43:04,624:INFO:Adding model into prep_pipe
2023-03-21 14:43:04,647:INFO:diamond_model.pkl saved in current working directory
2023-03-21 14:43:04,655:INFO:Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001E41544D6D0>)])
2023-03-21 14:43:04,655:INFO:save_model() successfully completed......................................
2023-03-21 14:43:38,115:INFO:PyCaret RegressionExperiment
2023-03-21 14:43:38,115:INFO:Logging name: reg-default-name
2023-03-21 14:43:38,115:INFO:ML Usecase: MLUsecase.REGRESSION
2023-03-21 14:43:38,115:INFO:version 3.0.0
2023-03-21 14:43:38,116:INFO:Initializing setup()
2023-03-21 14:43:38,116:INFO:self.USI: 40d8
2023-03-21 14:43:38,116:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'transform_target_param', 'idx', 'n_jobs_param', 'exp_id', 'gpu_param', 'y_test', 'exp_name_log', 'logging_param', '_ml_usecase', 'y_train', 'gpu_n_jobs_param', 'X_train', 'USI', 'seed', '_available_plots', 'X', 'data', 'X_test', 'y', 'pipeline', 'fold_groups_param', 'fold_shuffle_param', 'memory', 'html_param', 'fold_generator'}
2023-03-21 14:43:38,116:INFO:Checking environment
2023-03-21 14:43:38,116:INFO:python_version: 3.9.13
2023-03-21 14:43:38,116:INFO:python_build: ('tags/v3.9.13:6de2ca5', 'May 17 2022 16:36:42')
2023-03-21 14:43:38,116:INFO:machine: AMD64
2023-03-21 14:43:38,116:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-21 14:43:38,121:INFO:Memory: svmem(total=8215101440, available=736854016, percent=91.0, used=7478247424, free=736854016)
2023-03-21 14:43:38,122:INFO:Physical Core: 4
2023-03-21 14:43:38,122:INFO:Logical Core: 8
2023-03-21 14:43:38,122:INFO:Checking libraries
2023-03-21 14:43:38,122:INFO:System:
2023-03-21 14:43:38,122:INFO:    python: 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]
2023-03-21 14:43:38,122:INFO:executable: C:\Users\demst\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe
2023-03-21 14:43:38,122:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-21 14:43:38,122:INFO:PyCaret required dependencies:
2023-03-21 14:43:38,122:INFO:                 pip: 22.0.4
2023-03-21 14:43:38,122:INFO:          setuptools: 58.1.0
2023-03-21 14:43:38,122:INFO:             pycaret: 3.0.0
2023-03-21 14:43:38,122:INFO:             IPython: 8.10.0
2023-03-21 14:43:38,122:INFO:          ipywidgets: 8.0.4
2023-03-21 14:43:38,123:INFO:                tqdm: 4.65.0
2023-03-21 14:43:38,123:INFO:               numpy: 1.23.5
2023-03-21 14:43:38,123:INFO:              pandas: 1.5.3
2023-03-21 14:43:38,123:INFO:              jinja2: 3.1.2
2023-03-21 14:43:38,123:INFO:               scipy: 1.10.1
2023-03-21 14:43:38,123:INFO:              joblib: 1.2.0
2023-03-21 14:43:38,123:INFO:             sklearn: 1.2.2
2023-03-21 14:43:38,123:INFO:                pyod: 1.0.9
2023-03-21 14:43:38,123:INFO:            imblearn: 0.10.1
2023-03-21 14:43:38,123:INFO:   category_encoders: 2.6.0
2023-03-21 14:43:38,123:INFO:            lightgbm: 3.3.5
2023-03-21 14:43:38,123:INFO:               numba: 0.56.4
2023-03-21 14:43:38,123:INFO:            requests: 2.28.2
2023-03-21 14:43:38,123:INFO:          matplotlib: 3.7.1
2023-03-21 14:43:38,123:INFO:          scikitplot: 0.3.7
2023-03-21 14:43:38,123:INFO:         yellowbrick: 1.5
2023-03-21 14:43:38,123:INFO:              plotly: 5.13.1
2023-03-21 14:43:38,123:INFO:             kaleido: 0.2.1
2023-03-21 14:43:38,123:INFO:         statsmodels: 0.13.5
2023-03-21 14:43:38,123:INFO:              sktime: 0.16.1
2023-03-21 14:43:38,123:INFO:               tbats: 1.1.2
2023-03-21 14:43:38,123:INFO:            pmdarima: 2.0.3
2023-03-21 14:43:38,123:INFO:              psutil: 5.9.4
2023-03-21 14:43:38,123:INFO:PyCaret optional dependencies:
2023-03-21 14:43:38,123:INFO:                shap: Not installed
2023-03-21 14:43:38,123:INFO:           interpret: Not installed
2023-03-21 14:43:38,123:INFO:                umap: Not installed
2023-03-21 14:43:38,123:INFO:    pandas_profiling: Not installed
2023-03-21 14:43:38,124:INFO:  explainerdashboard: Not installed
2023-03-21 14:43:38,124:INFO:             autoviz: Not installed
2023-03-21 14:43:38,124:INFO:           fairlearn: Not installed
2023-03-21 14:43:38,124:INFO:             xgboost: Not installed
2023-03-21 14:43:38,124:INFO:            catboost: 1.1.1
2023-03-21 14:43:38,124:INFO:              kmodes: Not installed
2023-03-21 14:43:38,124:INFO:             mlxtend: Not installed
2023-03-21 14:43:38,124:INFO:       statsforecast: Not installed
2023-03-21 14:43:38,124:INFO:        tune_sklearn: Not installed
2023-03-21 14:43:38,124:INFO:                 ray: Not installed
2023-03-21 14:43:38,124:INFO:            hyperopt: Not installed
2023-03-21 14:43:38,124:INFO:              optuna: Not installed
2023-03-21 14:43:38,124:INFO:               skopt: Not installed
2023-03-21 14:43:38,124:INFO:              mlflow: Not installed
2023-03-21 14:43:38,124:INFO:              gradio: Not installed
2023-03-21 14:43:38,124:INFO:             fastapi: Not installed
2023-03-21 14:43:38,124:INFO:             uvicorn: 0.13.1
2023-03-21 14:43:38,124:INFO:              m2cgen: Not installed
2023-03-21 14:43:38,124:INFO:           evidently: Not installed
2023-03-21 14:43:38,124:INFO:               fugue: Not installed
2023-03-21 14:43:38,124:INFO:           streamlit: 1.20.0
2023-03-21 14:43:38,124:INFO:             prophet: Not installed
2023-03-21 14:43:38,124:INFO:None
2023-03-21 14:43:38,124:INFO:Set up data.
2023-03-21 14:43:38,136:INFO:Set up train/test split.
2023-03-21 14:43:38,141:INFO:Set up index.
2023-03-21 14:43:38,141:INFO:Set up folding strategy.
2023-03-21 14:43:38,141:INFO:Assigning column types.
2023-03-21 14:43:38,145:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-21 14:43:38,146:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,152:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,156:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,218:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,268:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:38,269:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:38,270:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,276:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,284:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:38,413:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:38,414:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-03-21 14:43:38,420:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,424:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:38,565:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:38,572:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,577:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:38,688:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:38,689:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-03-21 14:43:38,697:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,824:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:38,825:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:38,838:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-21 14:43:38,955:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,004:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,005:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-03-21 14:43:39,090:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,136:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,200:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,243:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,244:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-21 14:43:39,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,357:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,424:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-21 14:43:39,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,468:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,468:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-03-21 14:43:39,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,578:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:39,692:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:39,693:INFO:Preparing preprocessing pipeline...
2023-03-21 14:43:39,693:INFO:Set up simple imputation.
2023-03-21 14:43:39,702:INFO:Set up encoding of categorical features.
2023-03-21 14:43:39,702:INFO:Set up feature normalization.
2023-03-21 14:43:39,795:INFO:Finished creating preprocessing pipeline.
2023-03-21 14:43:39,805:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-03-21 14:43:39,805:INFO:Creating final display dataframe.
2023-03-21 14:43:40,029:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             carat
2                   Target type        Regression
3           Original data shape        (6101, 10)
4        Transformed data shape        (6101, 27)
5   Transformed train set shape        (4270, 27)
6    Transformed test set shape        (1831, 27)
7              Numeric features                 6
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              40d8
2023-03-21 14:43:40,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:40,153:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:40,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-21 14:43:40,258:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-21 14:43:40,258:INFO:setup() successfully completed in 2.42s...............
2023-03-21 14:43:43,225:INFO:Initializing create_model()
2023-03-21 14:43:43,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E41544DBB0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:43:43,225:INFO:Checking exceptions
2023-03-21 14:43:43,249:INFO:Importing libraries
2023-03-21 14:43:43,249:INFO:Copying training dataset
2023-03-21 14:43:43,255:INFO:Defining folds
2023-03-21 14:43:43,255:INFO:Declaring metric variables
2023-03-21 14:43:43,260:INFO:Importing untrained model
2023-03-21 14:43:43,265:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:43:43,275:INFO:Starting cross validation
2023-03-21 14:43:43,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:44:02,614:INFO:Calculating mean and std
2023-03-21 14:44:02,616:INFO:Creating metrics dataframe
2023-03-21 14:44:02,630:INFO:Finalizing model
2023-03-21 14:44:06,850:INFO:Uploading results into container
2023-03-21 14:44:06,851:INFO:Uploading model into container now
2023-03-21 14:44:06,877:INFO:_master_model_container: 1
2023-03-21 14:44:06,878:INFO:_display_container: 2
2023-03-21 14:44:06,878:INFO:<catboost.core.CatBoostRegressor object at 0x000001E417AC0A60>
2023-03-21 14:44:06,878:INFO:create_model() successfully completed......................................
2023-03-21 14:44:07,179:INFO:Initializing tune_model()
2023-03-21 14:44:07,181:INFO:tune_model(estimator=<catboost.core.CatBoostRegressor object at 0x000001E4154FC5B0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E41544DBB0>)
2023-03-21 14:44:07,181:INFO:Checking exceptions
2023-03-21 14:44:07,219:INFO:Copying training dataset
2023-03-21 14:44:07,228:INFO:Checking base model
2023-03-21 14:44:07,228:INFO:Base model : CatBoost Regressor
2023-03-21 14:44:07,233:INFO:Declaring metric variables
2023-03-21 14:44:07,242:INFO:Defining Hyperparameters
2023-03-21 14:44:07,493:INFO:Tuning with n_jobs=-1
2023-03-21 14:44:07,493:INFO:Initializing RandomizedSearchCV
2023-03-21 14:45:13,801:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 180, 'actual_estimator__l2_leaf_reg': 30, 'actual_estimator__eta': 0.4, 'actual_estimator__depth': 8}
2023-03-21 14:45:13,802:INFO:Hyperparameter search completed
2023-03-21 14:45:13,802:INFO:SubProcess create_model() called ==================================
2023-03-21 14:45:13,803:INFO:Initializing create_model()
2023-03-21 14:45:13,803:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E41544DBB0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E415C79AF0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4158632B0>, model_only=True, return_train_score=False, kwargs={'random_strength': 0.2, 'n_estimators': 180, 'l2_leaf_reg': 30, 'eta': 0.4, 'depth': 8})
2023-03-21 14:45:13,803:INFO:Checking exceptions
2023-03-21 14:45:13,803:INFO:Importing libraries
2023-03-21 14:45:13,803:INFO:Copying training dataset
2023-03-21 14:45:13,809:INFO:Defining folds
2023-03-21 14:45:13,809:INFO:Declaring metric variables
2023-03-21 14:45:13,814:INFO:Importing untrained model
2023-03-21 14:45:13,815:INFO:Declaring custom model
2023-03-21 14:45:13,821:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:45:13,832:INFO:Starting cross validation
2023-03-21 14:45:13,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:45:17,716:INFO:Calculating mean and std
2023-03-21 14:45:17,718:INFO:Creating metrics dataframe
2023-03-21 14:45:17,725:INFO:Finalizing model
2023-03-21 14:45:19,130:INFO:Uploading results into container
2023-03-21 14:45:19,131:INFO:Uploading model into container now
2023-03-21 14:45:19,132:INFO:_master_model_container: 2
2023-03-21 14:45:19,132:INFO:_display_container: 3
2023-03-21 14:45:19,132:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4158E0D90>
2023-03-21 14:45:19,132:INFO:create_model() successfully completed......................................
2023-03-21 14:45:19,246:INFO:SubProcess create_model() end ==================================
2023-03-21 14:45:19,247:INFO:choose_better activated
2023-03-21 14:45:19,252:INFO:SubProcess create_model() called ==================================
2023-03-21 14:45:19,253:INFO:Initializing create_model()
2023-03-21 14:45:19,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E41544DBB0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E4154FC5B0>, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-21 14:45:19,254:INFO:Checking exceptions
2023-03-21 14:45:19,257:INFO:Importing libraries
2023-03-21 14:45:19,257:INFO:Copying training dataset
2023-03-21 14:45:19,263:INFO:Defining folds
2023-03-21 14:45:19,264:INFO:Declaring metric variables
2023-03-21 14:45:19,264:INFO:Importing untrained model
2023-03-21 14:45:19,264:INFO:Declaring custom model
2023-03-21 14:45:19,264:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:45:19,264:INFO:Starting cross validation
2023-03-21 14:45:19,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-21 14:45:35,637:INFO:Calculating mean and std
2023-03-21 14:45:35,637:INFO:Creating metrics dataframe
2023-03-21 14:45:35,639:INFO:Finalizing model
2023-03-21 14:45:39,299:INFO:Uploading results into container
2023-03-21 14:45:39,300:INFO:Uploading model into container now
2023-03-21 14:45:39,301:INFO:_master_model_container: 3
2023-03-21 14:45:39,301:INFO:_display_container: 4
2023-03-21 14:45:39,301:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4159BC850>
2023-03-21 14:45:39,301:INFO:create_model() successfully completed......................................
2023-03-21 14:45:39,401:INFO:SubProcess create_model() end ==================================
2023-03-21 14:45:39,402:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4159BC850> result for R2 is 0.9959
2023-03-21 14:45:39,402:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4158E0D90> result for R2 is 0.9943
2023-03-21 14:45:39,402:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4159BC850> is best model
2023-03-21 14:45:39,402:INFO:choose_better completed
2023-03-21 14:45:39,403:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-21 14:45:39,414:INFO:_master_model_container: 3
2023-03-21 14:45:39,416:INFO:_display_container: 3
2023-03-21 14:45:39,416:INFO:<catboost.core.CatBoostRegressor object at 0x000001E4159BC850>
2023-03-21 14:45:39,416:INFO:tune_model() successfully completed......................................
2023-03-21 14:45:40,009:INFO:Initializing finalize_model()
2023-03-21 14:45:40,009:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E41544DBB0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E4159BC850>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-03-21 14:45:40,009:INFO:Finalizing <catboost.core.CatBoostRegressor object at 0x000001E4159BC850>
2023-03-21 14:45:40,013:INFO:Initializing create_model()
2023-03-21 14:45:40,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E41544DBB0>, estimator=<catboost.core.CatBoostRegressor object at 0x000001E4159BC850>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-03-21 14:45:40,013:INFO:Checking exceptions
2023-03-21 14:45:40,016:INFO:Importing libraries
2023-03-21 14:45:40,016:INFO:Copying training dataset
2023-03-21 14:45:40,016:INFO:Defining folds
2023-03-21 14:45:40,016:INFO:Declaring metric variables
2023-03-21 14:45:40,016:INFO:Importing untrained model
2023-03-21 14:45:40,016:INFO:Declaring custom model
2023-03-21 14:45:40,018:INFO:CatBoost Regressor Imported successfully
2023-03-21 14:45:40,020:INFO:Cross validation set to False
2023-03-21 14:45:40,020:INFO:Fitting Model
2023-03-21 14:45:43,419:INFO:Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E415C79AF0>)])
2023-03-21 14:45:43,419:INFO:create_model() successfully completed......................................
2023-03-21 14:45:43,522:INFO:_master_model_container: 3
2023-03-21 14:45:43,522:INFO:_display_container: 3
2023-03-21 14:45:43,528:INFO:Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 <catboost.core.CatBoostRegressor object at 0x000001E415C79AF0>)])
2023-03-21 14:45:43,528:INFO:finalize_model() successfully completed......................................
2023-03-21 14:45:43,760:INFO:Initializing save_model()
2023-03-21 14:45:43,760:INFO:save_model(model=<catboost.core.CatBoostRegressor object at 0x000001E4159BC850>, model_name=diamond_model_quality, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-03-21 14:45:43,760:INFO:Adding model into prep_pipe
2023-03-21 14:45:43,782:INFO:diamond_model_quality.pkl saved in current working directory
2023-03-21 14:45:43,790:INFO:Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000001E4159BC850>)])
2023-03-21 14:45:43,790:INFO:save_model() successfully completed......................................
2023-03-21 14:46:07,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:46:07,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:46:07,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:46:07,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-21 14:46:09,020:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-21 14:46:12,367:INFO:Initializing load_model()
2023-03-21 14:46:12,367:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:46:12,417:INFO:Initializing load_model()
2023-03-21 14:46:12,417:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:46:12,462:INFO:Initializing predict_model()
2023-03-21 14:46:12,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F28F4CA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2893A60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F27A4DC0>)
2023-03-21 14:46:12,462:INFO:Checking exceptions
2023-03-21 14:46:12,463:INFO:Preloading libraries
2023-03-21 14:46:12,463:INFO:Set up data.
2023-03-21 14:46:12,467:INFO:Set up index.
2023-03-21 14:46:22,712:INFO:Initializing load_model()
2023-03-21 14:46:22,712:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:46:22,720:INFO:Initializing load_model()
2023-03-21 14:46:22,720:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:46:22,747:INFO:Initializing predict_model()
2023-03-21 14:46:22,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F28F0F10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2CFD940>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F29050D0>)
2023-03-21 14:46:22,748:INFO:Checking exceptions
2023-03-21 14:46:22,748:INFO:Preloading libraries
2023-03-21 14:46:22,749:INFO:Set up data.
2023-03-21 14:46:22,754:INFO:Set up index.
2023-03-21 14:47:26,577:INFO:Initializing load_model()
2023-03-21 14:47:26,577:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:47:26,580:INFO:Initializing load_model()
2023-03-21 14:47:26,580:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:47:26,615:INFO:Initializing predict_model()
2023-03-21 14:47:26,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3DC596070>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2CFC7C0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F2D73940>)
2023-03-21 14:47:26,615:INFO:Checking exceptions
2023-03-21 14:47:26,615:INFO:Preloading libraries
2023-03-21 14:47:26,616:INFO:Set up data.
2023-03-21 14:47:26,626:INFO:Set up index.
2023-03-21 14:47:50,948:INFO:Initializing load_model()
2023-03-21 14:47:50,948:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:47:50,955:INFO:Initializing load_model()
2023-03-21 14:47:50,955:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:47:50,985:INFO:Initializing predict_model()
2023-03-21 14:47:50,985:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2D75D00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F290C820>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F2CCBEE0>)
2023-03-21 14:47:50,985:INFO:Checking exceptions
2023-03-21 14:47:50,985:INFO:Preloading libraries
2023-03-21 14:47:50,986:INFO:Set up data.
2023-03-21 14:47:50,992:INFO:Set up index.
2023-03-21 14:47:52,030:INFO:Initializing predict_model()
2023-03-21 14:47:52,030:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2CE6790>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2CE89D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F2C348B0>)
2023-03-21 14:47:52,030:INFO:Checking exceptions
2023-03-21 14:47:52,030:INFO:Preloading libraries
2023-03-21 14:47:52,030:INFO:Set up data.
2023-03-21 14:47:52,030:INFO:Set up index.
2023-03-21 14:47:52,415:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  return args["labels"][column]

2023-03-21 14:47:52,417:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  return args["labels"][column]

2023-03-21 14:48:02,894:INFO:Initializing load_model()
2023-03-21 14:48:02,894:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:02,903:INFO:Initializing load_model()
2023-03-21 14:48:02,904:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:02,938:INFO:Initializing predict_model()
2023-03-21 14:48:02,938:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2CEC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2CEC3A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F2C34700>)
2023-03-21 14:48:02,939:INFO:Checking exceptions
2023-03-21 14:48:02,939:INFO:Preloading libraries
2023-03-21 14:48:02,940:INFO:Set up data.
2023-03-21 14:48:02,945:INFO:Set up index.
2023-03-21 14:48:03,866:INFO:Initializing predict_model()
2023-03-21 14:48:03,867:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F35C5EB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2CEC3A0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F3389CA0>)
2023-03-21 14:48:03,867:INFO:Checking exceptions
2023-03-21 14:48:03,867:INFO:Preloading libraries
2023-03-21 14:48:03,868:INFO:Set up data.
2023-03-21 14:48:03,874:INFO:Set up index.
2023-03-21 14:48:04,087:INFO:Initializing predict_model()
2023-03-21 14:48:04,088:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2CF0A30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F391FC40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F32B6E50>)
2023-03-21 14:48:04,088:INFO:Checking exceptions
2023-03-21 14:48:04,088:INFO:Preloading libraries
2023-03-21 14:48:04,088:INFO:Set up data.
2023-03-21 14:48:04,093:INFO:Set up index.
2023-03-21 14:48:04,358:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning:

Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.


2023-03-21 14:48:04,360:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning:

Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.


2023-03-21 14:48:15,217:INFO:Initializing load_model()
2023-03-21 14:48:15,217:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:15,224:INFO:Initializing load_model()
2023-03-21 14:48:15,224:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:15,250:INFO:Initializing predict_model()
2023-03-21 14:48:15,251:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3DC409880>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F391FF40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F3432280>)
2023-03-21 14:48:15,251:INFO:Checking exceptions
2023-03-21 14:48:15,251:INFO:Preloading libraries
2023-03-21 14:48:15,251:INFO:Set up data.
2023-03-21 14:48:15,257:INFO:Set up index.
2023-03-21 14:48:16,140:INFO:Initializing predict_model()
2023-03-21 14:48:16,140:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3DC5B36A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F33F0760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F3595160>)
2023-03-21 14:48:16,140:INFO:Checking exceptions
2023-03-21 14:48:16,140:INFO:Preloading libraries
2023-03-21 14:48:16,140:INFO:Set up data.
2023-03-21 14:48:16,140:INFO:Set up index.
2023-03-21 14:48:16,310:INFO:Initializing predict_model()
2023-03-21 14:48:16,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F3982580>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F33F0760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F32B80D0>)
2023-03-21 14:48:16,310:INFO:Checking exceptions
2023-03-21 14:48:16,310:INFO:Preloading libraries
2023-03-21 14:48:16,310:INFO:Set up data.
2023-03-21 14:48:16,310:INFO:Set up index.
2023-03-21 14:48:16,597:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning:

Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.


2023-03-21 14:48:16,598:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning:

Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.


2023-03-21 14:48:34,792:INFO:Initializing load_model()
2023-03-21 14:48:34,792:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:34,792:INFO:Initializing load_model()
2023-03-21 14:48:34,792:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:34,825:INFO:Initializing predict_model()
2023-03-21 14:48:34,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2CEC520>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F2CECA60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F3F75040>)
2023-03-21 14:48:34,825:INFO:Checking exceptions
2023-03-21 14:48:34,825:INFO:Preloading libraries
2023-03-21 14:48:34,826:INFO:Set up data.
2023-03-21 14:48:34,831:INFO:Set up index.
2023-03-21 14:48:43,683:INFO:Initializing load_model()
2023-03-21 14:48:43,683:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:43,689:INFO:Initializing load_model()
2023-03-21 14:48:43,689:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:48:43,727:INFO:Initializing predict_model()
2023-03-21 14:48:43,727:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2CFFDC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F3357760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F3F75670>)
2023-03-21 14:48:43,727:INFO:Checking exceptions
2023-03-21 14:48:43,727:INFO:Preloading libraries
2023-03-21 14:48:43,729:INFO:Set up data.
2023-03-21 14:48:43,737:INFO:Set up index.
2023-03-21 14:50:23,869:INFO:Initializing load_model()
2023-03-21 14:50:23,870:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:50:23,877:INFO:Initializing load_model()
2023-03-21 14:50:23,881:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:50:23,910:INFO:Initializing predict_model()
2023-03-21 14:50:23,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F3F6C8E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F3F6C8B0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F2D73AF0>)
2023-03-21 14:50:23,911:INFO:Checking exceptions
2023-03-21 14:50:23,911:INFO:Preloading libraries
2023-03-21 14:50:23,911:INFO:Set up data.
2023-03-21 14:50:23,917:INFO:Set up index.
2023-03-21 14:50:43,202:INFO:Initializing load_model()
2023-03-21 14:50:43,202:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:50:43,213:INFO:Initializing load_model()
2023-03-21 14:50:43,213:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:50:43,246:INFO:Initializing predict_model()
2023-03-21 14:50:43,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F2CEE550>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3DC59FF70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F28D3F70>)
2023-03-21 14:50:43,247:INFO:Checking exceptions
2023-03-21 14:50:43,247:INFO:Preloading libraries
2023-03-21 14:50:43,247:INFO:Set up data.
2023-03-21 14:50:43,253:INFO:Set up index.
2023-03-21 14:51:40,318:INFO:Initializing load_model()
2023-03-21 14:51:40,318:INFO:load_model(model_name=diamond_model, platform=None, authentication=None, verbose=True)
2023-03-21 14:51:40,324:INFO:Initializing load_model()
2023-03-21 14:51:40,324:INFO:load_model(model_name=diamond_model_quality, platform=None, authentication=None, verbose=True)
2023-03-21 14:51:40,345:INFO:Initializing predict_model()
2023-03-21 14:51:40,345:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3F546FF10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['carat', 'depth', 'table', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F56C1820>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F3F75CA0>)
2023-03-21 14:51:40,346:INFO:Checking exceptions
2023-03-21 14:51:40,346:INFO:Preloading libraries
2023-03-21 14:51:40,346:INFO:Set up data.
2023-03-21 14:51:40,354:INFO:Set up index.
2023-03-21 14:51:41,144:INFO:Initializing predict_model()
2023-03-21 14:51:41,144:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B3DC5998E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\demst\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['depth', 'table', 'price', 'x',
                                             'y', 'z'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['cut', 'color', 'clarity'],
                                    transformer=OneHotEncoder(cols=['cut',
                                                                    'color',
                                                                    'clarity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x000002B3F33430D0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002B3F339B4C0>)
2023-03-21 14:51:41,144:INFO:Checking exceptions
2023-03-21 14:51:41,144:INFO:Preloading libraries
2023-03-21 14:51:41,144:INFO:Set up data.
2023-03-21 14:51:41,150:INFO:Set up index.
2023-03-21 14:51:41,427:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning:

Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.


2023-03-21 14:51:41,428:WARNING:C:\Users\demst\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\plotly\express\_core.py:137: FutureWarning:

Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.


